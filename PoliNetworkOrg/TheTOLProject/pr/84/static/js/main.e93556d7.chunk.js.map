{"version":3,"sources":["utils/constants.ts","i18n.ts","utils/database.ts","utils/style.ts","components/Util/Button.tsx","components/Util/GeneralPurposeCollapsible.tsx","components/Util/QuestionAttachments.tsx","components/Util/RenderedText.tsx","components/Util/Question.tsx","components/Util/Select.tsx","components/pages/DBPreview.tsx","components/ErrorView.tsx","utils/storage.ts","utils/contexts.tsx","components/Footer.tsx","../public/logo3000.webp","components/Header.tsx","components/Util/Wrapper.tsx","components/pages/Home.tsx","../public/telegram_logo.svg","components/pages/About.tsx","components/ExtendCorrection/DocumentHeader.tsx","static/firefox_1.png","static/firefox_2.png","static/firefox_3.png","static/firefox_2_en.png","static/firefox_3_en.png","components/ExtendCorrection/ExtendedCorrection.tsx","components/pages/Results.tsx","components/pages/License.tsx","components/pages/Privacy.tsx","components/QuestionsForm/AnswerForm.tsx","components/QuestionsForm/BottomControls.tsx","components/QuestionsForm/QuestionHeader.tsx","components/Util/CollapsibleText.tsx","components/QuestionsForm/QuestionView.tsx","components/QuestionsForm/RecapBar.tsx","components/QuestionsForm/SectionRecap.tsx","components/QuestionsForm/Timer.tsx","components/QuestionsForm/TopControls.tsx","components/QuestionsForm/QuestionsForm.tsx","components/Util/Separator.tsx","components/pages/QPreview.tsx","components/App.tsx","index.tsx"],"names":["links","sectionInfo","ing","name","order","sample","minutes","coeff","Fraction","mat","com","sub","fis","correctionWeight","getSectionName","key","DATABASE_REF","members","tg","ah","prefix","STORAGE","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","enLocale","it","itLocale","fallbackLng","detection","lookupLocalStorage","caches","sheetDict","quesiti_ING","quesiti_MAT","quesiti_COM","quesiti_FIS","readDatabase","a","ref","STABLE","axios","get","data","db","meta","version","packageJson","Error","getImageURL","fileName","theme","baseStyle","fontFamily","color","StyleSheet","styles","fromEntries","Object","entries","map","value","reduce","acc","curr","formatNumber","num","addDecimals","parseFloat","round","toString","toLocaleString","minimumFractionDigits","maximumFractionDigits","replace","create","button","display","fontSize","alignItems","cursor","p","marginBlock","margin","icon","leftIcon","compose","this","float","marginRight","rightIcon","Button","props","style","onClick","label","outerDiv","collapsible","background","GeneralPurposeCollapsible","useState","startOpen","isOpen","setOpen","outerDivStyle","trigger","open","onOpen","onClose","easing","contentStyle","children","container","flexDirection","padding","gap","attachment","image","maxHeight","maxWidth","objectFit","QuestionAttachments","q","dbRef","attachments","length","index","src","RenderedText","text","question","option","result","textDecoration","paddingTop","width","height","TickSign","CrossSign","Question","isDebug","choice","isTest","showAttachments","id","valid","undefined","validated","String","correct","answers","letter","isCorrect","visibility","toUpperCase","select","Select","defaultValue","localValue","setLocalValue","onChange","e","newValue","target","disabled","entry","ul","paddingLeft","DBPreview","dbs","stable","setDb","MAIN","v","filter","questions","ErrorView","hidden","internal","LocalStorage","localStorage","setItem","JSON","stringify","Date","date","sixMonthsAgo","setMonth","getMonth","getItem","isDateOlderThanSixMonths","clear","handleChange","parse","MobileContext","createContext","mobile","TestContext","isDsa","toggleDsa","TestProvider","setIsDsa","useEffect","Provider","prev","justifyContent","link","flex","textAlign","mobileStyles","paddingBottom","Footer","view","useContext","linkStyle","startsWith","className","href","rel","to","div","centeredText","logoDiv","logo","col","Header","viewState","useTranslation","resolvedLanguage","lang","setLang","isTestView","useMemo","pointerEvents","alt","changeLanguage","Wrapper","center","title","wrapper","h2","centered","buttonDiv","dsaInfo","Home","t","setView","navigate","useNavigate","htmlFor","userSelect","type","checked","transitionTime","grid","list","paddingInlineStart","liP","marginBottom","telegramLink","alignSelf","telegramLogo","About","ProjectTeam","AdHoc","TgGroups","TgLogo","team","m","sort","b","i","components","tgProject","tgHelp","tgLogo","rightText","logoLink","DocumentHeader","printButton","li","listStyleType","ol","img","marginTop","nowrap","whiteSpace","printDoc","ExtendedCorrection","createRef","resultsDate","printSupported","window","browser","userAgent","navigator","includes","getTitle","document","documentTitle","content","current","onAfterPrint","onSave","FirefoxInstructions","FallbackInstructions","PrintDocument","docStyles","firstPage","forwardRef","resultTable","toLocaleDateString","language","time","toLocaleTimeString","timeStyle","values","section","find","firefoxImg1","firefoxImg2En","firefoxImg2","firefoxImg3En","firefoxImg3","issue","displayName","tableDiv","overflowX","table","borderSpacing","tableCell","paddingInline","border","tableHeader","fontWeight","backgroundColor","h3","restartDiv","restartTitle","restartButton","Results","isResultSaved","setIsResultSaved","blocker","useBlocker","exit_warn","onbeforeunload","state","confirm","proceed","location","correctionGrid","secQuestions","notGiven","wrong","forEach","answer","total","weight","score","mul","correction","add","testPassed","parseInt","tengPassed","v1","v2","v3","v4","count","info","toFraction","sec","paddingBlock","licenseImg","borderWidth","marginLeft","License","property","network","cc4","githubLicense","Link","Privacy","baseText","radioText","verticalAlign","radioSpan","AnswerForm","letterState","tmpAnswerState","currentQuestion","RadioRow","c","d","event","controlsDiv","BottomControls","tmpFlaggedState","flagged","setFlagged","updateAnswer","leftContainer","rightContainer","minWidth","answerLetter","marginInline","boxShadow","QuestionHeader","questionIndex","currentAnswer","shiftQuestionIndex","innerP","CollapsibleText","longText","trim","split","QuestionView","track","bordered","borderBottom","barContainer","boxSizing","overflow","bar","cellContainer","alignContent","cellSub","selectedCell","outline","RecapBar","sectionQuestions","active","sectionAnswers","AnswerCell","currentQuestionIndexState","selected","SectionRecap","secondsUsed","seconds","displayTime","Math","max","goToNextSection","floor","minimumIntegerDigits","clockWrapper","numbers","borderRadius","expiring","wordWrap","Timer","timer","hours","innerDiv","btnDiv","exitBtn","TopControls","SectionInfo","closeSection","onExitTest","currentSection","testing","QuestionsForm","minutesCoeff","qIndex","originalSetQIndex","alertDisplayedState","sectionState","setSection","answersState","setAnswers","timeRecordState","timeRecord","setTimeRecord","shouldShowAlert","recapBarElement","getElementById","clientWidth","maxScroll","minScroll","scrollLeft","showAlert","alert","setQIndex","nextAnswers","nextTR","restart","ignoreAlert","next","shiftQIndex","offset","useTimer","expiryTimestamp","getTimerExpDate","onExpire","isBlocked","reload","nextSection","sortedInfo","findIndex","getNextSection","res","setSeconds","getSeconds","Separator","QPreview","isCustom","setIsCustom","CustomQ","DatabaseQ","sections","setDbRef","ids","push","setID","QuestionRender","gridTemplate","idx","setText","setA","setB","setC","setD","setE","f","app","routeContainer","App","setDbs","setQuestions","loadingError","showError","setMobile","main","checkLastChange","loadDatabases","innerWidth","addEventListener","initialiseTest","validQuestions","resIds","_","shuffle","uniq","slice","router","createHashRouter","createRoutesFromElements","path","element","Layout","URL","hostname","process","useLocation","pathname","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e93556d7.chunk.js","sourcesContent":["import { Section } from './database'\nimport Fraction from 'fraction.js'\n\nexport const links = {\n  githubLicense:\n    'https://github.com/PoliNetworkOrg/TheTOLProject/blob/main/LICENSE',\n  githubSource: 'https://github.com/PoliNetworkOrg/TheTOLProject/',\n  polinetwork: 'https://polinetwork.org',\n  telegramPreparazioneTOL: 'https://t.me/joinchat/_zugEikozmcyMzA0',\n  telegramTheTOLProject: 'https://t.me/+amLdTd-EoHw1MWRk',\n  localStorageMDN:\n    'https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage'\n}\n\ninterface sectionInfoElement {\n  /** The readable name of the section */\n  name: string\n  /** The order in which the section should be tested */\n  order: number\n  /** The number of questions that should be selected */\n  sample: number\n  /** The number of sub-questions that should be selected (only applies to 'com') */\n  sub?: number\n  /** The maximum number of minutes that the user can use to complete a section */\n  minutes: number\n  /** The weight that this section's score has on the total score ({@link testTotalScore}) */\n  coeff: number | Fraction\n}\n\nexport const sectionInfo: Record<Section, sectionInfoElement> = {\n  ing: {\n    name: 'Inglese',\n    order: 1,\n    sample: 30,\n    minutes: 15,\n    coeff: new Fraction('1/3')\n  },\n  mat: {\n    name: 'Matematica',\n    order: 2,\n    sample: 25,\n    minutes: 65,\n    coeff: 2.6\n  },\n  com: {\n    name: 'Comprensione verbale',\n    order: 3,\n    sample: 1,\n    sub: 5,\n    minutes: 10,\n    coeff: 3\n  },\n  fis: {\n    name: 'Fisica',\n    order: 4,\n    sample: 5,\n    minutes: 10,\n    coeff: 2\n  }\n}\n\nexport const DSATimeModifier = 1.3\n\nexport const testTotalScore = 100\n/** Minimum score to pass the test */\nexport const testPassThreshold = 60\n/** Minimum number of correct questions to pass the test */\nexport const tengPassThreshold = 24\n/** How to weight answer when calculating the section score */\nexport const correctionWeight = {\n  correct: 1,\n  wrong: -0.25,\n  notGiven: 0\n}\n\nexport function getSectionName(key: Section) {\n  return sectionInfo[key].name\n}\n\nexport function getNextSection(currentSection: Section): Section | undefined {\n  const sortedInfo = Object.entries(sectionInfo).sort(\n    (a, b) => a[1].order - b[1].order\n  ) as [Section, sectionInfoElement][]\n  const i = sortedInfo.findIndex((e) => e[0] == currentSection)\n  return (sortedInfo[i + 1] || [])[0]\n}\n\ninterface Member {\n  name: string\n  tg: string\n  ah?: boolean\n  prefix?: string\n}\n\nexport const members: Member[] = [\n  {\n    name: 'Gabriele Zanini',\n    tg: 'zagbc'\n  },\n  {\n    name: 'Federico Grandi',\n    tg: 'federico_grandi'\n  },\n  {\n    name: 'Ilaria Corcelli',\n    tg: 'iilaria01'\n  },\n  {\n    name: 'Matteo Salicandro',\n    tg: 'Mattysal'\n  },\n  {\n    name: 'Nicolas Facchin',\n    tg: 'SuperRollyNoka'\n  },\n  {\n    name: 'Elia Maggioni',\n    tg: 'EliaMaggioni',\n    ah: true\n  },\n  {\n    name: 'Diego Aldarese',\n    tg: 'diegoaldarese',\n    ah: true\n  },\n  {\n    name: 'Tommaso Morganti',\n    tg: 'toto04_1'\n  },\n  {\n    name: 'Giovanni Menicucci',\n    tg: 'giova1211'\n  },\n  {\n    name: 'Nadia Scappini',\n    tg: 'nscapp',\n    prefix: 'Prof.ssa'\n  },\n  {\n    name: '@spyarect',\n    tg: 'spyarect',\n    ah: true\n  },\n  {\n    name: 'Clelia Di Leo',\n    tg: 'cloelia',\n    prefix: 'Prof.ssa'\n  },\n  {\n    name: 'Raif Muhammad',\n    tg: 'Raif9',\n    ah: true\n  },\n  {\n    name: 'Lorenzo Corallo',\n    tg: 'lorenzocorallo'\n  }\n]\n\nexport const STORAGE = {\n  DSA: 'tol_is_dsa',\n  LANG: 'tol_i18n_lng',\n  LAST_CHANGE: 'tol_last_change'\n} as const\n\nexport enum DATABASE_REF {\n  STABLE = 'stable',\n  MAIN = 'main'\n}\n\nexport type View = 'INFO-start' | 'TOL-testing' | 'TOL-secRecap' | 'TOL-end'\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\nimport enLocale from './locales/en.json'\nimport itLocale from './locales/it.json'\nimport { STORAGE } from './utils/constants'\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: enLocale\n      },\n      it: {\n        translation: itLocale\n      }\n    },\n    fallbackLng: 'it',\n    detection: {\n      order: ['localStorage', 'navigator', 'htmlTag'],\n      lookupLocalStorage: STORAGE.LANG,\n      caches: ['localStorage']\n    }\n  })\n\nexport default i18n\n","import axios from 'axios'\nimport fromEntries from 'fromentries'\nimport _ from 'underscore'\nimport packageJson from '../../package.json'\nimport { DATABASE_REF, sectionInfo } from './constants'\n\nexport const sheetDict = {\n  quesiti_ING: 'ing',\n  quesiti_MAT: 'mat',\n  quesiti_COM: 'com',\n  quesiti_FIS: 'fis'\n} as const\nexport type Section = typeof sheetDict[keyof typeof sheetDict]\n\nexport type AnswerLetter = 'a' | 'b' | 'c' | 'd' | 'e'\n\nexport interface Question {\n  id: string\n  text: string\n  answers: Record<AnswerLetter, string>\n  correct: AnswerLetter\n  attachments: string[]\n  validated: boolean\n\n  // These are only present for COM questions\n  sub?: string\n  track?: string\n}\n\nexport type QuestionsData = Record<Section, Question[]>\n\nexport interface Database extends QuestionsData {\n  meta: {\n    version: string\n  }\n}\n\nexport async function readDatabase(ref: DATABASE_REF = DATABASE_REF.STABLE) {\n  const db = (\n    await axios.get(\n      `https://raw.githubusercontent.com/PoliNetworkOrg/TheTOLProjectData/${ref}/database.json`\n    )\n  )?.data as Database\n\n  if (db?.meta?.version != packageJson.version)\n    throw new Error(\n      `Database version doesn't match application.\\nDatabase: ${db?.meta?.version}\\nApp: ${packageJson.version}`\n    )\n\n  return db\n}\n\nexport function selectRandomQuestions(db: Database): QuestionsData {\n  return fromEntries(\n    // Manipulate db entries\n    (Object.entries(db) as [Section /* or \"meta\" */, Question[]][])\n      // Select only entries associated with a section <=> exclude \"meta\"\n      .filter(([key]) => (Object.values(sheetDict) as string[]).includes(key))\n      .map(([key, questions]) => {\n        // Select only validated questions\n        const validQuestions = questions.filter((q) => q.validated)\n\n        // Get the question ids, remove duplicates, shuffle them, and select the appropriate number of questions.\n        const resIds = _.shuffle(_.uniq(validQuestions.map((v) => v.id))).slice(\n          0,\n          sectionInfo[key].sample\n        )\n\n        // Return only the questions with a selected ID\n        return [\n          key,\n          _.shuffle(validQuestions.filter((q) => resIds.includes(q.id)))\n        ]\n      })\n  ) as QuestionsData\n}\n\nexport function getImageURL(\n  fileName: string,\n  ref: DATABASE_REF = DATABASE_REF.STABLE\n) {\n  return `https://raw.githubusercontent.com/PoliNetworkOrg/TheTOLProjectData/${ref}/img/${fileName}`\n}\n\nexport type DatabaseStore = Record<DATABASE_REF, Database>\n","import Fraction from 'fraction.js'\nimport fromEntries from 'fromentries'\n\nexport const theme = {\n  boxShadow:\n    '1px 0 0 0 #606060, 0 1px 0 0 #606060, 1px 1px 0 0 #606060, /* corner */ 1px 0 0 0 #606060 inset, 0 1px 0 0 #606060 inset',\n  lightBackground: '#F3F3EE',\n  lightBorder: '#D5DFE4',\n  primary: '#069',\n  questionYellow: 'yellow',\n  questionGreen: '#00D700',\n  softBlack: '#333',\n  timerGreen: '#009527',\n  timerRed: 'red'\n}\n\nexport const baseStyle: React.CSSProperties = {\n  fontFamily: 'Verdana, Roboto',\n  color: theme.softBlack\n}\n\ntype CSSProperties = {\n  [key: string]: React.CSSProperties\n}\n\n/** Basic implementation of the StyleSheet class present in React Native */\nexport class StyleSheet {\n  static create<Styles extends CSSProperties>(styles: Styles): Styles {\n    return fromEntries(\n      Object.entries(styles).map(([key, value]) => [\n        key,\n        { ...baseStyle, ...value }\n      ])\n    ) as Styles\n  }\n\n  static compose(\n    ...styles: (React.CSSProperties | undefined | false)[]\n  ): React.CSSProperties {\n    return styles.reduce(\n      (acc, curr) => ({ ...acc, ...(curr || {}) }),\n      {}\n    ) as React.CSSProperties\n  }\n}\n\nexport function formatNumber(num: number | Fraction, addDecimals = false) {\n  return (\n    typeof num == 'number'\n      ? num\n      : parseFloat(num.round(addDecimals ? 2 : 0).toString())\n  )\n    .toLocaleString('it-IT', {\n      minimumFractionDigits: addDecimals ? 2 : 0,\n      maximumFractionDigits: 2\n    })\n    .replace(/\\./g, ',')\n}\n","import { StyleSheet } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  button: {\n    display: 'flex',\n    fontFamily: ' Arial',\n    fontSize: '9.5pt',\n    alignItems: 'center',\n    cursor: 'pointer'\n  },\n  p: {\n    display: 'inline-block',\n    marginBlock: 0,\n    margin: 0,\n    fontFamily: 'Arial'\n  },\n  icon: {\n    display: 'flex'\n  },\n  get leftIcon() {\n    return StyleSheet.compose(this.icon, {\n      float: 'left',\n      marginRight: '2px'\n    })\n  },\n  get rightIcon() {\n    return StyleSheet.compose(this.icon, {\n      float: 'right',\n      marginRight: '2px'\n    })\n  }\n})\n\ninterface ButtonProps {\n  label: string\n  onClick?: () => void\n  style?: React.CSSProperties\n  leftIcon?: () => JSX.Element\n  rightIcon?: () => JSX.Element\n}\n\nexport default function Button(props: ButtonProps) {\n  return (\n    <button\n      style={StyleSheet.compose(styles.button, props.style || {})}\n      onClick={props.onClick}\n    >\n      <span style={styles.leftIcon}>{props.leftIcon && props.leftIcon()}</span>\n      <p style={styles.p}>{props.label}</p>\n      <span style={styles.rightIcon}>\n        {props.rightIcon && props.rightIcon()}\n      </span>\n    </button>\n  )\n}\n","import { ReactNode, useState } from 'react'\nimport Collapsible from 'react-collapsible'\nimport { StyleSheet, theme } from '../../utils/style'\nimport Button from './Button'\n\nconst styles = StyleSheet.create({\n  outerDiv: {\n    margin: '10px'\n  },\n  collapsible: {\n    background: theme.lightBackground,\n    margin: '5px'\n  }\n})\n\ninterface GeneralPurposeCollapsibleProps {\n  label: string\n  children: ReactNode\n  startOpen?: boolean\n  contentStyle?: React.CSSProperties\n  outerDivStyle?: React.CSSProperties\n  onOpen?: () => void\n  onClose?: () => void\n}\nexport default function GeneralPurposeCollapsible(\n  props: GeneralPurposeCollapsibleProps\n) {\n  const [isOpen, setOpen] = useState(props.startOpen ?? true)\n\n  return (\n    <div style={StyleSheet.compose(styles.outerDiv, props.outerDivStyle)}>\n      <Collapsible\n        trigger={\n          <Button label={props.label} onClick={() => setOpen(!isOpen)} />\n        }\n        open={isOpen}\n        onOpen={props.onOpen}\n        onClose={props.onClose}\n        easing=\"ease-in-out\"\n      >\n        <div style={StyleSheet.compose(styles.collapsible, props.contentStyle)}>\n          {props.children}\n        </div>\n      </Collapsible>\n    </div>\n  )\n}\n","import { DATABASE_REF } from '../../utils/constants'\nimport { getImageURL, Question } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport GeneralPurposeCollapsible from './GeneralPurposeCollapsible'\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBlock: 0,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  collapsible: {\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  attachment: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    gap: '5px'\n  },\n  image: {\n    maxHeight: '500px',\n    maxWidth: '100%',\n    objectFit: 'contain'\n  }\n})\n\ninterface Props {\n  q: Question\n  dbRef: DATABASE_REF\n}\n\nexport default function QuestionAttachments({ q, dbRef }: Props) {\n  return (\n    <>\n      {q.attachments?.length && (\n        <GeneralPurposeCollapsible\n          label=\"mostra/nascondi immagini\"\n          startOpen={false}\n        >\n          {q.attachments.map((fileName, index) => (\n            <span key={index + 1} style={styles.attachment}>\n              <p style={styles.container}>Immagine {index + 1}:</p>\n              <img src={getImageURL(fileName, dbRef)} style={styles.image} />\n            </span>\n          ))}\n        </GeneralPurposeCollapsible>\n      )}\n    </>\n  )\n}\n","import Latex from 'react-latex'\n\ninterface RenderedTextProps {\n  text: string\n}\nexport default function RenderedText({ text }: RenderedTextProps) {\n  return <Latex>{text}</Latex>\n}\n","import { DATABASE_REF } from '../../utils/constants'\nimport { Question as IQuestion } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport QuestionAttachments from './QuestionAttachments'\nimport RenderedText from './RenderedText'\n\nconst styles = StyleSheet.create({\n  question: {\n    padding: 1\n  },\n  option: {\n    display: 'flex',\n    gap: 8,\n    margin: '4px 0'\n  },\n  result: {\n    textDecoration: 'underline',\n    paddingTop: 4,\n    display: 'block'\n  },\n  icon: {\n    width: '10px',\n    height: '10px'\n  }\n})\n\nconst TickSign = () => <>&#10003;</>\nconst CrossSign = () => <>&#10005;</>\n\ninterface Props {\n  q: IQuestion\n  isDebug?: boolean\n  choice?: string\n  isTest?: boolean\n  showAttachments?: boolean\n  dbRef?: DATABASE_REF\n}\n\nexport default function Question({\n  q,\n  isDebug = false,\n  choice = '',\n  isTest = false,\n  showAttachments = false,\n  dbRef = DATABASE_REF.STABLE\n}: Props) {\n  const id = q.id && (q.sub ? `[${q.id}-${q.sub}] ` : `[${q.id}] `)\n  const valid = q.validated !== undefined && `Valid: ${String(q.validated)}`\n  let result = 'Senza risposta'\n  if (choice.length === 1) {\n    result = choice === q.correct ? 'Corretta' : 'Errata'\n  }\n\n  return (\n    <div style={styles.question}>\n      <p style={{ margin: 4 }}>\n        {isDebug && (\n          <p>\n            {id} {valid}\n          </p>\n        )}\n        <RenderedText text={q.text} />\n        {isTest && <span style={styles.result}>{result}</span>}\n      </p>\n      {showAttachments && <QuestionAttachments q={q} dbRef={dbRef} />}\n\n      {Object.entries(q.answers).map(([letter, text]) => {\n        const isCorrect = q.correct === letter\n        const visibility = isCorrect || choice === letter ? 'visible' : 'hidden'\n        return (\n          <p key={letter} style={styles.option}>\n            <span style={{ visibility, ...styles.icon }}>\n              {isCorrect ? <TickSign /> : <CrossSign />}\n            </span>\n            <span>{letter.toUpperCase()}. </span>\n            <RenderedText text={text} />\n          </p>\n        )\n      })}\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { StyleSheet } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  select: {\n    display: 'flex',\n    fontFamily: ' Arial',\n    fontSize: '9.5pt',\n    alignItems: 'center'\n  }\n})\n\ninterface SelectEntry {\n  label: string\n  value: string\n}\n\ninterface ButtonProps {\n  defaultValue?: string\n  value?: string\n  disabled?: boolean\n  entries: SelectEntry[]\n  label?: string\n  onChange?: (newValue: string) => void\n  style?: React.CSSProperties\n}\n\nexport default function Select(props: ButtonProps) {\n  const [localValue, setLocalValue] = useState(props.defaultValue)\n\n  return (\n    <label>\n      {props.label || ''}\n      <select\n        value={props.value || localValue}\n        onChange={(e) => {\n          const newValue = e.target.value\n          setLocalValue(newValue)\n          props.onChange && props.onChange(newValue)\n        }}\n        style={styles.select}\n        disabled={props.disabled}\n      >\n        {props.entries.map((entry) => (\n          <option value={entry.value} key={entry.value}>\n            {entry.label}\n          </option>\n        ))}\n      </select>\n    </label>\n  )\n}\n","import { useState } from 'react'\nimport { DATABASE_REF, sectionInfo } from '../../utils/constants'\nimport {\n  Section,\n  Question as IQuestion,\n  DatabaseStore\n} from '../../utils/database'\nimport { baseStyle, StyleSheet } from '../../utils/style'\nimport GeneralPurposeCollapsible from '../Util/GeneralPurposeCollapsible'\nimport Question from '../Util/Question'\nimport Select from '../Util/Select'\n\nconst styles = StyleSheet.create({\n  ul: {\n    margin: 10,\n    paddingLeft: 16\n  }\n})\n\ninterface DBPreviewProps {\n  dbs?: DatabaseStore\n}\n\nexport default function DBPreview({ dbs }: DBPreviewProps) {\n  if (!dbs) return <div style={baseStyle}>Loading...</div>\n  const [db, setDb] = useState(dbs.stable)\n\n  return (\n    <div>\n      <Select\n        label=\"Database\"\n        entries={[\n          { value: DATABASE_REF.STABLE, label: 'Production' },\n          { value: DATABASE_REF.MAIN, label: 'Development' }\n        ]}\n        defaultValue={DATABASE_REF.STABLE}\n        onChange={(v) => setDb(dbs[v as DATABASE_REF])}\n      />\n      {(\n        Object.entries(db).filter(([key]) => key != 'meta') as [\n          Section,\n          IQuestion[]\n        ][]\n      ).map(([key, questions]) => (\n        <div key={key} style={baseStyle}>\n          <GeneralPurposeCollapsible\n            label={sectionInfo[key].name}\n            startOpen={false}\n          >\n            <ul style={styles.ul}>\n              {questions\n                .filter((q) => q.text || key == 'com')\n                .map((q) => (\n                  <li key={key + q.id + (q.sub || '')}>\n                    <Question q={q} isDebug={true} showAttachments />\n                  </li>\n                ))}\n            </ul>\n          </GeneralPurposeCollapsible>\n        </div>\n      ))}\n    </div>\n  )\n}\n","interface ErrorViewProps {\n  hidden: boolean\n  display: string\n  internal?: Error\n}\n\nexport default function ErrorView({\n  hidden,\n  display,\n  internal\n}: ErrorViewProps) {\n  return (\n    <div hidden={hidden}>\n      <h3>{display}</h3>\n      <blockquote>{internal + ''}</blockquote>\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { STORAGE } from './constants'\n\nexport class LocalStorage {\n  static handleChange() {\n    // method to call to update last change date in localStorage\n    localStorage.setItem(STORAGE.LAST_CHANGE, JSON.stringify(new Date()))\n  }\n\n  static isDateOlderThanSixMonths(date: Date): boolean {\n    const sixMonthsAgo = new Date()\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6)\n    return date < sixMonthsAgo\n  }\n\n  public static checkLastChange() {\n    // according to privacy policy, if last change is older\n    // than 6 months, then the localStorage has to be cleared\n    const date = this.getItem(STORAGE.LAST_CHANGE)\n    if (!date) return\n    if (this.isDateOlderThanSixMonths(new Date(date))) {\n      localStorage.clear()\n    }\n  }\n\n  public static setItem(key: string, value: any) {\n    // custom setItem with JSON.stringify and null/undefined check\n    if (value === null || value === undefined) return\n    localStorage.setItem(key, JSON.stringify(value))\n    this.handleChange()\n  }\n\n  public static getItem(key: string) {\n    // custom getItem with JSON.parse and null check\n    const value = localStorage.getItem(key)\n    if (!value) return null\n    return JSON.parse(value)\n  }\n}\n","import { createContext, useEffect, useState } from 'react'\nimport { STORAGE } from './constants'\nimport { LocalStorage } from './storage'\n\nexport const MobileContext = createContext({\n  mobile: false\n})\n\ninterface ITestContext {\n  isDsa: boolean\n  toggleDsa: () => void\n}\nexport const TestContext = createContext<ITestContext>({\n  isDsa: false,\n  toggleDsa: () => {\n    // implemented in Provider\n  }\n})\n\ntype TestProviderProps = React.HTMLAttributes<React.ProviderProps<ITestContext>>\nexport const TestProvider = (props: TestProviderProps) => {\n  const [isDsa, setIsDsa] = useState<boolean>(false)\n\n  const toggleDsa = () => {\n    setIsDsa((prev) => {\n      const value = !prev\n      LocalStorage.setItem(STORAGE.DSA, value)\n      return value\n    })\n  }\n\n  useEffect(() => {\n    const localValue = LocalStorage.getItem(STORAGE.DSA)\n    if (localValue === null) return\n    setIsDsa(localValue)\n  }, [])\n\n  return <TestContext.Provider value={{ isDsa, toggleDsa }} {...props} />\n}\n","import { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { links, View } from '../utils/constants'\nimport { MobileContext } from '../utils/contexts'\nimport { StyleSheet, theme } from '../utils/style'\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '15px auto',\n    fontSize: '10pt',\n    color: theme.softBlack,\n    width: '100%',\n    maxWidth: 900\n  },\n  link: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: 'inherit',\n    fontSize: '11pt',\n    alignItems: 'center'\n  }\n})\n\nconst mobileStyles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 16\n  },\n  link: StyleSheet.compose(styles.link, {\n    margin: 2\n  })\n})\n\ninterface Props {\n  view: View\n}\nexport default function Footer({ view }: Props) {\n  const { mobile } = useContext(MobileContext)\n  const linkStyle = mobile ? mobileStyles.link : styles.link\n  const replace = view.startsWith('TOL')\n  return (\n    <div\n      className=\"do-not-print\"\n      style={mobile ? mobileStyles.container : styles.container}\n    >\n      <a\n        href={links.githubSource}\n        style={linkStyle}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        Source\n      </a>\n      <Link to=\"about\" style={linkStyle} replace={replace}>\n        About\n      </Link>\n      <Link to=\"/\" style={linkStyle} replace={replace}>\n        Home\n      </Link>\n      <Link to=\"license\" style={linkStyle} replace={replace}>\n        License\n      </Link>\n      <Link to=\"privacy\" style={linkStyle} replace={replace}>\n        Privacy & Cookies\n      </Link>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logo3000.34b8e2e9.webp\";","import { useContext, useMemo, useState } from 'react'\nimport { StyleSheet } from '../utils/style'\nimport { statePair } from '../utils/types'\nimport logo from '../static/logo3000.webp'\nimport { links, View } from '../utils/constants'\nimport { MobileContext } from '../utils/contexts'\nimport { useTranslation } from 'react-i18next'\nimport { LocalStorage } from '../utils/storage'\n\nconst styles = StyleSheet.create({\n  div: {\n    height: '70px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  text: {\n    fontSize: '18pt'\n  },\n  get centeredText() {\n    return StyleSheet.compose(this.text, {\n      textAlign: 'center',\n      flex: 1\n    })\n  },\n  logoDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '10px',\n    margin: '5px',\n    textDecoration: 'none'\n  },\n  logo: {\n    height: '60px'\n  },\n  col: { flex: 1, display: 'flex' }\n})\n\ninterface HeaderProps {\n  viewState: statePair<View>\n}\n\nexport default function Header({ viewState }: HeaderProps) {\n  const { i18n } = useTranslation()\n  const { mobile } = useContext(MobileContext)\n  const [lang, setLang] = useState(i18n.resolvedLanguage)\n  const handleLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const lang = e.target.value\n    i18n.changeLanguage(lang)\n    LocalStorage.handleChange() // language saved to LocalStorage\n    setLang(lang)\n  }\n\n  const isTestView = useMemo(\n    () => viewState[0] === 'TOL-testing' || viewState[0] === 'TOL-secRecap',\n    [viewState[0]]\n  )\n\n  return (\n    <div className=\"do-not-print\" style={styles.div}>\n      <div style={styles.col}>\n        <a\n          style={{\n            ...styles.logoDiv,\n            // disable logo link when doing the test\n            pointerEvents: isTestView ? 'none' : 'all'\n          }}\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n          href={links.polinetwork}\n        >\n          <img src={logo} alt=\"logo\" style={styles.logo} />\n          {!mobile && <h1 style={styles.text}>PoliNetwork</h1>}\n        </a>\n      </div>\n\n      <div style={{ ...styles.col, flex: mobile ? 3 : 1 }}>\n        <h1 style={styles.centeredText}>The TOL Project</h1>\n      </div>\n\n      <div style={{ ...styles.col, justifyContent: 'flex-end' }}>\n        {!isTestView && (\n          <select value={lang} onChange={handleLanguageChange}>\n            <option value=\"it\">IT</option>\n            <option value=\"en\">EN</option>\n          </select>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { StyleSheet } from '../../utils/style'\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  title?: string\n  center?: boolean\n}\n\nexport default function Wrapper({\n  children,\n  center = true,\n  style,\n  title,\n  ...props\n}: Props) {\n  const styles = StyleSheet.create({\n    wrapper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: center ? 'center' : 'flex-start',\n      margin: '10px auto',\n      maxWidth: 900,\n      textAlign: center ? 'center' : 'initial',\n      ...style\n    },\n    h2: {\n      fontSize: '16pt'\n    }\n  })\n  return (\n    <div style={styles.wrapper} {...props}>\n      {title && <h2 style={styles.h2}>{title}</h2>}\n      {children}\n    </div>\n  )\n}\n","import { useContext } from 'react'\nimport Collapsible from 'react-collapsible'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { useNavigate } from 'react-router'\nimport { View } from '../../utils/constants'\nimport { TestContext } from '../../utils/contexts'\nimport { StyleSheet } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport Button from '../Util/Button'\nimport Wrapper from '../Util/Wrapper'\n\nconst styles = StyleSheet.create({\n  centered: {\n    display: 'block'\n  },\n  buttonDiv: {\n    margin: '16px',\n    display: 'flex',\n    fontSize: 14,\n    gap: 6\n  },\n  dsaInfo: {\n    maxWidth: '755px'\n  }\n})\n\ninterface InfoStartProps {\n  viewState: statePair<View>\n}\nexport default function Home({ viewState }: InfoStartProps) {\n  const { isDsa, toggleDsa } = useContext(TestContext)\n  const { t, i18n } = useTranslation()\n  const [, setView] = viewState\n\n  const navigate = useNavigate()\n  const handleStartTest = () => {\n    setView('TOL-testing')\n    navigate('/test')\n  }\n\n  return (\n    <Wrapper>\n      <p>\n        <span style={styles.centered}>\n          <b>DISCLAIMER</b>\n        </span>\n        <br />\n        {t('home.disclaimer')}\n      </p>\n      <i>{t('home.languageInfo')}</i>\n      <div style={styles.buttonDiv}>\n        <Button\n          style={{ fontSize: 14 }}\n          label={t('home.startBtn')}\n          onClick={handleStartTest}\n        />\n        <label htmlFor=\"dsa_toggle\" style={{ userSelect: 'none' }}>\n          <input\n            id=\"dsa_toggle\"\n            type=\"checkbox\"\n            checked={isDsa}\n            onChange={toggleDsa}\n          />\n          {t('home.dsaBtn')}\n        </label>\n      </div>\n      <Collapsible trigger={<></>} open={isDsa} transitionTime={150}>\n        <p style={styles.dsaInfo}>\n          <Trans i18n={i18n}>home.dsaInfo</Trans>\n        </p>\n      </Collapsible>\n    </Wrapper>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/telegram_logo.1ca7c840.svg\";","import { links, members } from '../../utils/constants'\nimport { StyleSheet, theme } from '../../utils/style'\nimport telegramLogo from '../../static/telegram_logo.svg'\nimport Wrapper from '../Util/Wrapper'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { useContext } from 'react'\nimport { MobileContext } from '../../utils/contexts'\n\nconst styles = StyleSheet.create({\n  p: {\n    textAlign: 'justify',\n    width: '100%'\n  },\n  grid: {\n    margin: '10px 0',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start'\n  },\n  col: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    height: '100%',\n    gap: 10,\n    textAlign: 'left'\n  },\n  link: {\n    display: 'inline-flex',\n    color: theme.primary,\n    gap: '5px',\n    alignItems: 'center'\n  },\n  list: {\n    paddingInlineStart: 30\n  },\n  liP: {\n    display: 'flex',\n    gap: '5px',\n    alignItems: 'center',\n    flexDirection: 'row',\n    margin: 0,\n    marginBottom: 10\n  },\n  telegramLink: {\n    display: 'inline-flex',\n    alignSelf: 'center'\n  },\n  telegramLogo: {\n    height: '17.5px'\n  }\n})\n\nexport default function About() {\n  const { i18n } = useTranslation()\n  const { mobile } = useContext(MobileContext)\n\n  return (\n    <Wrapper title=\"About\">\n      <p style={styles.p}>\n        <Trans i18n={i18n}>about.main</Trans>\n      </p>\n      <div style={{ ...styles.grid, flexDirection: mobile ? 'column' : 'row' }}>\n        <div style={styles.col}>\n          <ProjectTeam />\n        </div>\n        <div style={styles.col}>\n          <AdHoc />\n          <TgGroups />\n        </div>\n      </div>\n    </Wrapper>\n  )\n}\n\nfunction TgLogo() {\n  return (\n    <span style={styles.telegramLink}>\n      <img src={telegramLogo} style={styles.telegramLogo} />\n    </span>\n  )\n}\n\nfunction ProjectTeam() {\n  const { t } = useTranslation()\n  const team = members\n    .filter((m) => !m.ah)\n    .sort((a, b) => (a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1))\n\n  return (\n    <div>\n      <b>{t('about.projectTeam')}</b>\n      <ul style={styles.list}>\n        {team.map((m, i) => (\n          <li key={i}>\n            <p style={styles.liP}>\n              {(m.prefix || '') + ' ' + m.name}{' '}\n              <a\n                href={`https://t.me/${m.tg}`}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                style={styles.telegramLink}\n              >\n                <TgLogo />\n              </a>\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nfunction AdHoc() {\n  const ah = members\n    .filter((m) => !!m.ah)\n    .sort((a, b) => (a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1))\n\n  return (\n    <div>\n      <span>Ad hoc</span>\n      <ul style={styles.list}>\n        {ah.map((m, i) => (\n          <li key={i}>\n            <p style={styles.liP}>\n              {m.name}{' '}\n              <a\n                href={`https://t.me/${m.tg}`}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                style={styles.telegramLink}\n              >\n                <TgLogo />\n              </a>\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nfunction TgGroups() {\n  const { t, i18n } = useTranslation()\n  const components = {\n    tgProject: (\n      <a\n        href={links.telegramTheTOLProject}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        style={styles.link}\n      />\n    ),\n    tgHelp: (\n      <a\n        href={links.telegramPreparazioneTOL}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        style={styles.link}\n      />\n    ),\n    tgLogo: <TgLogo />\n  }\n  return (\n    <div>\n      <b>{t('about.supportGroups.head')}</b>\n      <ul style={styles.list}>\n        <li style={{ marginBottom: 10 }}>\n          <Trans i18n={i18n} components={components}>\n            about.supportGroups.1\n          </Trans>\n        </li>\n        <li>\n          <Trans i18n={i18n} components={components}>\n            about.supportGroups.2\n          </Trans>\n        </li>\n      </ul>\n    </div>\n  )\n}\n","import { StyleSheet } from '../../utils/style'\nimport logo from '../../static/logo3000.webp'\nimport { links } from '../../utils/constants'\n\nconst styles = StyleSheet.create({\n  div: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  text: {\n    flex: 1,\n    fontSize: '18pt',\n    display: 'inline-block'\n  },\n  get rightText() {\n    return StyleSheet.compose(this.text, {\n      textAlign: 'right'\n    })\n  },\n  logoLink: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    gap: '10px',\n    margin: '5px',\n    textDecoration: 'none'\n  },\n  logo: {\n    height: '60px'\n  }\n})\n\nexport default function DocumentHeader() {\n  return (\n    <div style={styles.div}>\n      <a\n        style={styles.logoLink}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        href={links.polinetwork}\n      >\n        <img src={logo} alt=\"logo\" style={styles.logo} />\n        <h1 style={styles.text}>PoliNetwork</h1>\n      </a>\n      <h1 style={styles.rightText}>The TOL Project</h1>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/firefox_1.90eb3665.png\";","export default __webpack_public_path__ + \"static/media/firefox_2.b3e6c5bc.png\";","export default __webpack_public_path__ + \"static/media/firefox_3.d2388c27.png\";","export default __webpack_public_path__ + \"static/media/firefox_2_en.77f4ef4f.png\";","export default __webpack_public_path__ + \"static/media/firefox_3_en.1f69454d.png\";","import { createRef, forwardRef, ReactNode, useMemo } from 'react'\nimport ReactToPrint from 'react-to-print'\nimport {\n  Question as IQuestion,\n  QuestionsData,\n  Section\n} from '../../utils/database'\nimport { AnswersData } from '../App'\nimport { links, sectionInfo } from '../../utils/constants'\nimport { StyleSheet, theme } from '../../utils/style'\nimport Button from '../Util/Button'\nimport './ExtendedCorrection.css'\nimport DocumentHeader from './DocumentHeader'\nimport firefoxImg1 from '../../static/firefox_1.png'\nimport firefoxImg2 from '../../static/firefox_2.png'\nimport firefoxImg3 from '../../static/firefox_3.png'\nimport firefoxImg2En from '../../static/firefox_2_en.png'\nimport firefoxImg3En from '../../static/firefox_3_en.png'\nimport Question from '../Util/Question'\nimport { Trans, useTranslation } from 'react-i18next'\n\nconst IMG_WIDTH = 320\nconst styles = StyleSheet.create({\n  collapsible: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '15px',\n    gap: '10px'\n  },\n  printButton: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    alignSelf: 'center',\n    gap: '5px'\n  },\n  link: {\n    color: theme.primary\n  },\n  centered: {\n    textAlign: 'center'\n  },\n  li: {\n    margin: '10px',\n    display: 'block'\n  },\n  ul: {\n    listStyleType: 'none'\n  },\n  ol: {\n    paddingLeft: 20,\n    maxWidth: IMG_WIDTH,\n    margin: '0 auto',\n    textAlign: 'left',\n    gap: 10\n  },\n  img: {\n    marginTop: 5,\n    marginBottom: 10,\n    maxWidth: IMG_WIDTH,\n    width: '100%',\n    height: 'auto',\n    objectFit: 'cover'\n  },\n  nowrap: { whiteSpace: 'nowrap' },\n  printDoc: {\n    maxWidth: '210mm',\n    margin: '0 auto'\n  }\n})\n\n// using 'other' as fallback because\n// other browsers may no longer support the api\ntype Browser = 'FirefoxAndroid' | 'other'\n\ninterface ExtendedCorrectionProps {\n  answers: AnswersData\n  questions: QuestionsData\n  resultTable: ReactNode\n  onSave: () => void\n}\n\nexport default function ExtendedCorrection(props: ExtendedCorrectionProps) {\n  const ref = createRef<HTMLDivElement>()\n  // save date to variable to keep the date\n  // when the test was taken\n  const resultsDate = new Date()\n  const printSupported: boolean = 'print' in window\n\n  let browser: Browser = 'other'\n  const userAgent = navigator.userAgent\n  if (userAgent.includes('Firefox') && userAgent.includes('Android')) {\n    browser = 'FirefoxAndroid'\n  }\n\n  const getTitle = (): string =>\n    `The TOL Project ${resultsDate\n      .toLocaleString()\n      .replace(/\\/|:/g, '-')\n      .replace(/,/g, '')}`\n\n  if (!printSupported) {\n    document.title = getTitle()\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <div style={styles.collapsible}>\n      {printSupported ? (\n        <div style={styles.printButton} className=\"do-not-print\">\n          <ReactToPrint\n            documentTitle={getTitle()}\n            content={() => ref.current}\n            trigger={() => <Button label={t('results.btn.save')} />}\n            onAfterPrint={props.onSave}\n          />\n        </div>\n      ) : (\n        <>\n          {browser === 'FirefoxAndroid' && <FirefoxInstructions />}\n          {browser === 'other' && <FallbackInstructions />}\n        </>\n      )}\n      <PrintDocument ref={ref} {...props} />\n    </div>\n  )\n}\n\nconst docStyles = StyleSheet.create({\n  firstPage: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 4\n  },\n  li: {\n    marginBottom: 10\n  }\n})\n\nconst PrintDocument = forwardRef<HTMLDivElement, ExtendedCorrectionProps>(\n  (props: ExtendedCorrectionProps, ref) => {\n    const { resultTable, questions, answers } = props\n    const { t, i18n } = useTranslation()\n\n    const resultsDate = new Date()\n    const date = useMemo(\n      () => ({\n        date: resultsDate.toLocaleDateString(i18n.language),\n        time: resultsDate.toLocaleTimeString(i18n.language, {\n          timeStyle: 'short'\n        })\n      }),\n      [i18n.language]\n    )\n\n    return (\n      <div className=\"print-only\" ref={ref} style={styles.printDoc}>\n        <div style={docStyles.firstPage}>\n          <DocumentHeader />\n          <p style={styles.centered}>\n            <Trans i18n={i18n} values={{ date: date.date, time: date.time }}>\n              results.pdf.title\n            </Trans>\n          </p>\n          {resultTable}\n          <p>\n            <Trans\n              i18n={i18n}\n              components={{\n                tg: (\n                  <a\n                    href={links.telegramPreparazioneTOL}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    style={styles.link}\n                  />\n                )\n              }}\n            >\n              results.pdf.info.1\n            </Trans>\n          </p>\n          <p>{t('results.pdf.info.2')}</p>\n        </div>\n        {(Object.entries(questions) as [Section, IQuestion[]][])\n          .sort((a, b) => sectionInfo[a[0]].order - sectionInfo[b[0]].order)\n          .map(([section, values]) => (\n            <div key={section}>\n              <b>{sectionInfo[section].name}</b>\n              <ol>\n                {values.map((q) => {\n                  const letter = answers[section].find(\n                    (a) => a?.id == q.id && a?.sub == q.sub\n                  )?.letter\n                  return (\n                    <li key={q.id + (q.sub || '')} style={docStyles.li}>\n                      <Question q={q} choice={letter} isTest />\n                    </li>\n                  )\n                })}\n              </ol>\n            </div>\n          ))}\n      </div>\n    )\n  }\n)\nPrintDocument.displayName = 'Document'\n\nfunction FirefoxInstructions() {\n  const { t, i18n } = useTranslation()\n  return (\n    <div className=\"do-not-print\">\n      <h3>{t('results.save.title')}</h3>\n      <p>{t('results.save.firefox.body.1')}</p>\n      <p>{t('results.save.firefox.body.2')}</p>\n      <ol style={styles.ol}>\n        <li>{t('results.save.firefox.li.1')}</li>\n        <img src={firefoxImg1} style={styles.img} />\n\n        <li>{t('results.save.firefox.li.2')}</li>\n        <img\n          src={i18n.language.startsWith('en') ? firefoxImg2En : firefoxImg2}\n          style={styles.img}\n        />\n\n        <li>{t('results.save.firefox.li.3')}</li>\n        <img\n          src={i18n.language.startsWith('en') ? firefoxImg3En : firefoxImg3}\n          style={styles.img}\n        />\n      </ol>\n    </div>\n  )\n}\n\nfunction FallbackInstructions() {\n  const { t, i18n } = useTranslation()\n  return (\n    <div className=\"do-not-print\">\n      <h3>{t('results.save.title')}</h3>\n      <p>{t('results.save.fallback.1')}</p>\n      <p>{t('results.save.fallback.2')}</p>\n      <p>\n        <Trans\n          i18n={i18n}\n          components={{\n            issue: (\n              <a\n                href=\"https://github.com/PoliNetworkOrg/TheTOLProject/issues/35\"\n                rel=\"noreferrer noopener\"\n                target=\"_blank\"\n              />\n            )\n          }}\n        >\n          results.save.fallback.3\n        </Trans>\n      </p>\n    </div>\n  )\n}\n","import Fraction from 'fraction.js'\nimport fromEntries from 'fromentries'\nimport {\n  correctionWeight,\n  getSectionName,\n  sectionInfo,\n  tengPassThreshold,\n  testPassThreshold,\n  testTotalScore,\n  View\n} from '../../utils/constants'\nimport { Question, QuestionsData, Section } from '../../utils/database'\nimport { formatNumber, StyleSheet, theme } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\nimport ExtendedCorrection from '../ExtendCorrection/ExtendedCorrection'\nimport {\n  unstable_useBlocker as useBlocker,\n  useNavigate\n} from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport { statePair } from '../../utils/types'\nimport { Trans, useTranslation } from 'react-i18next'\nimport Wrapper from '../Util/Wrapper'\n\nconst styles = StyleSheet.create({\n  div: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    fontSize: '11pt'\n  },\n  tableDiv: {\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: '90vw',\n    overflowX: 'auto',\n    display: 'flex'\n  },\n  table: { borderSpacing: 0, margin: 'auto' },\n  tableCell: {\n    padding: '5px',\n    paddingInline: '10px',\n    textAlign: 'center',\n    border: `thin solid ${theme.lightBorder}`,\n    borderSpacing: '0px',\n    fontSize: '9.5pt'\n  },\n  get tableHeader() {\n    return StyleSheet.compose(this.tableCell, {\n      fontWeight: 'bold',\n      backgroundColor: theme.lightBackground,\n      textAlign: 'left'\n    })\n  },\n  centeredText: {\n    textAlign: 'center'\n  },\n  p: {\n    padding: '10px',\n    textAlign: 'justify'\n  },\n  resultTable: { display: 'flex', flexDirection: 'column' },\n  h3: {\n    marginBottom: 0,\n    paddingInline: '10px'\n  },\n  restartDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  restartTitle: {\n    textAlign: 'center',\n    maxWidth: 500\n  },\n  restartButton: {\n    margin: '12px',\n    marginBottom: '32px'\n  }\n})\n\ninterface ResultsProps {\n  answers: AnswersData\n  questions: QuestionsData\n  viewState: statePair<View>\n}\nexport default function Results(props: ResultsProps) {\n  const [isResultSaved, setIsResultSaved] = useState(false)\n  const blocker = useBlocker(!isResultSaved)\n  const { t, i18n } = useTranslation()\n\n  const navigate = useNavigate()\n  const handleNewTest = () => {\n    navigate('/', { replace: true })\n  }\n\n  const exit_warn = t('results.exitWarn')\n  useEffect(() => {\n    // set reload protection on first render\n    window.onbeforeunload = () => exit_warn\n\n    if (blocker.state === 'blocked' && !isResultSaved) {\n      const confirmExit = confirm(exit_warn)\n      if (confirmExit) {\n        // user confirmed to leave the page\n        // set onbeforeunload to null, otherwise the prompt is shown twice\n        window.onbeforeunload = null\n        props.viewState[1]('INFO-start')\n        blocker.proceed?.()\n      }\n    }\n  }, [blocker, blocker.location])\n\n  const { answers, questions } = props\n\n  const correctionGrid = fromEntries(\n    (Object.entries(questions) as [Section, Question[]][]).map(\n      ([section, secQuestions]) => {\n        let correct = 0,\n          notGiven = 0,\n          wrong = 0\n\n        secQuestions.forEach((q) => {\n          const answer = answers[section].find(\n            (a) => a && a.id == q.id && a.sub == q.sub\n          )\n\n          if (!answer || !answer.letter) notGiven++\n          else if (answer.letter == q.correct) correct++\n          else wrong++\n        })\n\n        const total = secQuestions.length,\n          sample = sectionInfo[section].sample,\n          sub = sectionInfo[section].sub || 1,\n          weight = sectionInfo[section].coeff\n\n        return [\n          section,\n          {\n            total,\n            correct,\n            notGiven,\n            wrong,\n            weight,\n            score: new Fraction(\n              correctionWeight.correct * correct +\n                correctionWeight.wrong * wrong +\n                correctionWeight.notGiven * notGiven\n            )\n              .div(total)\n              .mul(sample * sub)\n          }\n        ]\n      }\n    )\n  )\n\n  const score = (\n    Object.entries(correctionGrid) as [Section, typeof correctionGrid[string]][]\n  )\n    .map(([, correction]) => correction.score.mul(correction.weight))\n    .reduce((acc, curr) => acc.add(curr), new Fraction(0))\n\n  const roundedScore = parseInt(score.round(0).toString(0))\n  const testPassed = roundedScore >= testPassThreshold,\n    tengPassed = correctionGrid.ing?.correct >= tengPassThreshold\n\n  const resultTable = () => (\n    <div style={styles.resultTable}>\n      <p style={styles.centeredText}>\n        <br />\n        TOL{' '}\n        {testPassed\n          ? `${t('results.test.passed')} ${!tengPassed ? ' (OFA TENG)' : ''}`\n          : `${t('results.test.failed')}: OFA TEST${\n              !tengPassed ? ' + OFA TENG' : ''\n            }`}\n        <br />\n        {t('results.test.points')}: {formatNumber(score)} /{' '}\n        {formatNumber(testTotalScore)} ({formatNumber(score, true)})\n      </p>\n      <br />\n\n      <div style={styles.tableDiv}>\n        <table style={styles.table}>\n          <tr>\n            <td></td>\n            <td style={styles.tableHeader}>\n              {t('results.table.header.score')}\n            </td>\n            <td style={styles.tableHeader}>{t('results.table.header.numQ')}</td>\n            <td style={styles.tableHeader}>\n              {t('results.table.header.correct')}\n            </td>\n            <td style={styles.tableHeader}>\n              {t('results.table.header.wrong')}\n            </td>\n            <td style={styles.tableHeader}>\n              {t('results.table.header.notGiven')}\n            </td>\n          </tr>\n          {(\n            Object.entries(correctionGrid) as [\n              Section,\n              typeof correctionGrid[Section]\n            ][]\n          )\n            .sort((a, b) => sectionInfo[a[0]].order - sectionInfo[b[0]].order)\n            .map(([section, correction]) => (\n              <tr key={section}>\n                <td style={styles.tableHeader}>{getSectionName(section)}</td>\n                <td style={styles.tableCell}>\n                  {formatNumber(correction.score, true)}\n                </td>\n                <td style={styles.tableCell}>{correction.total}</td>\n                <td style={styles.tableCell}>{correction.correct}</td>\n                <td style={styles.tableCell}>{correction.wrong}</td>\n                <td style={styles.tableCell}>{correction.notGiven}</td>\n              </tr>\n            ))}\n        </table>\n      </div>\n      <br />\n    </div>\n  )\n\n  return (\n    <Wrapper center={false}>\n      <div style={styles.div}>\n        <div className=\"do-not-print\">{resultTable()}</div>\n\n        <ExtendedCorrection\n          answers={props.answers}\n          questions={props.questions}\n          resultTable={resultTable()}\n          onSave={() => setIsResultSaved(true)}\n        />\n\n        <div className=\"do-not-print\">\n          <h3 style={styles.h3}>{t('results.pointsCalc.title')}</h3>\n          <p style={styles.p}>\n            <Trans\n              i18n={i18n}\n              values={{\n                v1: formatNumber(testTotalScore, true),\n                v2: formatNumber(testPassThreshold),\n                v3: sectionInfo.ing.name,\n                v4: formatNumber(tengPassThreshold)\n              }}\n            >\n              results.pointsCalc.body.1\n            </Trans>\n            <Trans i18n={i18n}>{t('results.pointsCalc.ul.1')}</Trans>\n            <ul>\n              <li>\n                <Trans\n                  i18n={i18n}\n                  values={{ v: formatNumber(correctionWeight.correct) }}\n                  count={correctionWeight.correct === 1 ? 1 : 2}\n                >\n                  results.pointsCalc.ul.item.1\n                </Trans>\n              </li>\n              <li>\n                <Trans\n                  i18n={i18n}\n                  values={{ v: formatNumber(correctionWeight.wrong) }}\n                  count={correctionWeight.wrong === 1 ? 1 : 2}\n                >\n                  results.pointsCalc.ul.item.2\n                </Trans>\n              </li>\n              <li>\n                <Trans\n                  i18n={i18n}\n                  values={{ v: formatNumber(correctionWeight.notGiven) }}\n                  count={correctionWeight.notGiven === 1 ? 1 : 2}\n                >\n                  results.pointsCalc.ul.item.3\n                </Trans>\n              </li>\n            </ul>\n            {t('results.pointsCalc.ul.2')}\n            <ul>\n              {Object.entries(sectionInfo).map(([, info], index) => (\n                <li key={index}>\n                  {typeof info.coeff == 'number'\n                    ? formatNumber(info.coeff)\n                    : info.coeff.toFraction()}\n                  <Trans\n                    i18n={i18n}\n                    values={{\n                      sec: info.name\n                    }}\n                  >\n                    results.pointsCalc.ul.item.4\n                  </Trans>\n                </li>\n              ))}\n            </ul>\n            <Trans i18n={i18n}>results.pointsCalc.body.2</Trans>\n          </p>\n          <div style={styles.restartDiv}>\n            <h3 style={styles.restartTitle}>{t('results.saveReminder')}</h3>\n            <Button\n              label={t('results.btn.home')}\n              style={styles.restartButton}\n              onClick={handleNewTest}\n            />\n          </div>\n        </div>\n      </div>\n    </Wrapper>\n  )\n}\n","import { Trans, useTranslation } from 'react-i18next'\nimport { links } from '../../utils/constants'\nimport { StyleSheet } from '../../utils/style'\nimport Wrapper from '../Util/Wrapper'\n\nconst styles = StyleSheet.create({\n  div: {\n    paddingBlock: '15px'\n  },\n  centered: {\n    textAlign: 'center',\n    margin: 0\n  },\n  licenseImg: {\n    borderWidth: 0,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    display: 'block'\n  }\n})\n\nexport default function License() {\n  const { i18n } = useTranslation()\n  const components = {\n    title: (\n      <span\n        {...{ 'xmlns:dct': 'https://purl.org/dc/terms/' }}\n        property=\"dct:title\"\n      />\n    ),\n    network: (\n      <a\n        href=\"https://polinetwork.org/it/projects/\"\n        property=\"cc:attributionName\"\n        rel=\"cc:attributionURL noreferrer noopener\"\n        target=\"_blank\"\n      />\n    ),\n    cc4: (\n      <a\n        rel=\"license noreferrer noopener\"\n        href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n        target=\"_blank\"\n      />\n    ),\n    githubLicense: (\n      <a\n        {...{ 'xmlns:cc': 'https://creativecommons.org/ns#' }}\n        href={links.githubLicense}\n        rel=\"cc:morePermissions noreferrer noopener\"\n        target=\"_blank\"\n      />\n    )\n  }\n  return (\n    <Wrapper title=\"License\">\n      <p>\n        <Trans i18n={i18n} components={components}>\n          license.main\n        </Trans>\n      </p>\n      <a\n        rel=\"license noreferrer noopener\"\n        href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n        target=\"_blank\"\n        style={{ margin: 10 }}\n      >\n        <img\n          alt=\"Creative Commons License\"\n          style={styles.licenseImg}\n          src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\"\n        />\n      </a>\n    </Wrapper>\n  )\n}\n","import { AnchorHTMLAttributes } from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { links } from '../../utils/constants'\nimport Wrapper from '../Util/Wrapper'\n\nfunction Link({\n  title,\n  children,\n  href,\n  ...props\n}: AnchorHTMLAttributes<HTMLAnchorElement>) {\n  return (\n    <a href={href} target=\"_blank\" rel=\"noreferrer noopener\" {...props}>\n      {title}\n      {children}\n    </a>\n  )\n}\n\nexport default function Privacy() {\n  const { i18n } = useTranslation()\n  const components = {\n    localStorage: <Link title=\"local storage\" href={links.localStorageMDN} />\n  }\n  return (\n    <Wrapper title=\"Privacy & Cookies\">\n      <p>\n        <Trans\n          i18n={i18n}\n          components={{\n            link: components.localStorage\n          }}\n        >\n          privacy.localStorage\n        </Trans>\n      </p>\n    </Wrapper>\n  )\n}\n","import { Question } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { Answer } from '../App'\nimport RenderedText from '../Util/RenderedText'\n\nconst styles = StyleSheet.create({\n  baseText: {\n    fontSize: '11pt'\n  },\n  label: {\n    display: 'flex',\n    marginBottom: '2px'\n  },\n  radioText: {\n    display: 'flex',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    paddingInline: '10px',\n    alignItems: 'flex-start'\n  },\n  radioSpan: {\n    width: '2em',\n    float: 'left',\n    display: 'inline-block'\n  }\n})\n\ninterface AnswerFormProps {\n  currentAnswer: Answer | undefined\n  currentQuestion: Question\n  tmpAnswerState: statePair<Answer['letter']>\n}\n\nexport default function AnswerForm(props: AnswerFormProps) {\n  const letterState = props.tmpAnswerState\n\n  if (!props.currentQuestion)\n    return (\n      <span style={styles.baseText}>\n        <br />\n        No answers to display ¯\\_(ツ)_/¯\n      </span>\n    )\n\n  return (\n    <div>\n      <RadioRow\n        letter=\"a\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.a}\n      />\n      <RadioRow\n        letter=\"b\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.b}\n      />\n      <RadioRow\n        letter=\"c\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.c}\n      />\n      <RadioRow\n        letter=\"d\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.d}\n      />\n      <RadioRow\n        letter=\"e\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.e}\n      />\n      <RadioRow letter={undefined} letterState={letterState} text=\"Non so\" />\n    </div>\n  )\n}\n\ninterface RadioRowProps {\n  letter: Answer['letter']\n  letterState: statePair<Answer['letter']>\n  text: string\n}\nfunction RadioRow(props: RadioRowProps) {\n  return (\n    <tr style={styles.baseText}>\n      <label style={styles.label}>\n        <td style={styles.radioText}>\n          <span style={styles.radioSpan}>\n            {props.letter?.toUpperCase() || '?'}{' '}\n          </span>\n          <input\n            type=\"radio\"\n            value={props.letter}\n            checked={props.letter == props.letterState[0]}\n            onChange={(event) => {\n              // @ts-expect-error The value is correct\n              props.letterState[1](event.target.value || undefined)\n            }}\n          />\n        </td>\n        <td>\n          <RenderedText text={props.text} />\n        </td>\n      </label>\n    </tr>\n  )\n}\n","import { StyleSheet, theme } from '../../utils/style'\nimport { FaCheck } from 'react-icons/fa'\nimport Button from '../Util/Button'\nimport { statePair } from '../../utils/types'\nimport { Answer } from '../App'\nimport { Question } from '../../utils/database'\n\nconst styles = StyleSheet.create({\n  controlsDiv: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'flex-end',\n    fontSize: '9.5pt',\n    verticalAlign: 'middle',\n    gap: '10px',\n    paddingBlock: '10px'\n  },\n  label: { display: 'flex', alignItems: 'center' },\n  icon: { color: theme.timerGreen }\n})\n\ninterface BottomControlsProps {\n  currentQuestion: Question\n  tmpAnswerState: statePair<Answer['letter']>\n  tmpFlaggedState: statePair<boolean>\n  updateAnswer: (updatedAnswer: Answer) => void\n}\nexport default function BottomControls(props: BottomControlsProps) {\n  const [flagged, setFlagged] = props.tmpFlaggedState\n\n  if (!props.currentQuestion) return <div style={styles.controlsDiv} />\n\n  return (\n    <div style={styles.controlsDiv}>\n      <label style={styles.label}>\n        <input\n          type=\"checkbox\"\n          checked={flagged}\n          onChange={() => {\n            setFlagged(!flagged)\n          }}\n        />\n        <span>Da rivedere</span>\n      </label>\n      <Button\n        label=\"Conferma e vai alla successiva\"\n        leftIcon={() => <FaCheck style={styles.icon} />}\n        onClick={() => {\n          props.updateAnswer({\n            id: props.currentQuestion.id,\n            sub: props.currentQuestion.sub,\n            letter: props.tmpAnswerState[0],\n            flagged\n          })\n        }}\n      />\n    </div>\n  )\n}\n","import { useContext } from 'react'\nimport { Question } from '../../utils/database'\nimport { StyleSheet, theme } from '../../utils/style'\nimport { Answer } from '../App'\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io'\nimport Button from '../Util/Button'\nimport { MobileContext } from '../../utils/contexts'\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  leftContainer: {\n    display: 'flex'\n  },\n  rightContainer: {\n    display: 'flex',\n    padding: '1em',\n    gap: '5px'\n  },\n  p: {\n    textAlign: 'left',\n    fontSize: '11pt',\n    minWidth: '4em',\n    padding: '7.5px'\n  },\n  get question() {\n    return StyleSheet.compose(this.p, {\n      fontWeight: 'bold',\n      width: '7.1em',\n      paddingLeft: 0\n    })\n  },\n  get answerLetter() {\n    return StyleSheet.compose(this.p, {\n      textAlign: 'center',\n      marginInline: '5px',\n      boxShadow: theme.boxShadow\n    })\n  },\n  icon: {\n    height: '17.5px',\n    width: '17.5px',\n    color: theme.primary\n  },\n  button: {\n    paddingBlock: 0\n  }\n})\n\nconst mobileStyles = StyleSheet.create({\n  container: StyleSheet.compose(styles.container, {\n    flexDirection: 'column-reverse'\n  }),\n  rightContainer: StyleSheet.compose(styles.rightContainer, {\n    justifyContent: 'space-between'\n  })\n})\n\ninterface QuestionHeaderProps {\n  currentAnswer: Answer\n  questionIndex: number\n  sectionQuestions: Question[]\n  shiftQuestionIndex: (offset: number) => void\n}\nexport default function QuestionHeader(props: QuestionHeaderProps) {\n  const { mobile } = useContext(MobileContext)\n  return (\n    <div style={mobile ? mobileStyles.container : styles.container}>\n      <div style={styles.leftContainer}>\n        <p style={styles.question}>Domanda {props.questionIndex + 1}</p>\n        <p\n          style={StyleSheet.compose(styles.answerLetter, {\n            backgroundColor: props.currentAnswer?.flagged\n              ? theme.questionYellow\n              : props.currentAnswer?.letter\n              ? theme.questionGreen\n              : 'inherit'\n          })}\n        >\n          {(props.currentAnswer?.letter?.toUpperCase() || '') +\n            (props.currentAnswer?.flagged ? '?' : '') || ' '}\n        </p>\n        <p style={styles.p}>\n          Risposta {props.currentAnswer?.letter ? '' : 'non '}data\n        </p>\n      </div>\n      <div style={mobile ? mobileStyles.rightContainer : styles.rightContainer}>\n        <Button\n          label=\"precedente\"\n          onClick={() => props.shiftQuestionIndex(-1)}\n          style={styles.button}\n          leftIcon={() => <IoMdArrowRoundBack style={styles.icon} />}\n        />\n        <Button\n          label=\"successiva\"\n          onClick={() => props.shiftQuestionIndex(1)}\n          style={styles.button}\n          rightIcon={() => <IoMdArrowRoundForward style={styles.icon} />}\n        />\n      </div>\n    </div>\n  )\n}\n","import { StyleSheet } from '../../utils/style'\nimport GeneralPurposeCollapsible from './GeneralPurposeCollapsible'\n\nconst styles = StyleSheet.create({\n  p: {\n    margin: '2px',\n    padding: '10px',\n    textAlign: 'justify'\n  },\n  innerP: { padding: '1px', margin: 0 }\n})\n\ninterface CollapsibleTextProps {\n  label: string\n  longText: string\n  startOpen?: boolean\n}\nexport default function CollapsibleText(props: CollapsibleTextProps) {\n  return (\n    <GeneralPurposeCollapsible label={props.label} startOpen={props.startOpen}>\n      <div style={styles.p}>\n        {props.longText\n          .trim()\n          .split('\\n')\n          .map((t, i) => (\n            <p style={styles.innerP} key={i}>\n              {t}\n            </p>\n          ))}\n      </div>\n    </GeneralPurposeCollapsible>\n  )\n}\n","import { DATABASE_REF } from '../../utils/constants'\nimport { Question } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport CollapsibleText from '../Util/CollapsibleText'\nimport QuestionAttachments from '../Util/QuestionAttachments'\nimport RenderedText from '../Util/RenderedText'\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBlock: 0,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  collapsible: {\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  attachment: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    gap: '5px'\n  },\n  image: {\n    maxHeight: '500px',\n    maxWidth: '100%',\n    objectFit: 'contain'\n  }\n})\n\ninterface QuestionViewProps {\n  question: Question\n}\n\nexport default function QuestionView({ question }: QuestionViewProps) {\n  if (!question)\n    return (\n      <span style={styles.container}>No question to display ¯\\_(ツ)_/¯</span>\n    )\n\n  return (\n    <div style={{ marginBottom: question.attachments?.length ? 0 : '15px' }}>\n      {question.track && (\n        <CollapsibleText\n          label=\"mostra/nascondi brano\"\n          longText={question.track}\n        />\n      )}\n      <div style={styles.container}>\n        <RenderedText text={question.text}></RenderedText>\n        <QuestionAttachments q={question} dbRef={DATABASE_REF.STABLE} />\n      </div>\n    </div>\n  )\n}\n","import { AnswerLetter, Section, QuestionsData } from '../../utils/database'\nimport { StyleSheet, theme } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { AnswersData } from '../App'\n\nconst styles = StyleSheet.create({\n  bordered: {\n    borderBottom: 'thin solid #606060'\n  },\n  barContainer: {\n    width: '100%',\n    boxSizing: 'border-box',\n    overflow: 'auto hidden',\n    padding: '5px 2.5px 5px 0'\n  },\n  bar: {\n    display: 'flex',\n    fontSize: '9.5pt',\n    textDecoration: 'none',\n    color: theme.primary\n  },\n  cellContainer: {\n    display: 'flex',\n    flex: '1 0 25px',\n    flexDirection: 'column',\n    alignContent: 'baseline',\n    textAlign: 'center',\n    maxWidth: '4em',\n    backgroundColor: theme.lightBackground\n  },\n  cellSub: {\n    padding: '0.3em',\n    height: '1.2em',\n    boxShadow: theme.boxShadow\n  },\n  selectedCell: {\n    outline: `5px solid ${theme.primary}`,\n    marginInline: '4px',\n    color: 'black'\n  },\n  p: { margin: 'auto' }\n})\n\ninterface RecapBarProps {\n  active: boolean\n  currentQuestionIndexState: statePair<number>\n  sectionAnswers: AnswersData[Section]\n  sectionQuestions: QuestionsData[Section]\n}\nexport default function RecapBar(props: RecapBarProps) {\n  return (\n    <div style={styles.barContainer} id=\"recap-bar-container\">\n      <div\n        style={{\n          ...styles.bar,\n          minWidth: props.sectionQuestions.length * 25 + 10,\n          cursor: props.active ? 'pointer' : 'default'\n        }}\n      >\n        {props.sectionQuestions.map((q, i) => {\n          const answer = props.sectionAnswers.find(\n            (a) => a && a.id == q.id && (q.sub ? q.sub == a.sub : true)\n          )\n          return (\n            <AnswerCell\n              key={i}\n              index={i}\n              letter={answer?.letter}\n              flagged={answer?.flagged || false}\n              onClick={() => {\n                if (props.active) props.currentQuestionIndexState[1](i)\n              }}\n              selected={props.active && props.currentQuestionIndexState[0] == i}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\ninterface AnswerCellProps {\n  index: number\n  letter: AnswerLetter | undefined\n  flagged: boolean\n  onClick: () => void\n  selected: boolean\n}\nfunction AnswerCell(props: AnswerCellProps) {\n  return (\n    <div\n      style={StyleSheet.compose(\n        styles.cellContainer,\n        props.selected && styles.selectedCell\n      )}\n      onClick={props.onClick}\n    >\n      <div\n        style={StyleSheet.compose(\n          styles.cellSub,\n          styles.bordered,\n          props.selected && { fontWeight: 'bold' }\n        )}\n      >\n        <p style={styles.p}>{props.index + 1}</p>\n      </div>\n      <div\n        style={StyleSheet.compose(styles.cellSub, {\n          backgroundColor: props.flagged\n            ? theme.questionYellow\n            : props.letter\n            ? theme.questionGreen\n            : 'white'\n        })}\n      >\n        <p style={styles.p}>\n          {props.letter?.toUpperCase() || ' '}\n          {props.flagged && '?'}\n        </p>\n      </div>\n    </div>\n  )\n}\n","import { sectionInfo } from '../../utils/constants'\nimport { QuestionsData, Section } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    paddingTop: '10px',\n    paddingBottom: '20px',\n    alignItems: 'center',\n    flexDirection: 'column',\n    textAlign: 'center'\n  }\n})\n\ninterface SectionRecapProps {\n  goToNextSection: () => void\n  section: Section\n  sectionAnswers: AnswersData[Section]\n  sectionQuestions: QuestionsData[Section]\n  secondsUsed: number\n  minutes: number\n}\nexport default function SectionRecap({\n  minutes,\n  secondsUsed,\n  ...props\n}: SectionRecapProps) {\n  const order = sectionInfo[props.section].order\n  const seconds = minutes * 60\n  return (\n    <div style={styles.container}>\n      <p>\n        {'Tempo utilizzato: '}\n        <span>\n          {displayTime((secondsUsed / 60) % 60)}:{displayTime(secondsUsed / 60)}\n          :{displayTime(secondsUsed % 60)}\n        </span>\n        {' / '}\n        <span>\n          {displayTime(minutes / 60)}:{displayTime(minutes % 60)}:\n          {displayTime(seconds % 60)}\n        </span>\n        {' ('}\n        <span>\n          {displayTime((seconds - secondsUsed) / 60 / 60)}:\n          {displayTime(((seconds - secondsUsed) / 60) % 60)}:\n          {displayTime((seconds - secondsUsed) % 60)} rimanente)\n        </span>\n      </p>\n      <Button\n        label={\n          order == Math.max(...Object.values(sectionInfo).map((i) => i.order))\n            ? 'Vedi esito del test'\n            : 'Prossima sezione'\n        }\n        onClick={props.goToNextSection}\n      />\n    </div>\n  )\n}\n\nfunction displayTime(time: number) {\n  return Math.floor(time).toLocaleString(undefined, {\n    minimumIntegerDigits: 2\n  })\n}\n","import { useContext } from 'react'\nimport { TimerResult } from 'react-timer-hook'\nimport { StyleSheet, theme } from '../../utils/style'\nimport { FiClock } from 'react-icons/fi'\nimport { MobileContext } from '../../utils/contexts'\n\nconst alertThreshold = 60\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: '5px'\n  },\n  clockWrapper: {\n    color: theme.timerGreen,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: '5px'\n  },\n  numbers: {\n    display: 'flex',\n    fontWeight: 'bold',\n    color: 'inherit',\n    border: '2px solid',\n    borderRadius: '4px',\n    height: '1.75em',\n    fontSize: '1.25em',\n    alignItems: 'center',\n    paddingInline: '10px'\n  },\n  expiring: {\n    color: theme.timerRed\n  },\n  icon: {\n    color: 'inherit',\n    height: '2.5em',\n    width: 'auto'\n  },\n  p: {\n    display: 'flex',\n    fontSize: '0.8em',\n    maxWidth: '12em',\n    textAlign: 'left',\n    wordWrap: 'normal'\n  }\n})\n\ninterface TimerProps {\n  timer: TimerResult\n}\nexport default function Timer(props: TimerProps) {\n  const { mobile } = useContext(MobileContext)\n  const { timer } = props\n\n  return (\n    <div style={styles.container}>\n      <div\n        style={StyleSheet.compose(\n          styles.clockWrapper,\n          (timer.hours * 60 + timer.minutes) * 60 + timer.seconds <\n            alertThreshold && styles.expiring\n        )}\n      >\n        <FiClock style={styles.icon} />\n        <div style={styles.numbers}>\n          {timer.hours.toLocaleString(undefined, {\n            minimumIntegerDigits: 2\n          })}\n          :\n          {timer.minutes.toLocaleString(undefined, {\n            minimumIntegerDigits: 2\n          })}\n          :\n          {timer.seconds.toLocaleString(undefined, { minimumIntegerDigits: 2 })}\n        </div>\n      </div>\n      {mobile ? undefined : (\n        <p style={styles.p}>\n          Tempo rimanente\n          <br /> per la sezione corrente\n        </p>\n      )}\n    </div>\n  )\n}\n","import { useContext } from 'react'\nimport { TimerResult } from 'react-timer-hook'\nimport { getSectionName } from '../../utils/constants'\nimport { MobileContext } from '../../utils/contexts'\nimport { Section, QuestionsData } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\nimport Timer from './Timer'\n\nconst styles = StyleSheet.create({\n  outerDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 10\n  },\n  innerDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    gap: '15px',\n    fontSize: '11pt'\n  },\n  btnDiv: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flex: 1\n  },\n  exitBtn: {\n    background: '#d81f11',\n    border: '2px solid #d81e11',\n    fontSize: '9.5pt',\n    color: 'white',\n    borderRadius: 2,\n    cursor: 'pointer',\n    fontFamily: ' Arial'\n  }\n})\n\nconst mobileStyles = StyleSheet.create({\n  outerDiv: StyleSheet.compose(styles.outerDiv, {\n    flexDirection: 'column',\n    marginBottom: '1em'\n  }),\n  innerDiv: StyleSheet.compose(styles.innerDiv, {\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  })\n})\n\ninterface TopControlsProps {\n  active: boolean\n  answers: AnswersData\n  closeSection: () => void\n  onExitTest: () => void\n  currentSection: Section\n  timer: TimerResult\n  questions: QuestionsData\n}\n\nexport default function TopControls(props: TopControlsProps) {\n  const { mobile } = useContext(MobileContext)\n  const { timer, active } = props\n\n  return mobile ? (\n    <div style={mobileStyles.outerDiv}>\n      <div style={mobileStyles.innerDiv}>\n        <SectionInfo {...props} />\n        <Timer timer={timer} />\n      </div>\n\n      {active && (\n        <div style={mobileStyles.innerDiv}>\n          <Button label=\"Chiudi sezione\" onClick={props.closeSection} />\n          <button style={styles.exitBtn} onClick={props.onExitTest}>\n            Abbandona il test\n          </button>\n        </div>\n      )}\n    </div>\n  ) : (\n    <div style={styles.outerDiv}>\n      <SectionInfo {...props} />\n      {active && (\n        <div style={styles.btnDiv}>\n          <Button label=\"Chiudi sezione\" onClick={props.closeSection} />\n          <button style={styles.exitBtn} onClick={props.onExitTest}>\n            Abbandona il test\n          </button>\n        </div>\n      )}\n      <Timer timer={timer} />\n    </div>\n  )\n}\n\nfunction SectionInfo(props: TopControlsProps) {\n  const { currentSection, answers, questions, active } = props\n  const { mobile } = useContext(MobileContext)\n  return (\n    <p>\n      Sezione: <b>{getSectionName(currentSection)}</b> <br />\n      Risposte: {\n        answers[currentSection].filter((a) => !!a.letter).length\n      } / {questions[currentSection].length}\n      {mobile && <br />}\n      {active &&\n        ` (${props.answers[currentSection].reduce(\n          (acc, curr) => acc + (curr.flagged ? 1 : 0),\n          0\n        )} da rivedere)`}\n    </p>\n  )\n}\n","import { useContext, useEffect, useMemo, useState } from 'react'\nimport { unstable_useBlocker as useBlocker, Navigate } from 'react-router-dom'\nimport { useTimer } from 'react-timer-hook'\nimport {\n  DSATimeModifier,\n  getNextSection,\n  sectionInfo,\n  View\n} from '../../utils/constants'\nimport { TestContext } from '../../utils/contexts'\nimport { Section, QuestionsData } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { Answer, AnswersData, TimeRecord } from '../App'\nimport AnswerForm from './AnswerForm'\nimport BottomControls from './BottomControls'\nimport QuestionHeader from './QuestionHeader'\nimport QuestionView from './QuestionView'\nimport RecapBar from './RecapBar'\nimport SectionRecap from './SectionRecap'\nimport TopControls from './TopControls'\n\nconst styles = StyleSheet.create({\n  testing: { display: 'flex', flexDirection: 'column' }\n})\n\ninterface QuestionsFormProps {\n  answersState: statePair<AnswersData>\n  questions: QuestionsData\n  sectionState: statePair<Section>\n  timeRecordState: statePair<TimeRecord>\n  viewState: statePair<View>\n}\nexport default function QuestionsForm(props: QuestionsFormProps) {\n  const { isDsa } = useContext(TestContext)\n  const minutesCoeff = isDsa ? DSATimeModifier : 1\n  const [qIndex, originalSetQIndex] = useState(0),\n    tmpFlaggedState = useState(false),\n    tmpAnswerState = useState<Answer['letter']>(),\n    alertDisplayedState = useState(false)\n\n  const [currentSection, setSection] = props.sectionState,\n    [view, setView] = props.viewState,\n    [answers, setAnswers] = props.answersState,\n    [timeRecord, setTimeRecord] = props.timeRecordState\n\n  const sectionQuestions = props.questions[props.sectionState[0]],\n    currentQuestion = sectionQuestions[qIndex],\n    currentAnswer = answers[currentSection][qIndex],\n    shouldShowAlert =\n      !alertDisplayedState[0] &&\n      (tmpAnswerState[0] != currentAnswer?.letter ||\n        tmpFlaggedState[0] != (currentAnswer?.flagged || false))\n\n  useEffect(() => {\n    // called when the qIndex is updated (the user changes question)\n    // sets the scroll of the recap bar container to keep the selected question in view\n    const recapBarElement = document.getElementById('recap-bar-container')\n    if (!recapBarElement) return\n\n    // this width works ok considering margins, widths, and paddings of the elements\n    const width = recapBarElement.clientWidth - 40\n    // 25 is the min width of a question cell, 2px margin to see the cell before\n    const maxScroll = qIndex * 25 - 2\n    const minScroll = maxScroll - width\n\n    // the scrollLeft musth be kept between the two values\n    if (recapBarElement.scrollLeft < minScroll)\n      recapBarElement.scrollLeft = minScroll\n    if (recapBarElement.scrollLeft > maxScroll)\n      recapBarElement.scrollLeft = maxScroll\n  }, [qIndex])\n\n  const showAlert = () => {\n    alert(\n      `Se prima non premi \"Conferma e vai alla successiva\" la risposta non verrà salvata.`\n    )\n    alertDisplayedState[1](true)\n  }\n\n  const closeSection = () => {\n    if (shouldShowAlert) return showAlert()\n    // else it's already reset by setQIndex\n\n    setView('TOL-secRecap')\n    setQIndex(0)\n    tmpAnswerState[1](undefined)\n    tmpFlaggedState[1](false)\n\n    const nextAnswers = answers\n    nextAnswers[currentSection] = nextAnswers[currentSection].map((a) => ({\n      ...a,\n      flagged: false\n    }))\n    setAnswers(nextAnswers)\n\n    const nextTR = timeRecord\n    nextTR[currentSection] =\n      sectionInfo[currentSection].minutes * minutesCoeff * 60 -\n      ((timer.hours * 60 + timer.minutes) * 60 + timer.seconds)\n    setTimeRecord(nextTR)\n\n    timer.restart(new Date(), false)\n  }\n\n  const setQIndex = (\n    index: React.SetStateAction<number>,\n    ignoreAlert = false\n  ) => {\n    if (shouldShowAlert && !ignoreAlert) {\n      showAlert()\n    } else {\n      const next = answers[currentSection][index as number]\n\n      tmpFlaggedState[1](next?.flagged || false)\n      tmpAnswerState[1](next?.letter || undefined)\n      alertDisplayedState[1](false)\n\n      originalSetQIndex(index)\n    }\n  }\n\n  const shiftQIndex = (offset: number, ignoreAlert = false) => {\n    const next =\n      (qIndex + offset + sectionQuestions.length) % sectionQuestions.length || 0\n    return setQIndex(next, ignoreAlert)\n  }\n\n  const timer = useTimer({\n    expiryTimestamp: getTimerExpDate(\n      sectionInfo[currentSection].minutes * minutesCoeff\n    ),\n    onExpire: () => {\n      timer.seconds = 0\n      closeSection()\n    }\n  })\n\n  const currentQuestionIndexState: statePair<number> = [qIndex, setQIndex]\n  if (!props.questions) return <span>Loading...</span>\n\n  const getViewElement = () => {\n    if (view == 'TOL-testing')\n      return (\n        <div style={styles.testing}>\n          <QuestionHeader\n            currentAnswer={currentAnswer}\n            questionIndex={qIndex}\n            shiftQuestionIndex={shiftQIndex}\n            sectionQuestions={sectionQuestions}\n          />\n          <QuestionView question={currentQuestion} />\n          <AnswerForm\n            currentAnswer={currentAnswer}\n            currentQuestion={currentQuestion}\n            tmpAnswerState={tmpAnswerState}\n          />\n          <BottomControls\n            currentQuestion={currentQuestion}\n            tmpAnswerState={tmpAnswerState}\n            tmpFlaggedState={tmpFlaggedState}\n            updateAnswer={(a) => {\n              const next = answers\n              next[currentSection][qIndex] = a\n              setAnswers(next)\n              shiftQIndex(1, true)\n            }}\n          />\n        </div>\n      )\n    else if (view == 'TOL-secRecap')\n      return (\n        <SectionRecap\n          goToNextSection={() => {\n            const nextSection = getNextSection(currentSection)\n            if (nextSection) {\n              setSection(nextSection)\n              timer.restart(\n                getTimerExpDate(sectionInfo[nextSection].minutes * minutesCoeff)\n              )\n              setView('TOL-testing')\n            } else {\n              setView('TOL-end')\n            }\n          }}\n          section={currentSection}\n          secondsUsed={timeRecord[currentSection] || 0}\n          sectionAnswers={answers[currentSection]}\n          sectionQuestions={props.questions[currentSection]}\n          minutes={sectionInfo[currentSection].minutes * minutesCoeff}\n        />\n      )\n    else if (view === 'TOL-end') return <Navigate to=\"/results\" replace />\n    else return <Navigate to=\"/\" replace />\n  }\n\n  const isBlocked = useMemo(\n    () => ['TOL-testing', 'TOL-secRecap'].includes(view),\n    [view]\n  )\n  const blocker = useBlocker(isBlocked)\n\n  const exit_warn =\n    'Sei sicuro di voler abbandonare il test? I progressi non verranno salvati.'\n  const handleExitTest = () => {\n    const confirmExit = confirm(exit_warn)\n    if (confirmExit) {\n      // user confirmed to exit the test\n      // set onbeforeunload to null, otherwise the prompt is shown twice\n      window.onbeforeunload = null\n      location.reload()\n    }\n  }\n\n  useEffect(() => {\n    // set reload protection on first render\n    window.onbeforeunload = () => exit_warn\n\n    if (blocker.state === 'blocked' && !isBlocked) {\n      const confirmExit = confirm(exit_warn)\n      if (confirmExit) {\n        // user confirmed to leave the page\n        // set onbeforeunload to null, otherwise the prompt is shown twice\n        window.onbeforeunload = null\n        props.viewState[1]('INFO-start')\n        blocker.proceed?.()\n      }\n    }\n  }, [])\n\n  return (\n    <div>\n      <TopControls\n        active={view == 'TOL-testing'}\n        answers={answers}\n        closeSection={closeSection}\n        onExitTest={handleExitTest}\n        currentSection={currentSection}\n        questions={props.questions}\n        timer={timer}\n      />\n      <RecapBar\n        active={view == 'TOL-testing'}\n        currentQuestionIndexState={currentQuestionIndexState}\n        sectionAnswers={answers[currentSection]}\n        sectionQuestions={sectionQuestions}\n      />\n      {getViewElement()}\n    </div>\n  )\n}\n\nfunction getTimerExpDate(minutes: number) {\n  const res = new Date()\n  res.setSeconds(res.getSeconds() + minutes * 60)\n  return res\n}\n","import { StyleSheet, theme } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  div: {\n    height: '15px',\n    backgroundColor: theme.primary\n  },\n  text: {\n    color: 'white',\n    margin: 'auto .5em',\n    fontSize: '9.5pt'\n  }\n})\n\ninterface SeparatorProps {\n  text?: string\n}\nexport default function Separator(props: SeparatorProps) {\n  return (\n    <div style={styles.div} className=\"do-not-print\">\n      <p style={styles.text}>{props.text || ''}</p>\n    </div>\n  )\n}\n","import { useContext, useEffect, useMemo, useState } from 'react'\nimport { DATABASE_REF } from '../../utils/constants'\nimport { MobileContext } from '../../utils/contexts'\nimport {\n  Database,\n  DatabaseStore,\n  Question as IQuestion,\n  Section,\n  sheetDict\n} from '../../utils/database'\nimport { baseStyle } from '../../utils/style'\nimport CollapsibleText from '../Util/CollapsibleText'\nimport Question from '../Util/Question'\nimport Select from '../Util/Select'\n\ninterface Props {\n  dbs?: DatabaseStore\n}\nexport default function QPreview(props: Props) {\n  const [isCustom, setIsCustom] = useState(true)\n\n  return (\n    <div style={baseStyle}>\n      <Select\n        label=\"Question type\"\n        entries={[\n          { value: 'custom', label: 'Custom' },\n          { value: 'database', label: 'Database' }\n        ]}\n        defaultValue=\"custom\"\n        onChange={(v) => setIsCustom(v === 'custom')}\n      />\n      {isCustom ? <CustomQ /> : <DatabaseQ {...props} />}\n    </div>\n  )\n}\n\nconst sections = Object.entries(sheetDict).map(([key, value]) => ({\n  label: key,\n  value\n}))\n\nfunction DatabaseQ({ dbs }: Props) {\n  if (!dbs) return <div style={baseStyle}>Loading...</div>\n  const [dbRef, setDbRef] = useState<DATABASE_REF>(DATABASE_REF.STABLE)\n  const db = useMemo(() => dbs[dbRef], [dbRef])\n\n  const [section, setSection] = useState<Section>(sections[0].value)\n\n  const ids = useMemo(() => {\n    const list: string[] = []\n    db[section]\n      .filter((q) => q.id)\n      .map((q) => {\n        if (!list.includes(q.id)) list.push(q.id)\n      })\n    return list\n  }, [db, section])\n\n  const [id, setID] = useState(ids[0])\n\n  useEffect(() => {\n    if (!ids.includes(id)) setID(ids[0])\n  }, [ids])\n\n  return (\n    <div>\n      <Select\n        label=\"Database\"\n        entries={[\n          { value: DATABASE_REF.STABLE, label: 'Production' },\n          { value: DATABASE_REF.MAIN, label: 'Development' }\n        ]}\n        defaultValue={dbRef}\n        onChange={(v) => setDbRef(v as DATABASE_REF)}\n      />\n\n      <Select\n        label=\"Section\"\n        entries={sections}\n        value={section}\n        onChange={(v) => {\n          setSection(v as Section)\n        }}\n      />\n\n      <Select\n        label=\"ID\"\n        entries={ids.map((id) => ({ label: id, value: id }))}\n        value={id}\n        onChange={setID}\n      />\n      <QuestionRender id={id} section={section} db={db} dbRef={dbRef} />\n    </div>\n  )\n}\n\ninterface QuestionRenderProps {\n  id: string\n  section: Section\n  db: Database\n  dbRef?: DATABASE_REF\n}\nfunction QuestionRender({ id, section, db, dbRef }: QuestionRenderProps) {\n  const { mobile } = useContext(MobileContext)\n  const gridTemplate = useMemo(\n    () => (mobile ? '1fr min-content / 100%' : '1fr / 50% 50%'),\n    [mobile]\n  )\n\n  const questions = useMemo(\n    () =>\n      db[section].filter((q) => {\n        return q.id == id\n      }),\n    [id, section, db]\n  )\n\n  return questions.length !== 0 ? (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplate\n      }}\n    >\n      <div style={{ order: mobile ? 2 : 1 }}>\n        {questions.map((q, idx) => (\n          <>\n            <Question\n              q={q}\n              isDebug\n              showAttachments\n              dbRef={dbRef}\n              key={`${section}-${q.id}-${q.sub || 0}`}\n            />\n            {idx < questions.length - 1 && <hr />}\n          </>\n        ))}\n      </div>\n      <div style={{ order: mobile ? 1 : 2 }}>\n        {questions[0].track && (\n          <CollapsibleText\n            label=\"mostra/nascondi brano\"\n            longText={questions[0].track}\n          />\n        )}\n      </div>\n    </div>\n  ) : (\n    <p>Question not found</p>\n  )\n}\n\nfunction CustomQ() {\n  const [text, setText] = useState('')\n  const [a, setA] = useState('')\n  const [b, setB] = useState('')\n  const [c, setC] = useState('')\n  const [d, setD] = useState('')\n  const [e, setE] = useState('')\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const t = (f: (..._: any[]) => any) => (e: any) => f(e.target.value)\n\n  return (\n    <div>\n      <label>\n        Testo:\n        <br />\n        <textarea value={text} onChange={t(setText)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        A:\n        <br />\n        <textarea value={a} onChange={t(setA)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        B:\n        <br />\n        <textarea value={b} onChange={t(setB)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        C:\n        <br />\n        <textarea value={c} onChange={t(setC)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        D:\n        <br />\n        <textarea value={d} onChange={t(setD)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        E:\n        <br />\n        <textarea value={e} onChange={t(setE)}></textarea>\n      </label>\n      <br />\n      <br />\n      <Question q={{ text, answers: { a, b, c, d, e } } as IQuestion} isDebug />\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport {\n  Route,\n  createHashRouter,\n  createRoutesFromElements,\n  RouterProvider,\n  Outlet,\n  Navigate,\n  useLocation\n} from 'react-router-dom'\nimport { RibbonContainer, RightCornerRibbon } from 'react-ribbons'\nimport {\n  AnswerLetter,\n  Section,\n  QuestionsData,\n  readDatabase,\n  selectRandomQuestions,\n  DatabaseStore\n} from '../utils/database'\nimport { StyleSheet } from '../utils/style'\nimport DBPreview from './pages/DBPreview'\nimport ErrorView from './ErrorView'\nimport Footer from './Footer'\nimport Header from './Header'\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Results from './pages/Results'\nimport License from './pages/License'\nimport Privacy from './pages/Privacy'\nimport QuestionsForm from './QuestionsForm/QuestionsForm'\nimport Separator from './Util/Separator'\nimport QPreview from './pages/QPreview'\nimport { MobileContext, TestProvider } from '../utils/contexts'\nimport { LocalStorage } from '../utils/storage'\nimport { DATABASE_REF, View } from '../utils/constants'\nimport { statePair } from '../utils/types'\n\nexport interface Answer {\n  id: string\n  sub?: string\n  letter: AnswerLetter | undefined\n  flagged: boolean\n}\n\nexport type AnswersData = Record<Section, Answer[]>\n\nexport type TimeRecord = Partial<Record<Section, number>>\n\nconst styles = StyleSheet.create({\n  app: { paddingInline: '8px' },\n  routeContainer: { paddingInline: '7.5px' }\n})\n\nexport default function App() {\n  const [dbs, setDbs] = useState<DatabaseStore>()\n  const [questions, setQuestions] = useState<QuestionsData>()\n  const [view, setView] = useState<View>('INFO-start')\n  const sectionState = useState<Section>('ing')\n  const answersState = useState<AnswersData>({\n    ing: [],\n    mat: [],\n    com: [],\n    fis: []\n  })\n  const timeRecordState = useState<TimeRecord>({})\n  const [loadingError, showError] = useState<[string, Error] | []>([])\n  const [mobile, setMobile] = useState<boolean>(false)\n\n  async function loadDatabases() {\n    try {\n      const stable = await readDatabase(DATABASE_REF.STABLE)\n      const main = await readDatabase(DATABASE_REF.MAIN)\n      setDbs({\n        [DATABASE_REF.STABLE]: stable,\n        [DATABASE_REF.MAIN]: main\n      })\n    } catch (e) {\n      showError([\n        'There has been an issue while fetching the database data. Please retry later.',\n        e as Error\n      ])\n    }\n  }\n\n  useEffect(() => {\n    LocalStorage.checkLastChange() // privacy check\n    loadDatabases()\n\n    setMobile(window.innerWidth < 768)\n    window.addEventListener('resize', () => {\n      setMobile(window.innerWidth < 768)\n    })\n  }, [])\n\n  const initialiseTest = () => {\n    if (!dbs) return\n    setQuestions(selectRandomQuestions(dbs.stable))\n    sectionState[1]('ing')\n    answersState[1]({\n      ing: [],\n      mat: [],\n      com: [],\n      fis: []\n    })\n    timeRecordState[1]({})\n  }\n\n  useEffect(() => {\n    // every time view changes from 'TOL-*' to 'INFO-start'\n    // a new test is generated\n    if (view === 'INFO-start') {\n      initialiseTest()\n    }\n  }, [dbs, view])\n\n  const router = createHashRouter(\n    createRoutesFromElements(\n      <Route path=\"/\" element={<Layout viewState={[view, setView]} />}>\n        <Route\n          index\n          element={\n            // Don't ever think about moving this to an external component.\n            <>\n              <ErrorView\n                hidden={!loadingError[0]}\n                display={loadingError[0] || ''}\n                internal={loadingError[1]}\n              />\n              {questions && <Home viewState={[view, setView]} />}\n            </>\n          }\n        />\n        <Route\n          path=\"/test\"\n          element={\n            questions && view.startsWith('TOL') ? (\n              <QuestionsForm\n                answersState={answersState}\n                questions={questions as QuestionsData}\n                sectionState={sectionState}\n                timeRecordState={timeRecordState}\n                viewState={[view, setView]}\n              />\n            ) : (\n              <Navigate to=\"/\" replace />\n            )\n          }\n        />\n        <Route\n          path=\"/results\"\n          element={\n            questions && view === 'TOL-end' ? (\n              <Results\n                answers={answersState[0]}\n                questions={questions as QuestionsData}\n                viewState={[view, setView]}\n              />\n            ) : (\n              <Navigate to=\"/\" replace />\n            )\n          }\n        />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/license\" element={<License />} />\n        <Route path=\"/privacy\" element={<Privacy />} />\n        <Route path=\"/dbpreview\" element={<DBPreview dbs={dbs} />} />\n        <Route path=\"/qpreview\" element={<QPreview dbs={dbs} />} />\n      </Route>\n    )\n  )\n  return (\n    <MobileContext.Provider value={{ mobile }}>\n      <TestProvider>\n        <RibbonContainer>\n          {window &&\n            (new URL(window.location.href).hostname ==\n              'polinetworkorg.github.io' ||\n              process.env.NODE_ENV == 'development') && (\n              <RightCornerRibbon backgroundColor=\"#cc0000\" color=\"white\">\n                DEV\n              </RightCornerRibbon>\n            )}\n          <RouterProvider router={router} />\n        </RibbonContainer>\n      </TestProvider>\n    </MobileContext.Provider>\n  )\n}\n\ninterface LayoutProps {\n  viewState: statePair<View>\n}\nfunction Layout({ viewState }: LayoutProps) {\n  const [view, setView] = viewState\n\n  const location = useLocation()\n  useEffect(() => {\n    // navigating with the footer menu doesn't change the view value.\n    // here it checks the pathname and change the view if results/test page\n    if (\n      !['/results', '/test'].includes(location.pathname) &&\n      view.startsWith('TOL')\n    ) {\n      setView('INFO-start')\n    }\n  }, [location])\n\n  return (\n    <div style={styles.app}>\n      <Header viewState={viewState} />\n      <Separator />\n      <div style={styles.routeContainer}>\n        <Outlet />\n      </div>\n      <Separator />\n      {!['TOL-secRecap', 'TOL-testing'].includes(view) && (\n        <Footer view={view} />\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { I18nextProvider } from 'react-i18next'\nimport i18n from './i18n'\n\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nextProvider i18n={i18n}>\n      <App />\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}