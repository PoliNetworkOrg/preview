{"version":3,"sources":["utils/constants.ts","i18n.ts","utils/database.ts","utils/style.ts","components/Util/Button.tsx","components/Util/GeneralPurposeCollapsible.tsx","components/Util/QuestionAttachments.tsx","components/Util/RenderedText.tsx","components/Util/Question.tsx","components/Util/Select.tsx","components/pages/DBPreview.tsx","components/ErrorView.tsx","utils/storage.ts","utils/contexts.tsx","components/Footer.tsx","../public/logo3000.webp","components/Header.tsx","components/Util/Wrapper.tsx","components/pages/Home.tsx","../public/telegram_logo.svg","components/pages/About.tsx","components/ExtendCorrection/DocumentHeader.tsx","static/firefox_1.png","static/firefox_2.png","static/firefox_3.png","components/ExtendCorrection/ExtendedCorrection.tsx","components/pages/Results.tsx","components/pages/License.tsx","components/pages/Privacy.tsx","components/QuestionsForm/AnswerForm.tsx","components/QuestionsForm/BottomControls.tsx","components/QuestionsForm/QuestionHeader.tsx","components/Util/CollapsibleText.tsx","components/QuestionsForm/QuestionView.tsx","components/QuestionsForm/RecapBar.tsx","components/QuestionsForm/SectionRecap.tsx","components/QuestionsForm/Timer.tsx","components/QuestionsForm/TopControls.tsx","components/QuestionsForm/QuestionsForm.tsx","components/Util/Separator.tsx","components/pages/QPreview.tsx","components/App.tsx","index.tsx"],"names":["links","sectionInfo","ing","name","order","sample","minutes","coeff","Fraction","mat","com","sub","fis","correctionWeight","getSectionName","key","DATABASE_REF","members","tg","ah","prefix","STORAGE","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","enLocale","it","itLocale","fallbackLng","detection","lookupLocalStorage","caches","sheetDict","quesiti_ING","quesiti_MAT","quesiti_COM","quesiti_FIS","readDatabase","a","ref","STABLE","axios","get","data","db","meta","version","packageJson","Error","getImageURL","fileName","theme","baseStyle","fontFamily","color","StyleSheet","styles","fromEntries","Object","entries","map","value","reduce","acc","curr","formatNumber","num","addDecimals","parseFloat","round","toString","toLocaleString","minimumFractionDigits","maximumFractionDigits","replace","create","button","display","fontSize","alignItems","p","marginBlock","margin","icon","leftIcon","compose","this","float","marginRight","rightIcon","Button","props","style","onClick","label","outerDiv","collapsible","background","GeneralPurposeCollapsible","useState","startOpen","isOpen","setOpen","outerDivStyle","trigger","open","onOpen","onClose","easing","contentStyle","children","container","flexDirection","padding","gap","attachment","image","maxHeight","maxWidth","objectFit","QuestionAttachments","q","dbRef","attachments","length","index","src","RenderedText","text","question","option","result","textDecoration","paddingTop","TickSign","CrossSign","Question","isDebug","choice","isTest","showAttachments","id","valid","undefined","validated","String","correct","answers","letter","isCorrect","visibility","toUpperCase","select","Select","defaultValue","localValue","setLocalValue","onChange","e","newValue","target","disabled","entry","ul","paddingLeft","DBPreview","dbs","stable","setDb","MAIN","v","filter","questions","ErrorView","hidden","internal","LocalStorage","localStorage","setItem","JSON","stringify","Date","date","sixMonthsAgo","setMonth","getMonth","getItem","isDateOlderThanSixMonths","clear","handleChange","parse","MobileContext","createContext","mobile","TestContext","isDsa","toggleDsa","TestProvider","setIsDsa","useEffect","Provider","prev","justifyContent","paddingInline","link","flex","textAlign","mobileStyles","paddingBottom","Footer","view","useContext","linkStyle","startsWith","className","href","rel","to","div","height","centeredText","logoDiv","logo","col","Header","viewState","useTranslation","resolvedLanguage","lang","setLang","pointerEvents","alt","changeLanguage","wrapper","h2","Wrapper","title","centered","buttonDiv","Home","t","setView","navigate","useNavigate","htmlFor","userSelect","type","checked","transitionTime","width","liDiv","telegramLink","telegramLogo","About","m","sort","b","i","rightText","logoLink","DocumentHeader","doc","printButton","alignSelf","li","listStyleType","ol","img","marginTop","marginBottom","nowrap","whiteSpace","ExtendedCorrection","createRef","resultsDate","printSupported","window","browser","userAgent","navigator","includes","getTitle","document","documentTitle","content","current","onAfterPrint","onSave","FirefoxInstructions","FallbackInstructions","PrintDocument","docStyles","firstPage","forwardRef","dateTime","toLocaleDateString","toLocaleTimeString","timeStyle","resultTable","section","values","find","firefoxImg1","firefoxImg2","firefoxImg3","displayName","tableDiv","overflow","table","borderSpacing","tableCell","border","tableHeader","fontWeight","backgroundColor","h3","restartDiv","restartTitle","restartButton","Results","isResultSaved","setIsResultSaved","blocker","useBlocker","exit_warn","onbeforeunload","state","confirm","proceed","location","correctionGrid","secQuestions","notGiven","wrong","forEach","answer","total","weight","score","mul","correction","add","testPassed","parseInt","tengPassed","info","toFraction","paddingBlock","licenseImg","borderWidth","marginLeft","License","components","property","network","cc4","githubLicense","Link","Privacy","baseText","radioText","verticalAlign","radioSpan","AnswerForm","letterState","tmpAnswerState","currentQuestion","RadioRow","c","d","event","controlsDiv","BottomControls","tmpFlaggedState","flagged","setFlagged","updateAnswer","leftContainer","rightContainer","minWidth","answerLetter","marginInline","boxShadow","QuestionHeader","questionIndex","currentAnswer","shiftQuestionIndex","innerP","CollapsibleText","longText","trim","split","QuestionView","track","bordered","borderBottom","barContainer","boxSizing","bar","cellContainer","alignContent","cellSub","selectedCell","outline","RecapBar","sectionQuestions","active","sectionAnswers","AnswerCell","currentQuestionIndexState","selected","SectionRecap","secondsUsed","seconds","displayTime","Math","max","goToNextSection","time","floor","minimumIntegerDigits","clockWrapper","numbers","borderRadius","expiring","wordWrap","Timer","timer","hours","innerDiv","exitBtn","cursor","TopControls","currentSection","closeSection","exitTest","testing","QuestionsForm","minutesCoeff","qIndex","originalSetQIndex","alertDisplayedState","sectionState","setSection","answersState","setAnswers","timeRecordState","timeRecord","setTimeRecord","shouldShowAlert","recapBarElement","getElementById","clientWidth","maxScroll","minScroll","scrollLeft","showAlert","alert","setQIndex","nextAnswers","nextTR","restart","ignoreAlert","next","shiftQIndex","offset","useTimer","expiryTimestamp","getTimerExpDate","onExpire","isBlocked","useMemo","reload","nextSection","sortedInfo","findIndex","getNextSection","res","setSeconds","getSeconds","Separator","QPreview","isCustom","setIsCustom","CustomQ","DatabaseQ","sections","setDbRef","ids","list","push","setID","QuestionRender","gridTemplate","idx","setText","setA","setB","setC","setD","setE","f","app","routeContainer","App","setDbs","setQuestions","loadingError","showError","setMobile","main","checkLastChange","loadDatabases","innerWidth","addEventListener","initialiseTest","validQuestions","resIds","_","shuffle","uniq","slice","router","createHashRouter","createRoutesFromElements","path","element","Layout","URL","hostname","useLocation","pathname","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ca4972aa.chunk.js","sourcesContent":["import { Section } from './database'\nimport Fraction from 'fraction.js'\n\nexport const links = {\n  githubLicense:\n    'https://github.com/PoliNetworkOrg/TheTOLProject/blob/main/LICENSE',\n  githubSource: 'https://github.com/PoliNetworkOrg/TheTOLProject/',\n  polinetwork: 'https://polinetwork.org',\n  telegramPreparazioneTOL: 'https://t.me/joinchat/_zugEikozmcyMzA0',\n  telegramTheTOLProject: 'https://t.me/+amLdTd-EoHw1MWRk',\n  localStorageMDN:\n    'https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage'\n}\n\ninterface sectionInfoElement {\n  /** The readable name of the section */\n  name: string\n  /** The order in which the section should be tested */\n  order: number\n  /** The number of questions that should be selected */\n  sample: number\n  /** The number of sub-questions that should be selected (only applies to 'com') */\n  sub?: number\n  /** The maximum number of minutes that the user can use to complete a section */\n  minutes: number\n  /** The weight that this section's score has on the total score ({@link testTotalScore}) */\n  coeff: number | Fraction\n}\n\nexport const sectionInfo: Record<Section, sectionInfoElement> = {\n  ing: {\n    name: 'Inglese',\n    order: 1,\n    sample: 30,\n    minutes: 15,\n    coeff: new Fraction('1/3')\n  },\n  mat: {\n    name: 'Matematica',\n    order: 2,\n    sample: 25,\n    minutes: 65,\n    coeff: 2.6\n  },\n  com: {\n    name: 'Comprensione verbale',\n    order: 3,\n    sample: 1,\n    sub: 5,\n    minutes: 10,\n    coeff: 3\n  },\n  fis: {\n    name: 'Fisica',\n    order: 4,\n    sample: 5,\n    minutes: 10,\n    coeff: 2\n  }\n}\n\nexport const DSATimeModifier = 1.3\n\nexport const testTotalScore = 100\n/** Minimum score to pass the test */\nexport const testPassThreshold = 60\n/** Minimum number of correct questions to pass the test */\nexport const tengPassThreshold = 24\n/** How to weight answer when calculating the section score */\nexport const correctionWeight = {\n  correct: 1,\n  wrong: -0.25,\n  notGiven: 0\n}\n\nexport function getSectionName(key: Section) {\n  return sectionInfo[key].name\n}\n\nexport function getNextSection(currentSection: Section): Section | undefined {\n  const sortedInfo = Object.entries(sectionInfo).sort(\n    (a, b) => a[1].order - b[1].order\n  ) as [Section, sectionInfoElement][]\n  const i = sortedInfo.findIndex((e) => e[0] == currentSection)\n  return (sortedInfo[i + 1] || [])[0]\n}\n\ninterface Member {\n  name: string\n  tg: string\n  ah?: boolean\n  prefix?: string\n}\n\nexport const members: Member[] = [\n  {\n    name: 'Gabriele Zanini',\n    tg: 'zagbc'\n  },\n  {\n    name: 'Federico Grandi',\n    tg: 'federico_grandi'\n  },\n  {\n    name: 'Ilaria Corcelli',\n    tg: 'iilaria01'\n  },\n  {\n    name: 'Matteo Salicandro',\n    tg: 'Mattysal'\n  },\n  {\n    name: 'Nicolas Facchin',\n    tg: 'SuperRollyNoka'\n  },\n  {\n    name: 'Elia Maggioni',\n    tg: 'EliaMaggioni',\n    ah: true\n  },\n  {\n    name: 'Diego Aldarese',\n    tg: 'diegoaldarese',\n    ah: true\n  },\n  {\n    name: 'Tommaso Morganti',\n    tg: 'toto04_1'\n  },\n  {\n    name: 'Giovanni Menicucci',\n    tg: 'giova1211'\n  },\n  {\n    name: 'Nadia Scappini',\n    tg: 'nscapp',\n    prefix: 'Prof.ssa'\n  },\n  {\n    name: '@spyarect',\n    tg: 'spyarect',\n    ah: true\n  },\n  {\n    name: 'Clelia Di Leo',\n    tg: 'cloelia',\n    prefix: 'Prof.ssa'\n  },\n  {\n    name: 'Raif Muhammad',\n    tg: 'Raif9',\n    ah: true\n  },\n  {\n    name: 'Lorenzo Corallo',\n    tg: 'lorenzocorallo'\n  }\n]\n\nexport const STORAGE = {\n  DSA: 'tol_is_dsa',\n  LANG: 'tol_i18n_lng',\n  LAST_CHANGE: 'tol_last_change'\n} as const\n\nexport enum DATABASE_REF {\n  STABLE = 'stable',\n  MAIN = 'main'\n}\n\nexport type View = 'INFO-start' | 'TOL-testing' | 'TOL-secRecap' | 'TOL-end'\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\nimport enLocale from './locales/en.json'\nimport itLocale from './locales/it.json'\nimport { STORAGE } from './utils/constants'\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: enLocale\n      },\n      it: {\n        translation: itLocale\n      }\n    },\n    fallbackLng: 'it',\n    detection: {\n      order: ['localStorage', 'navigator', 'htmlTag'],\n      lookupLocalStorage: STORAGE.LANG,\n      caches: ['localStorage']\n    }\n  })\n\nexport default i18n\n","import axios from 'axios'\nimport fromEntries from 'fromentries'\nimport _ from 'underscore'\nimport packageJson from '../../package.json'\nimport { DATABASE_REF, sectionInfo } from './constants'\n\nexport const sheetDict = {\n  quesiti_ING: 'ing',\n  quesiti_MAT: 'mat',\n  quesiti_COM: 'com',\n  quesiti_FIS: 'fis'\n} as const\nexport type Section = typeof sheetDict[keyof typeof sheetDict]\n\nexport type AnswerLetter = 'a' | 'b' | 'c' | 'd' | 'e'\n\nexport interface Question {\n  id: string\n  text: string\n  answers: Record<AnswerLetter, string>\n  correct: AnswerLetter\n  attachments: string[]\n  validated: boolean\n\n  // These are only present for COM questions\n  sub?: string\n  track?: string\n}\n\nexport type QuestionsData = Record<Section, Question[]>\n\nexport interface Database extends QuestionsData {\n  meta: {\n    version: string\n  }\n}\n\nexport async function readDatabase(ref: DATABASE_REF = DATABASE_REF.STABLE) {\n  const db = (\n    await axios.get(\n      `https://raw.githubusercontent.com/PoliNetworkOrg/TheTOLProjectData/${ref}/database.json`\n    )\n  )?.data as Database\n\n  if (db?.meta?.version != packageJson.version)\n    throw new Error(\n      `Database version doesn't match application.\\nDatabase: ${db?.meta?.version}\\nApp: ${packageJson.version}`\n    )\n\n  return db\n}\n\nexport function selectRandomQuestions(db: Database): QuestionsData {\n  return fromEntries(\n    // Manipulate db entries\n    (Object.entries(db) as [Section /* or \"meta\" */, Question[]][])\n      // Select only entries associated with a section <=> exclude \"meta\"\n      .filter(([key]) => (Object.values(sheetDict) as string[]).includes(key))\n      .map(([key, questions]) => {\n        // Select only validated questions\n        const validQuestions = questions.filter((q) => q.validated)\n\n        // Get the question ids, remove duplicates, shuffle them, and select the appropriate number of questions.\n        const resIds = _.shuffle(_.uniq(validQuestions.map((v) => v.id))).slice(\n          0,\n          sectionInfo[key].sample\n        )\n\n        // Return only the questions with a selected ID\n        return [\n          key,\n          _.shuffle(validQuestions.filter((q) => resIds.includes(q.id)))\n        ]\n      })\n  ) as QuestionsData\n}\n\nexport function getImageURL(\n  fileName: string,\n  ref: DATABASE_REF = DATABASE_REF.STABLE\n) {\n  return `https://raw.githubusercontent.com/PoliNetworkOrg/TheTOLProjectData/${ref}/img/${fileName}`\n}\n\nexport type DatabaseStore = Record<DATABASE_REF, Database>\n","import Fraction from 'fraction.js'\nimport fromEntries from 'fromentries'\n\nexport const theme = {\n  boxShadow:\n    '1px 0 0 0 #606060, 0 1px 0 0 #606060, 1px 1px 0 0 #606060, /* corner */ 1px 0 0 0 #606060 inset, 0 1px 0 0 #606060 inset',\n  lightBackground: '#F3F3EE',\n  lightBorder: '#D5DFE4',\n  primary: '#069',\n  questionYellow: 'yellow',\n  questionGreen: '#00D700',\n  softBlack: '#333',\n  timerGreen: '#009527',\n  timerRed: 'red'\n}\n\nexport const baseStyle: React.CSSProperties = {\n  fontFamily: 'Verdana, Roboto',\n  color: theme.softBlack\n}\n\ntype CSSProperties = {\n  [key: string]: React.CSSProperties\n}\n\n/** Basic implementation of the StyleSheet class present in React Native */\nexport class StyleSheet {\n  static create<Styles extends CSSProperties>(styles: Styles): Styles {\n    return fromEntries(\n      Object.entries(styles).map(([key, value]) => [\n        key,\n        { ...baseStyle, ...value }\n      ])\n    ) as Styles\n  }\n\n  static compose(\n    ...styles: (React.CSSProperties | undefined | false)[]\n  ): React.CSSProperties {\n    return styles.reduce(\n      (acc, curr) => ({ ...acc, ...(curr || {}) }),\n      {}\n    ) as React.CSSProperties\n  }\n}\n\nexport function formatNumber(num: number | Fraction, addDecimals = false) {\n  return (\n    typeof num == 'number'\n      ? num\n      : parseFloat(num.round(addDecimals ? 2 : 0).toString())\n  )\n    .toLocaleString('it-IT', {\n      minimumFractionDigits: addDecimals ? 2 : 0,\n      maximumFractionDigits: 2\n    })\n    .replace(/\\./g, ',')\n}\n","import { StyleSheet } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  button: {\n    display: 'flex',\n    fontFamily: ' Arial',\n    fontSize: '9.5pt',\n    alignItems: 'center'\n  },\n  p: {\n    display: 'inline-block',\n    marginBlock: 0,\n    margin: 0,\n    fontFamily: 'Arial'\n  },\n  icon: {\n    display: 'flex'\n  },\n  get leftIcon() {\n    return StyleSheet.compose(this.icon, {\n      float: 'left',\n      marginRight: '2px'\n    })\n  },\n  get rightIcon() {\n    return StyleSheet.compose(this.icon, {\n      float: 'right',\n      marginRight: '2px'\n    })\n  }\n})\n\ninterface ButtonProps {\n  label: string\n  onClick?: () => void\n  style?: React.CSSProperties\n  leftIcon?: () => JSX.Element\n  rightIcon?: () => JSX.Element\n}\n\nexport default function Button(props: ButtonProps) {\n  return (\n    <button\n      style={StyleSheet.compose(styles.button, props.style || {})}\n      onClick={props.onClick}\n    >\n      <span style={styles.leftIcon}>{props.leftIcon && props.leftIcon()}</span>\n      <p style={styles.p}>{props.label}</p>\n      <span style={styles.rightIcon}>\n        {props.rightIcon && props.rightIcon()}\n      </span>\n    </button>\n  )\n}\n","import { ReactNode, useState } from 'react'\nimport Collapsible from 'react-collapsible'\nimport { StyleSheet, theme } from '../../utils/style'\nimport Button from './Button'\n\nconst styles = StyleSheet.create({\n  outerDiv: {\n    margin: '10px'\n  },\n  collapsible: {\n    background: theme.lightBackground,\n    margin: '5px'\n  }\n})\n\ninterface GeneralPurposeCollapsibleProps {\n  label: string\n  children: ReactNode\n  startOpen?: boolean\n  contentStyle?: React.CSSProperties\n  outerDivStyle?: React.CSSProperties\n  onOpen?: () => void\n  onClose?: () => void\n}\nexport default function GeneralPurposeCollapsible(\n  props: GeneralPurposeCollapsibleProps\n) {\n  const [isOpen, setOpen] = useState(props.startOpen ?? true)\n\n  return (\n    <div style={StyleSheet.compose(styles.outerDiv, props.outerDivStyle)}>\n      <Collapsible\n        trigger={\n          <Button label={props.label} onClick={() => setOpen(!isOpen)} />\n        }\n        open={isOpen}\n        onOpen={props.onOpen}\n        onClose={props.onClose}\n        easing=\"ease-in-out\"\n      >\n        <div style={StyleSheet.compose(styles.collapsible, props.contentStyle)}>\n          {props.children}\n        </div>\n      </Collapsible>\n    </div>\n  )\n}\n","import { DATABASE_REF } from '../../utils/constants'\nimport { getImageURL, Question } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport GeneralPurposeCollapsible from './GeneralPurposeCollapsible'\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBlock: 0,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  collapsible: {\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  attachment: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    gap: '5px'\n  },\n  image: {\n    maxHeight: '500px',\n    maxWidth: '100%',\n    objectFit: 'contain'\n  }\n})\n\ninterface Props {\n  q: Question\n  dbRef: DATABASE_REF\n}\n\nexport default function QuestionAttachments({ q, dbRef }: Props) {\n  return (\n    <>\n      {q.attachments?.length && (\n        <GeneralPurposeCollapsible\n          label=\"mostra/nascondi immagini\"\n          startOpen={false}\n        >\n          {q.attachments.map((fileName, index) => (\n            <span key={index + 1} style={styles.attachment}>\n              <p style={styles.container}>Immagine {index + 1}:</p>\n              <img src={getImageURL(fileName, dbRef)} style={styles.image} />\n            </span>\n          ))}\n        </GeneralPurposeCollapsible>\n      )}\n    </>\n  )\n}\n","import Latex from 'react-latex'\n\ninterface RenderedTextProps {\n  text: string\n}\nexport default function RenderedText({ text }: RenderedTextProps) {\n  return <Latex>{text}</Latex>\n}\n","import { DATABASE_REF } from '../../utils/constants'\nimport { Question as IQuestion } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport QuestionAttachments from './QuestionAttachments'\nimport RenderedText from './RenderedText'\n\nconst styles = StyleSheet.create({\n  question: {\n    padding: 1\n  },\n  option: {\n    display: 'flex',\n    gap: 4,\n    margin: 4\n  },\n  result: {\n    textDecoration: 'underline',\n    paddingTop: 4,\n    display: 'block'\n  }\n})\n\nconst TickSign = () => <>&#10003;</>\nconst CrossSign = () => <>&#10007;</>\n\ninterface Props {\n  q: IQuestion\n  isDebug?: boolean\n  choice?: string\n  isTest?: boolean\n  showAttachments?: boolean\n  dbRef?: DATABASE_REF\n}\n\nexport default function Question({\n  q,\n  isDebug = false,\n  choice = '',\n  isTest = false,\n  showAttachments = false,\n  dbRef = DATABASE_REF.STABLE\n}: Props) {\n  const id = q.id && (q.sub ? `[${q.id}-${q.sub}] ` : `[${q.id}] `)\n  const valid = q.validated !== undefined && `Valid: ${String(q.validated)}`\n  let result = 'Senza risposta'\n  if (choice.length === 1) {\n    result = choice === q.correct ? 'Corretta' : 'Errata'\n  }\n\n  return (\n    <div style={styles.question}>\n      <p style={{ margin: 4 }}>\n        {isDebug && (\n          <p>\n            {id} {valid}\n          </p>\n        )}\n        <RenderedText text={q.text} />\n        {isTest && <span style={styles.result}>{result}</span>}\n      </p>\n      {showAttachments && <QuestionAttachments q={q} dbRef={dbRef} />}\n\n      {Object.entries(q.answers).map(([letter, text]) => {\n        const isCorrect = q.correct === letter\n        const visibility = isCorrect || choice === letter ? 'visible' : 'hidden'\n        return (\n          <p key={letter} style={styles.option}>\n            <span style={{ visibility }}>\n              {isCorrect ? <TickSign /> : <CrossSign />}\n            </span>\n            <span>{letter.toUpperCase()}. </span>\n            <RenderedText text={text} />\n          </p>\n        )\n      })}\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { StyleSheet } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  select: {\n    display: 'flex',\n    fontFamily: ' Arial',\n    fontSize: '9.5pt',\n    alignItems: 'center'\n  }\n})\n\ninterface SelectEntry {\n  label: string\n  value: string\n}\n\ninterface ButtonProps {\n  defaultValue?: string\n  value?: string\n  disabled?: boolean\n  entries: SelectEntry[]\n  label?: string\n  onChange?: (newValue: string) => void\n  style?: React.CSSProperties\n}\n\nexport default function Select(props: ButtonProps) {\n  const [localValue, setLocalValue] = useState(props.defaultValue)\n\n  return (\n    <label>\n      {props.label || ''}\n      <select\n        value={props.value || localValue}\n        onChange={(e) => {\n          const newValue = e.target.value\n          setLocalValue(newValue)\n          props.onChange && props.onChange(newValue)\n        }}\n        style={styles.select}\n        disabled={props.disabled}\n      >\n        {props.entries.map((entry) => (\n          <option value={entry.value} key={entry.value}>\n            {entry.label}\n          </option>\n        ))}\n      </select>\n    </label>\n  )\n}\n","import { useState } from 'react'\nimport { DATABASE_REF, sectionInfo } from '../../utils/constants'\nimport {\n  Section,\n  Question as IQuestion,\n  DatabaseStore\n} from '../../utils/database'\nimport { baseStyle, StyleSheet } from '../../utils/style'\nimport GeneralPurposeCollapsible from '../Util/GeneralPurposeCollapsible'\nimport Question from '../Util/Question'\nimport Select from '../Util/Select'\n\nconst styles = StyleSheet.create({\n  ul: {\n    margin: 10,\n    paddingLeft: 16\n  }\n})\n\ninterface DBPreviewProps {\n  dbs?: DatabaseStore\n}\n\nexport default function DBPreview({ dbs }: DBPreviewProps) {\n  if (!dbs) return <div style={baseStyle}>Loading...</div>\n  const [db, setDb] = useState(dbs.stable)\n\n  return (\n    <div>\n      <Select\n        label=\"Database\"\n        entries={[\n          { value: DATABASE_REF.STABLE, label: 'Production' },\n          { value: DATABASE_REF.MAIN, label: 'Development' }\n        ]}\n        defaultValue={DATABASE_REF.STABLE}\n        onChange={(v) => setDb(dbs[v as DATABASE_REF])}\n      />\n      {(\n        Object.entries(db).filter(([key]) => key != 'meta') as [\n          Section,\n          IQuestion[]\n        ][]\n      ).map(([key, questions]) => (\n        <div key={key} style={baseStyle}>\n          <GeneralPurposeCollapsible\n            label={sectionInfo[key].name}\n            startOpen={false}\n          >\n            <ul style={styles.ul}>\n              {questions\n                .filter((q) => q.text || key == 'com')\n                .map((q) => (\n                  <li key={key + q.id + (q.sub || '')}>\n                    <Question q={q} isDebug={true} showAttachments />\n                  </li>\n                ))}\n            </ul>\n          </GeneralPurposeCollapsible>\n        </div>\n      ))}\n    </div>\n  )\n}\n","interface ErrorViewProps {\n  hidden: boolean\n  display: string\n  internal?: Error\n}\n\nexport default function ErrorView({\n  hidden,\n  display,\n  internal\n}: ErrorViewProps) {\n  return (\n    <div hidden={hidden}>\n      <h3>{display}</h3>\n      <blockquote>{internal + ''}</blockquote>\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { STORAGE } from './constants'\n\nexport class LocalStorage {\n  static handleChange() {\n    // method to call to update last change date in localStorage\n    localStorage.setItem(STORAGE.LAST_CHANGE, JSON.stringify(new Date()))\n  }\n\n  static isDateOlderThanSixMonths(date: Date): boolean {\n    const sixMonthsAgo = new Date()\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6)\n    return date < sixMonthsAgo\n  }\n\n  public static checkLastChange() {\n    // according to privacy policy, if last change is older\n    // than 6 months, then the localStorage has to be cleared\n    const date = this.getItem(STORAGE.LAST_CHANGE)\n    if (!date) return\n    if (this.isDateOlderThanSixMonths(new Date(date))) {\n      localStorage.clear()\n    }\n  }\n\n  public static setItem(key: string, value: any) {\n    // custom setItem with JSON.stringify and null/undefined check\n    if (value === null || value === undefined) return\n    localStorage.setItem(key, JSON.stringify(value))\n    this.handleChange()\n  }\n\n  public static getItem(key: string) {\n    // custom getItem with JSON.parse and null check\n    const value = localStorage.getItem(key)\n    if (!value) return null\n    return JSON.parse(value)\n  }\n}\n","import { createContext, useEffect, useState } from 'react'\nimport { STORAGE } from './constants'\nimport { LocalStorage } from './storage'\n\nexport const MobileContext = createContext({\n  mobile: false\n})\n\ninterface ITestContext {\n  isDsa: boolean\n  toggleDsa: () => void\n}\nexport const TestContext = createContext<ITestContext>({\n  isDsa: false,\n  toggleDsa: () => {\n    // implemented in Provider\n  }\n})\n\ntype TestProviderProps = React.HTMLAttributes<React.ProviderProps<ITestContext>>\nexport const TestProvider = (props: TestProviderProps) => {\n  const [isDsa, setIsDsa] = useState<boolean>(false)\n\n  const toggleDsa = () => {\n    setIsDsa((prev) => {\n      const value = !prev\n      LocalStorage.setItem(STORAGE.DSA, value)\n      return value\n    })\n  }\n\n  useEffect(() => {\n    const localValue = LocalStorage.getItem(STORAGE.DSA)\n    if (localValue === null) return\n    setIsDsa(localValue)\n  }, [])\n\n  return <TestContext.Provider value={{ isDsa, toggleDsa }} {...props} />\n}\n","import { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { links, View } from '../utils/constants'\nimport { MobileContext } from '../utils/contexts'\nimport { StyleSheet, theme } from '../utils/style'\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingInline: '15em',\n    margin: '15px',\n    fontSize: '10pt',\n    color: theme.softBlack\n  },\n  link: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: 'inherit',\n    fontSize: '11pt',\n    alignItems: 'center'\n  }\n})\n\nconst mobileStyles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 16\n  },\n  link: StyleSheet.compose(styles.link, {\n    margin: 2\n  })\n})\n\ninterface Props {\n  view: View\n}\nexport default function Footer({ view }: Props) {\n  const { mobile } = useContext(MobileContext)\n  const linkStyle = mobile ? mobileStyles.link : styles.link\n  const replace = view.startsWith('TOL')\n  return (\n    <div\n      className=\"do-not-print\"\n      style={mobile ? mobileStyles.container : styles.container}\n    >\n      <a\n        href={links.githubSource}\n        style={linkStyle}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        Source\n      </a>\n      <Link to=\"about\" style={linkStyle} replace={replace}>\n        About\n      </Link>\n      <Link to=\"/\" style={linkStyle} replace={replace}>\n        Home\n      </Link>\n      <Link to=\"license\" style={linkStyle} replace={replace}>\n        License\n      </Link>\n      <Link to=\"privacy\" style={linkStyle} replace={replace}>\n        Privacy & Cookies\n      </Link>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logo3000.34b8e2e9.webp\";","import { useContext, useState } from 'react'\nimport { StyleSheet } from '../utils/style'\nimport { statePair } from '../utils/types'\nimport logo from '../static/logo3000.webp'\nimport { links, View } from '../utils/constants'\nimport { MobileContext } from '../utils/contexts'\nimport { useTranslation } from 'react-i18next'\nimport { LocalStorage } from '../utils/storage'\n\nconst styles = StyleSheet.create({\n  div: {\n    height: '70px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  text: {\n    fontSize: '18pt'\n  },\n  get centeredText() {\n    return StyleSheet.compose(this.text, {\n      textAlign: 'center',\n      flex: 1\n    })\n  },\n  logoDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '10px',\n    margin: '5px',\n    textDecoration: 'none'\n  },\n  logo: {\n    height: '60px'\n  },\n  col: { flex: 1, display: 'flex' }\n})\n\ninterface HeaderProps {\n  viewState: statePair<View>\n}\n\nexport default function Header({ viewState }: HeaderProps) {\n  const { i18n } = useTranslation()\n  const { mobile } = useContext(MobileContext)\n  const [lang, setLang] = useState(i18n.resolvedLanguage)\n  const handleLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const lang = e.target.value\n    i18n.changeLanguage(lang)\n    LocalStorage.handleChange() // language saved to LocalStorage\n    setLang(lang)\n  }\n\n  return (\n    <div className=\"do-not-print\" style={styles.div}>\n      <div style={styles.col}>\n        <a\n          style={{\n            ...styles.logoDiv,\n            // disable logo link when doing the test\n            pointerEvents: viewState[0].startsWith('TOL') ? 'none' : 'all'\n          }}\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n          href={links.polinetwork}\n        >\n          <img src={logo} alt=\"logo\" style={styles.logo} />\n          {!mobile && <h1 style={styles.text}>PoliNetwork</h1>}\n        </a>\n      </div>\n\n      <div style={{ ...styles.col, flex: mobile ? 3 : 1 }}>\n        <h1 style={styles.centeredText}>The TOL Project</h1>\n      </div>\n\n      <div style={{ ...styles.col, justifyContent: 'flex-end' }}>\n        <select value={lang} onChange={handleLanguageChange}>\n          <option value=\"it\">IT</option>\n          <option value=\"en\">EN</option>\n        </select>\n      </div>\n    </div>\n  )\n}\n","import { StyleSheet } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: '10px auto',\n    marginBlock: '16px',\n    maxWidth: 900,\n    textAlign: 'center'\n  },\n  h2: {\n    fontSize: '16pt'\n  }\n})\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  title?: string\n}\n\nexport default function Wrapper({ children, style, title, ...props }: Props) {\n  return (\n    <div style={{ ...styles.wrapper, ...style }} {...props}>\n      {title && <h2 style={styles.h2}>{title}</h2>}\n      {children}\n    </div>\n  )\n}\n","import { useContext } from 'react'\nimport Collapsible from 'react-collapsible'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { useNavigate } from 'react-router'\nimport { View } from '../../utils/constants'\nimport { TestContext } from '../../utils/contexts'\nimport { StyleSheet } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport Button from '../Util/Button'\nimport Wrapper from '../Util/Wrapper'\n\nconst styles = StyleSheet.create({\n  centered: {\n    display: 'block'\n  },\n  buttonDiv: {\n    margin: '16px',\n    display: 'flex',\n    fontSize: 14,\n    gap: 6\n  }\n})\n\ninterface InfoStartProps {\n  viewState: statePair<View>\n}\nexport default function Home({ viewState }: InfoStartProps) {\n  const { isDsa, toggleDsa } = useContext(TestContext)\n  const { t, i18n } = useTranslation()\n  const [, setView] = viewState\n\n  const navigate = useNavigate()\n  const handleStartTest = () => {\n    setView('TOL-testing')\n    navigate('/test')\n  }\n\n  return (\n    <Wrapper>\n      <p>\n        <span style={styles.centered}>\n          <b>DISCLAIMER</b>\n        </span>\n        <br />\n        {t('home.disclaimer')}\n      </p>\n      <i>{t('home.languageInfo')}</i>\n      <div style={styles.buttonDiv}>\n        <Button\n          style={{ fontSize: 14 }}\n          label={t('home.startBtn')}\n          onClick={handleStartTest}\n        />\n        <label htmlFor=\"dsa_toggle\" style={{ userSelect: 'none' }}>\n          <input\n            id=\"dsa_toggle\"\n            type=\"checkbox\"\n            checked={isDsa}\n            onChange={toggleDsa}\n          />\n          {t('home.dsaBtn')}\n        </label>\n      </div>\n      <Collapsible trigger={<></>} open={isDsa} transitionTime={150}>\n        <p>\n          <Trans i18n={i18n}>home.dsaInfo</Trans>\n        </p>\n      </Collapsible>\n    </Wrapper>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/telegram_logo.1ca7c840.svg\";","import { links, members } from '../../utils/constants'\nimport { StyleSheet, theme } from '../../utils/style'\nimport telegramLogo from '../../static/telegram_logo.svg'\nimport Wrapper from '../Util/Wrapper'\nimport { Trans, useTranslation } from 'react-i18next'\n\nconst styles = StyleSheet.create({\n  p: {\n    margin: '20px',\n    textAlign: 'justify',\n    width: '100%'\n  },\n  centered: {\n    textAlign: 'center'\n  },\n  link: {\n    display: 'inline-flex',\n    color: theme.primary,\n    gap: '5px',\n    alignItems: 'center'\n  },\n  liDiv: {\n    display: 'flex',\n    gap: '5px',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  telegramLink: {\n    display: 'flex'\n  },\n  telegramLogo: {\n    height: '17.5px'\n  }\n})\n\nexport default function About() {\n  const { t, i18n } = useTranslation()\n  return (\n    <Wrapper title=\"About\">\n      <p style={styles.p}>\n        <Trans i18n={i18n}>about.main</Trans>\n      </p>\n      <div style={styles.p}>\n        <b>{t('about.projectTeam')}</b>\n        <br />\n        <ul>\n          {members\n            .filter((m) => !m.ah)\n            .sort((a, b) =>\n              a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n            )\n            .map((m, i) => (\n              <li key={i}>\n                <div style={styles.liDiv}>\n                  {(m.prefix || '') + ' ' + m.name}{' '}\n                  <a\n                    href={`https://t.me/${m.tg}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    style={styles.telegramLink}\n                  >\n                    <img src={telegramLogo} style={styles.telegramLogo}></img>\n                  </a>\n                </div>\n              </li>\n            ))}\n        </ul>\n        Ad hoc:\n        <ul>\n          {members\n            .filter((m) => !!m.ah)\n            .sort((a, b) =>\n              a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n            )\n            .map((m, i) => (\n              <li key={i}>\n                <div style={styles.liDiv}>\n                  {m.name}{' '}\n                  <a\n                    href={`https://t.me/${m.tg}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    style={styles.telegramLink}\n                  >\n                    <img src={telegramLogo} style={styles.telegramLogo}></img>\n                  </a>\n                </div>\n              </li>\n            ))}\n        </ul>\n        <br />\n        <b>{t('about.supportGroups.head')}</b>\n        <ul>\n          <li>\n            <div>\n              {t('about.supportGroups.1')}\n              <a\n                href={links.telegramTheTOLProject}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                style={styles.link}\n              >\n                The TOL Project{' '}\n                <span style={styles.telegramLink}>\n                  <img src={telegramLogo} style={styles.telegramLogo}></img>\n                </span>\n              </a>\n            </div>\n          </li>\n          <li>\n            <div>\n              {t('about.supportGroups.2')}\n              <a\n                href={links.telegramPreparazioneTOL}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                style={styles.link}\n              >\n                Gruppo preparazione TOL{' '}\n                <span style={styles.telegramLink}>\n                  <img src={telegramLogo} style={styles.telegramLogo}></img>\n                </span>\n              </a>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </Wrapper>\n  )\n}\n","import { StyleSheet } from '../../utils/style'\nimport logo from '../../static/logo3000.webp'\nimport { links } from '../../utils/constants'\n\nconst styles = StyleSheet.create({\n  div: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  text: {\n    flex: 1,\n    fontSize: '18pt',\n    display: 'inline-block'\n  },\n  get rightText() {\n    return StyleSheet.compose(this.text, {\n      textAlign: 'right'\n    })\n  },\n  logoLink: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    gap: '10px',\n    margin: '5px',\n    textDecoration: 'none'\n  },\n  logo: {\n    height: '60px'\n  }\n})\n\nexport default function DocumentHeader() {\n  return (\n    <div style={styles.div}>\n      <a\n        style={styles.logoLink}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        href={links.polinetwork}\n      >\n        <img src={logo} alt=\"logo\" style={styles.logo} />\n        <h1 style={styles.text}>PoliNetwork</h1>\n      </a>\n      <h1 style={styles.rightText}>The TOL Project</h1>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/firefox_1.90eb3665.png\";","export default __webpack_public_path__ + \"static/media/firefox_2.b3e6c5bc.png\";","export default __webpack_public_path__ + \"static/media/firefox_3.d2388c27.png\";","import { createRef, forwardRef, ReactNode } from 'react'\nimport ReactToPrint from 'react-to-print'\nimport {\n  Question as IQuestion,\n  QuestionsData,\n  Section\n} from '../../utils/database'\nimport { AnswersData } from '../App'\nimport { links, sectionInfo } from '../../utils/constants'\nimport { StyleSheet, theme } from '../../utils/style'\nimport Button from '../Util/Button'\nimport './ExtendedCorrection.css'\nimport DocumentHeader from './DocumentHeader'\nimport firefoxImg1 from '../../static/firefox_1.png'\nimport firefoxImg2 from '../../static/firefox_2.png'\nimport firefoxImg3 from '../../static/firefox_3.png'\nimport Question from '../Util/Question'\n\nconst styles = StyleSheet.create({\n  collapsible: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '15px',\n    gap: '10px'\n  },\n  doc: {},\n  printButton: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    alignSelf: 'center',\n    gap: '5px'\n  },\n  link: {\n    color: theme.primary\n  },\n  centered: {\n    textAlign: 'center'\n  },\n  li: {\n    margin: '10px'\n  },\n  ul: {\n    listStyleType: 'none'\n  },\n  ol: {\n    paddingLeft: 20\n  },\n  img: {\n    marginTop: 5,\n    marginBottom: 10,\n    maxWidth: 320,\n    width: '100%',\n    height: 'auto',\n    objectFit: 'cover'\n  },\n  nowrap: { whiteSpace: 'nowrap' }\n})\n\n// using 'other' as fallback because\n// other browsers may no longer support the api\ntype Browser = 'FirefoxAndroid' | 'other'\n\ninterface ExtendedCorrectionProps {\n  answers: AnswersData\n  questions: QuestionsData\n  resultTable: ReactNode\n  onSave: () => void\n}\n\nexport default function ExtendedCorrection(props: ExtendedCorrectionProps) {\n  const ref = createRef<HTMLDivElement>()\n  // save date to variable to keep the date\n  // when the test was taken\n  const resultsDate = new Date()\n  const printSupported: boolean = 'print' in window\n\n  let browser: Browser = 'other'\n  const userAgent = navigator.userAgent\n  if (userAgent.includes('Firefox') && userAgent.includes('Android')) {\n    browser = 'FirefoxAndroid'\n  }\n\n  const getTitle = (): string =>\n    `The TOL Project ${resultsDate\n      .toLocaleString()\n      .replace(/\\/|:/g, '-')\n      .replace(/,/g, '')}`\n\n  if (!printSupported) {\n    document.title = getTitle()\n  }\n\n  return (\n    <div style={styles.collapsible}>\n      {printSupported ? (\n        <div style={styles.printButton} className=\"do-not-print\">\n          <ReactToPrint\n            documentTitle={getTitle()}\n            content={() => ref.current}\n            trigger={() => <Button label=\"Salva risultati della simulazione\" />}\n            onAfterPrint={props.onSave}\n          />\n        </div>\n      ) : (\n        <>\n          {browser === 'FirefoxAndroid' && <FirefoxInstructions />}\n          {browser === 'other' && <FallbackInstructions />}\n        </>\n      )}\n      <PrintDocument ref={ref} {...props} />\n    </div>\n  )\n}\n\nconst docStyles = StyleSheet.create({\n  firstPage: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 4\n  },\n  li: {\n    marginBottom: 10\n  }\n})\n\nconst PrintDocument = forwardRef<HTMLDivElement, ExtendedCorrectionProps>(\n  (props: ExtendedCorrectionProps, ref) => {\n    const dateTime = `${new Date().toLocaleDateString()} alle ${new Date().toLocaleTimeString(\n      [],\n      { timeStyle: 'short' }\n    )}`\n    const { resultTable, questions, answers } = props\n    return (\n      <div className=\"print-only\" ref={ref} style={styles.doc}>\n        <div style={docStyles.firstPage}>\n          <DocumentHeader />\n          <p style={styles.centered}>Simulazione del {dateTime}</p>\n          {resultTable}\n          <p>\n            Hai delle domande sui quesiti e la loro risoluzione? Falle sul{' '}\n            <a\n              href={links.telegramPreparazioneTOL}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              style={styles.link}\n            >\n              Gruppo preparazione TOL\n            </a>{' '}\n            di PoliNetwork!\n          </p>\n          <p>\n            Nelle pagine successive troverai, suddivisi per sezione, i quesiti\n            che ti sono stati proposti con il relativo esito.\n          </p>\n        </div>\n        {(Object.entries(questions) as [Section, IQuestion[]][])\n          .sort((a, b) => sectionInfo[a[0]].order - sectionInfo[b[0]].order)\n          .map(([section, values]) => (\n            <div key={section}>\n              <b>{sectionInfo[section].name}</b>\n              <ol>\n                {values.map((q) => {\n                  const letter = answers[section].find(\n                    (a) => a?.id == q.id && a?.sub == q.sub\n                  )?.letter\n                  return (\n                    <li key={q.id + (q.sub || '')} style={docStyles.li}>\n                      <Question q={q} choice={letter} isTest />\n                    </li>\n                  )\n                })}\n              </ol>\n            </div>\n          ))}\n      </div>\n    )\n  }\n)\nPrintDocument.displayName = 'Document'\n\nfunction FirefoxInstructions() {\n  return (\n    <div className=\"do-not-print\">\n      <h3>Salva i tuoi risultati</h3>\n      <p>Il tuo browser (Firefox Android) non supporta la stampa automatica.</p>\n      <p>Per salvare i risultati segui questi passaggi: </p>\n      <ol style={styles.ol}>\n        <li>Apri il menu di Firefox</li>\n        <img src={firefoxImg1} style={styles.img} />\n\n        <li>Premi il tasto per condividere</li>\n        <img src={firefoxImg2} style={styles.img} />\n\n        <li>Nel menu che si apre, premi su \"Salva come PDF\"</li>\n        <img src={firefoxImg3} style={styles.img} />\n      </ol>\n    </div>\n  )\n}\n\nfunction FallbackInstructions() {\n  return (\n    <div className=\"do-not-print\">\n      <h3>Salva i tuoi risultati</h3>\n      <p>\n        Per il tuo browser non è supportata la stampa automatica del PDF con i\n        risultati.\n      </p>\n      <p>\n        Puoi provare ad utilizzare la funzione \"Sala come PDF\" del tuo browser\n        che potrebbe essere nel menu di condivisione oppure nel menu principale\n        del browser.\n      </p>\n      <p>\n        Ti invitiamo a segnalare il tuo browser{' '}\n        <a href=\"https://github.com/PoliNetworkOrg/TheTOLProject/issues/35\">\n          qui\n        </a>{' '}\n        in modo da poter risolvere il problema{' '}\n      </p>\n    </div>\n  )\n}\n","import Fraction from 'fraction.js'\nimport fromEntries from 'fromentries'\nimport {\n  correctionWeight,\n  getSectionName,\n  sectionInfo,\n  tengPassThreshold,\n  testPassThreshold,\n  testTotalScore,\n  View\n} from '../../utils/constants'\nimport { Question, QuestionsData, Section } from '../../utils/database'\nimport { formatNumber, StyleSheet, theme } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\nimport ExtendedCorrection from '../ExtendCorrection/ExtendedCorrection'\nimport {\n  unstable_useBlocker as useBlocker,\n  useNavigate\n} from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport { statePair } from '../../utils/types'\n\nconst styles = StyleSheet.create({\n  div: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    fontSize: '11pt'\n  },\n  tableDiv: {\n    alignSelf: 'center',\n    width: '100%',\n    overflow: 'auto',\n    display: 'flex'\n  },\n  table: { borderSpacing: 0, margin: 'auto' },\n  tableCell: {\n    padding: '5px',\n    paddingInline: '10px',\n    textAlign: 'center',\n    border: `thin solid ${theme.lightBorder}`,\n    borderSpacing: '0px',\n    fontSize: '9.5pt'\n  },\n  get tableHeader() {\n    return StyleSheet.compose(this.tableCell, {\n      fontWeight: 'bold',\n      backgroundColor: theme.lightBackground,\n      textAlign: 'left'\n    })\n  },\n  centeredText: {\n    textAlign: 'center'\n  },\n  p: {\n    padding: '10px',\n    textAlign: 'justify'\n  },\n  resultTable: { display: 'flex', flexDirection: 'column' },\n  h3: {\n    marginBottom: 0,\n    paddingInline: '10px'\n  },\n  restartDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  restartTitle: {\n    textAlign: 'center',\n    maxWidth: 500\n  },\n  restartButton: {\n    margin: '12px',\n    marginBottom: '32px'\n  }\n})\n\ninterface ResultsProps {\n  answers: AnswersData\n  questions: QuestionsData\n  viewState: statePair<View>\n}\nexport default function Results(props: ResultsProps) {\n  const [isResultSaved, setIsResultSaved] = useState(false)\n  const blocker = useBlocker(!isResultSaved)\n\n  const navigate = useNavigate()\n  const handleNewTest = () => {\n    navigate('/', { replace: true })\n  }\n\n  const exit_warn = 'Non hai salvato i tuoi risultati. Sicuro di voler uscire?'\n  useEffect(() => {\n    // set reload protection on first render\n    window.onbeforeunload = () => exit_warn\n\n    if (blocker.state === 'blocked' && !isResultSaved) {\n      const confirmExit = confirm(exit_warn)\n      if (confirmExit) {\n        // user confirmed to leave the page\n        // set onbeforeunload to null, otherwise the prompt is shown twice\n        window.onbeforeunload = null\n        props.viewState[1]('INFO-start')\n        blocker.proceed?.()\n      }\n    }\n  }, [blocker, blocker.location])\n\n  const { answers, questions } = props\n\n  const correctionGrid = fromEntries(\n    (Object.entries(questions) as [Section, Question[]][]).map(\n      ([section, secQuestions]) => {\n        let correct = 0,\n          notGiven = 0,\n          wrong = 0\n\n        secQuestions.forEach((q) => {\n          const answer = answers[section].find(\n            (a) => a && a.id == q.id && a.sub == q.sub\n          )\n\n          if (!answer || !answer.letter) notGiven++\n          else if (answer.letter == q.correct) correct++\n          else wrong++\n        })\n\n        const total = secQuestions.length,\n          sample = sectionInfo[section].sample,\n          sub = sectionInfo[section].sub || 1,\n          weight = sectionInfo[section].coeff\n\n        return [\n          section,\n          {\n            total,\n            correct,\n            notGiven,\n            wrong,\n            weight,\n            score: new Fraction(\n              correctionWeight.correct * correct +\n                correctionWeight.wrong * wrong +\n                correctionWeight.notGiven * notGiven\n            )\n              .div(total)\n              .mul(sample * sub)\n          }\n        ]\n      }\n    )\n  )\n\n  const score = (\n    Object.entries(correctionGrid) as [Section, typeof correctionGrid[string]][]\n  )\n    .map(([, correction]) => correction.score.mul(correction.weight))\n    .reduce((acc, curr) => acc.add(curr), new Fraction(0))\n\n  const roundedScore = parseInt(score.round(0).toString(0))\n  const testPassed = roundedScore >= testPassThreshold,\n    tengPassed = correctionGrid.ing?.correct >= tengPassThreshold\n\n  const resultTable = () => (\n    <div style={styles.resultTable}>\n      <p style={styles.centeredText}>\n        <br />\n        TOL{' '}\n        {testPassed\n          ? `superato${!tengPassed ? ' (OFA TENG)' : ''}`\n          : `non superato: OFA TEST${!tengPassed ? ' + OFA TENG' : ''}`}\n        <br />\n        Punteggio: {formatNumber(score)} / {formatNumber(testTotalScore)} (\n        {formatNumber(score, true)})\n      </p>\n      <br />\n\n      <div style={styles.tableDiv}>\n        <table style={styles.table}>\n          <tr>\n            <td></td>\n            <td style={styles.tableHeader}>Punteggio sezione</td>\n            <td style={styles.tableHeader}>N° quesiti</td>\n            <td style={styles.tableHeader}>Esatti</td>\n            <td style={styles.tableHeader}>Errati</td>\n            <td style={styles.tableHeader}>Senza risposta</td>\n          </tr>\n          {(\n            Object.entries(correctionGrid) as [\n              Section,\n              typeof correctionGrid[Section]\n            ][]\n          )\n            .sort((a, b) => sectionInfo[a[0]].order - sectionInfo[b[0]].order)\n            .map(([section, correction]) => (\n              <tr key={section}>\n                <td style={styles.tableHeader}>{getSectionName(section)}</td>\n                <td style={styles.tableCell}>\n                  {formatNumber(correction.score, true)}\n                </td>\n                <td style={styles.tableCell}>{correction.total}</td>\n                <td style={styles.tableCell}>{correction.correct}</td>\n                <td style={styles.tableCell}>{correction.wrong}</td>\n                <td style={styles.tableCell}>{correction.notGiven}</td>\n              </tr>\n            ))}\n        </table>\n      </div>\n      <br />\n    </div>\n  )\n\n  return (\n    <div style={styles.div}>\n      <div className=\"do-not-print\">{resultTable()}</div>\n\n      <ExtendedCorrection\n        answers={props.answers}\n        questions={props.questions}\n        resultTable={resultTable()}\n        onSave={() => setIsResultSaved(true)}\n      />\n\n      <div className=\"do-not-print\">\n        <h3 style={styles.h3}>Come viene calcolato il punteggio</h3>\n        <p style={styles.p}>\n          Il <b>punteggio massimo</b> conseguibile{' '}\n          <b>è di {formatNumber(testTotalScore, true)}</b> e viene espresso fino\n          alla seconda cifra decimale.\n          <br />\n          L'attribuzione di <b>OFA TEST</b> (Obblighi Formativi Aggiunti)\n          avviene quando il punteggio test, arrotondato all'intero più vicino,{' '}\n          <b>è minore di {formatNumber(testPassThreshold)}</b>.<br />\n          L'attribuzione di <b>OFA TENG</b> avviene quando, considerando la sola\n          sezione di {sectionInfo.ing.name}, il numero di risposte corrette{' '}\n          <b>è inferiore a {formatNumber(tengPassThreshold)}</b>.\n          <br />\n          <br />\n          Il <b>punteggio</b> della prova viene calcolato attribuendo:\n          <ul>\n            <li>\n              {formatNumber(correctionWeight.correct)} punto ad ogni risposta\n              esatta\n            </li>\n            <li>\n              {formatNumber(correctionWeight.wrong)} punti ad ogni risposta\n              errata\n            </li>\n            <li>\n              {formatNumber(correctionWeight.notGiven)} punti per ogni risposta\n              non data\n            </li>\n          </ul>\n          e assegnando\n          <ul>\n            {Object.entries(sectionInfo).map(([, info], index) => (\n              <li key={index}>\n                peso{' '}\n                {typeof info.coeff == 'number'\n                  ? formatNumber(info.coeff)\n                  : info.coeff.toFraction()}{' '}\n                ad ogni quesito di {info.name}\n              </li>\n            ))}\n          </ul>\n          Il <b>punteggio</b> complessivo viene arrotondato all'intero più\n          vicino (es: il punteggio 59,49 viene arrotondato a 59, il punteggio\n          59,50 a 60)\n        </p>\n        <div style={styles.restartDiv}>\n          <h3 style={styles.restartTitle}>\n            Ricordati di salvare i tuoi risultati prima di iniziare un nuovo\n            test, o andranno persi!\n          </h3>\n          <Button\n            label=\"Torna alla home\"\n            style={styles.restartButton}\n            onClick={handleNewTest}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { Trans, useTranslation } from 'react-i18next'\nimport { links } from '../../utils/constants'\nimport { StyleSheet } from '../../utils/style'\nimport Wrapper from '../Util/Wrapper'\n\nconst styles = StyleSheet.create({\n  div: {\n    paddingBlock: '15px'\n  },\n  centered: {\n    textAlign: 'center',\n    margin: 0\n  },\n  licenseImg: {\n    borderWidth: 0,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    display: 'block'\n  }\n})\n\nexport default function License() {\n  const { i18n } = useTranslation()\n  const components = {\n    title: (\n      <span\n        {...{ 'xmlns:dct': 'https://purl.org/dc/terms/' }}\n        property=\"dct:title\"\n      />\n    ),\n    network: (\n      <a\n        href=\"https://polinetwork.org/it/projects/\"\n        property=\"cc:attributionName\"\n        rel=\"cc:attributionURL noreferrer noopener\"\n        target=\"_blank\"\n      />\n    ),\n    cc4: (\n      <a\n        rel=\"license noreferrer noopener\"\n        href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n        target=\"_blank\"\n      />\n    ),\n    githubLicense: (\n      <a\n        {...{ 'xmlns:cc': 'https://creativecommons.org/ns#' }}\n        href={links.githubLicense}\n        rel=\"cc:morePermissions noreferrer noopener\"\n        target=\"_blank\"\n      />\n    )\n  }\n  return (\n    <Wrapper title=\"License\">\n      <p>\n        <Trans i18n={i18n} components={components}>\n          license.main\n        </Trans>\n      </p>\n      <a\n        rel=\"license noreferrer noopener\"\n        href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n        target=\"_blank\"\n        style={{ margin: 10 }}\n      >\n        <img\n          alt=\"Creative Commons License\"\n          style={styles.licenseImg}\n          src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\"\n        />\n      </a>\n    </Wrapper>\n  )\n}\n","import { AnchorHTMLAttributes } from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { links } from '../../utils/constants'\nimport Wrapper from '../Util/Wrapper'\n\nfunction Link({\n  title,\n  children,\n  href,\n  ...props\n}: AnchorHTMLAttributes<HTMLAnchorElement>) {\n  return (\n    <a href={href} target=\"_blank\" rel=\"noreferrer noopener\" {...props}>\n      {title}\n      {children}\n    </a>\n  )\n}\n\nexport default function Privacy() {\n  const { i18n } = useTranslation()\n  const components = {\n    localStorage: <Link title=\"local storage\" href={links.localStorageMDN} />\n  }\n  return (\n    <Wrapper title=\"Privacy & Cookies\">\n      <p>\n        <Trans\n          i18n={i18n}\n          components={{\n            link: components.localStorage\n          }}\n        >\n          privacy.localStorage\n        </Trans>\n      </p>\n    </Wrapper>\n  )\n}\n","import { Question } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { Answer } from '../App'\nimport RenderedText from '../Util/RenderedText'\n\nconst styles = StyleSheet.create({\n  baseText: {\n    fontSize: '11pt'\n  },\n  label: {\n    display: 'flex',\n    marginBottom: '2px'\n  },\n  radioText: {\n    display: 'flex',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    paddingInline: '10px',\n    alignItems: 'flex-start'\n  },\n  radioSpan: {\n    width: '2em',\n    float: 'left',\n    display: 'inline-block'\n  }\n})\n\ninterface AnswerFormProps {\n  currentAnswer: Answer | undefined\n  currentQuestion: Question\n  tmpAnswerState: statePair<Answer['letter']>\n}\n\nexport default function AnswerForm(props: AnswerFormProps) {\n  const letterState = props.tmpAnswerState\n\n  if (!props.currentQuestion)\n    return (\n      <span style={styles.baseText}>\n        <br />\n        No answers to display ¯\\_(ツ)_/¯\n      </span>\n    )\n\n  return (\n    <div>\n      <RadioRow\n        letter=\"a\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.a}\n      />\n      <RadioRow\n        letter=\"b\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.b}\n      />\n      <RadioRow\n        letter=\"c\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.c}\n      />\n      <RadioRow\n        letter=\"d\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.d}\n      />\n      <RadioRow\n        letter=\"e\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.e}\n      />\n      <RadioRow letter={undefined} letterState={letterState} text=\"Non so\" />\n    </div>\n  )\n}\n\ninterface RadioRowProps {\n  letter: Answer['letter']\n  letterState: statePair<Answer['letter']>\n  text: string\n}\nfunction RadioRow(props: RadioRowProps) {\n  return (\n    <tr style={styles.baseText}>\n      <label style={styles.label}>\n        <td style={styles.radioText}>\n          <span style={styles.radioSpan}>\n            {props.letter?.toUpperCase() || '?'}{' '}\n          </span>\n          <input\n            type=\"radio\"\n            value={props.letter}\n            checked={props.letter == props.letterState[0]}\n            onChange={(event) => {\n              // @ts-expect-error The value is correct\n              props.letterState[1](event.target.value || undefined)\n            }}\n          />\n        </td>\n        <td>\n          <RenderedText text={props.text} />\n        </td>\n      </label>\n    </tr>\n  )\n}\n","import { StyleSheet, theme } from '../../utils/style'\nimport { FaCheck } from 'react-icons/fa'\nimport Button from '../Util/Button'\nimport { statePair } from '../../utils/types'\nimport { Answer } from '../App'\nimport { Question } from '../../utils/database'\n\nconst styles = StyleSheet.create({\n  controlsDiv: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'flex-end',\n    fontSize: '9.5pt',\n    verticalAlign: 'middle',\n    gap: '10px',\n    paddingBlock: '10px'\n  },\n  label: { display: 'flex', alignItems: 'center' },\n  icon: { color: theme.timerGreen }\n})\n\ninterface BottomControlsProps {\n  currentQuestion: Question\n  tmpAnswerState: statePair<Answer['letter']>\n  tmpFlaggedState: statePair<boolean>\n  updateAnswer: (updatedAnswer: Answer) => void\n}\nexport default function BottomControls(props: BottomControlsProps) {\n  const [flagged, setFlagged] = props.tmpFlaggedState\n\n  if (!props.currentQuestion) return <div style={styles.controlsDiv} />\n\n  return (\n    <div style={styles.controlsDiv}>\n      <label style={styles.label}>\n        <input\n          type=\"checkbox\"\n          checked={flagged}\n          onChange={() => {\n            setFlagged(!flagged)\n          }}\n        />\n        <span>Da rivedere</span>\n      </label>\n      <Button\n        label=\"Conferma e vai alla successiva\"\n        leftIcon={() => <FaCheck style={styles.icon} />}\n        onClick={() => {\n          props.updateAnswer({\n            id: props.currentQuestion.id,\n            sub: props.currentQuestion.sub,\n            letter: props.tmpAnswerState[0],\n            flagged\n          })\n        }}\n      />\n    </div>\n  )\n}\n","import { useContext } from 'react'\nimport { Question } from '../../utils/database'\nimport { StyleSheet, theme } from '../../utils/style'\nimport { Answer } from '../App'\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io'\nimport Button from '../Util/Button'\nimport { MobileContext } from '../../utils/contexts'\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  leftContainer: {\n    display: 'flex'\n  },\n  rightContainer: {\n    display: 'flex',\n    padding: '1em',\n    gap: '5px'\n  },\n  p: {\n    textAlign: 'left',\n    fontSize: '11pt',\n    minWidth: '4em',\n    padding: '7.5px'\n  },\n  get question() {\n    return StyleSheet.compose(this.p, {\n      fontWeight: 'bold',\n      width: '7.1em',\n      paddingLeft: 0\n    })\n  },\n  get answerLetter() {\n    return StyleSheet.compose(this.p, {\n      textAlign: 'center',\n      marginInline: '5px',\n      boxShadow: theme.boxShadow\n    })\n  },\n  icon: {\n    height: '17.5px',\n    width: '17.5px',\n    color: theme.primary\n  },\n  button: {\n    paddingBlock: 0\n  }\n})\n\nconst mobileStyles = StyleSheet.create({\n  container: StyleSheet.compose(styles.container, {\n    flexDirection: 'column-reverse'\n  }),\n  rightContainer: StyleSheet.compose(styles.rightContainer, {\n    justifyContent: 'space-between'\n  })\n})\n\ninterface QuestionHeaderProps {\n  currentAnswer: Answer\n  questionIndex: number\n  sectionQuestions: Question[]\n  shiftQuestionIndex: (offset: number) => void\n}\nexport default function QuestionHeader(props: QuestionHeaderProps) {\n  const { mobile } = useContext(MobileContext)\n  return (\n    <div style={mobile ? mobileStyles.container : styles.container}>\n      <div style={styles.leftContainer}>\n        <p style={styles.question}>Domanda {props.questionIndex + 1}</p>\n        <p\n          style={StyleSheet.compose(styles.answerLetter, {\n            backgroundColor: props.currentAnswer?.flagged\n              ? theme.questionYellow\n              : props.currentAnswer?.letter\n              ? theme.questionGreen\n              : 'inherit'\n          })}\n        >\n          {(props.currentAnswer?.letter?.toUpperCase() || '') +\n            (props.currentAnswer?.flagged ? '?' : '') || ' '}\n        </p>\n        <p style={styles.p}>\n          Risposta {props.currentAnswer?.letter ? '' : 'non '}data\n        </p>\n      </div>\n      <div style={mobile ? mobileStyles.rightContainer : styles.rightContainer}>\n        <Button\n          label=\"precedente\"\n          onClick={() => props.shiftQuestionIndex(-1)}\n          style={styles.button}\n          leftIcon={() => <IoMdArrowRoundBack style={styles.icon} />}\n        />\n        <Button\n          label=\"successiva\"\n          onClick={() => props.shiftQuestionIndex(1)}\n          style={styles.button}\n          rightIcon={() => <IoMdArrowRoundForward style={styles.icon} />}\n        />\n      </div>\n    </div>\n  )\n}\n","import { StyleSheet } from '../../utils/style'\nimport GeneralPurposeCollapsible from './GeneralPurposeCollapsible'\n\nconst styles = StyleSheet.create({\n  p: {\n    margin: '2px',\n    padding: '10px',\n    textAlign: 'justify'\n  },\n  innerP: { padding: '1px', margin: 0 }\n})\n\ninterface CollapsibleTextProps {\n  label: string\n  longText: string\n  startOpen?: boolean\n}\nexport default function CollapsibleText(props: CollapsibleTextProps) {\n  return (\n    <GeneralPurposeCollapsible label={props.label} startOpen={props.startOpen}>\n      <div style={styles.p}>\n        {props.longText\n          .trim()\n          .split('\\n')\n          .map((t, i) => (\n            <p style={styles.innerP} key={i}>\n              {t}\n            </p>\n          ))}\n      </div>\n    </GeneralPurposeCollapsible>\n  )\n}\n","import { DATABASE_REF } from '../../utils/constants'\nimport { Question } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport CollapsibleText from '../Util/CollapsibleText'\nimport QuestionAttachments from '../Util/QuestionAttachments'\nimport RenderedText from '../Util/RenderedText'\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBlock: 0,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  collapsible: {\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  attachment: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    gap: '5px'\n  },\n  image: {\n    maxHeight: '500px',\n    maxWidth: '100%',\n    objectFit: 'contain'\n  }\n})\n\ninterface QuestionViewProps {\n  question: Question\n}\n\nexport default function QuestionView({ question }: QuestionViewProps) {\n  if (!question)\n    return (\n      <span style={styles.container}>No question to display ¯\\_(ツ)_/¯</span>\n    )\n\n  return (\n    <div style={{ marginBottom: question.attachments?.length ? 0 : '15px' }}>\n      {question.track && (\n        <CollapsibleText\n          label=\"mostra/nascondi brano\"\n          longText={question.track}\n        />\n      )}\n      <div style={styles.container}>\n        <RenderedText text={question.text}></RenderedText>\n        <QuestionAttachments q={question} dbRef={DATABASE_REF.STABLE} />\n      </div>\n    </div>\n  )\n}\n","import { AnswerLetter, Section, QuestionsData } from '../../utils/database'\nimport { StyleSheet, theme } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { AnswersData } from '../App'\n\nconst styles = StyleSheet.create({\n  bordered: {\n    borderBottom: 'thin solid #606060'\n  },\n  barContainer: {\n    width: '100%',\n    boxSizing: 'border-box',\n    overflow: 'auto hidden',\n    padding: '5px 2.5px 5px 0'\n  },\n  bar: {\n    display: 'flex',\n    fontSize: '9.5pt',\n    textDecoration: 'none',\n    color: theme.primary\n  },\n  cellContainer: {\n    display: 'flex',\n    flex: '1 0 25px',\n    flexDirection: 'column',\n    alignContent: 'baseline',\n    textAlign: 'center',\n    maxWidth: '4em',\n    backgroundColor: theme.lightBackground\n  },\n  cellSub: {\n    padding: '0.3em',\n    height: '1.2em',\n    boxShadow: theme.boxShadow\n  },\n  selectedCell: {\n    outline: `5px solid ${theme.primary}`,\n    marginInline: '4px',\n    color: 'black'\n  },\n  p: { margin: 'auto' }\n})\n\ninterface RecapBarProps {\n  active: boolean\n  currentQuestionIndexState: statePair<number>\n  sectionAnswers: AnswersData[Section]\n  sectionQuestions: QuestionsData[Section]\n}\nexport default function RecapBar(props: RecapBarProps) {\n  return (\n    <div style={styles.barContainer} id=\"recap-bar-container\">\n      <a\n        style={StyleSheet.compose(styles.bar, {\n          minWidth: props.sectionQuestions.length * 25 + 10\n        })}\n        {...(props.active ? { href: '#' } : {})}\n      >\n        {props.sectionQuestions.map((q, i) => {\n          const answer = props.sectionAnswers.find(\n            (a) => a && a.id == q.id && (q.sub ? q.sub == a.sub : true)\n          )\n          return (\n            <AnswerCell\n              key={i}\n              index={i}\n              letter={answer?.letter}\n              flagged={answer?.flagged || false}\n              onClick={() => {\n                if (props.active) props.currentQuestionIndexState[1](i)\n              }}\n              selected={props.active && props.currentQuestionIndexState[0] == i}\n            />\n          )\n        })}\n      </a>\n    </div>\n  )\n}\n\ninterface AnswerCellProps {\n  index: number\n  letter: AnswerLetter | undefined\n  flagged: boolean\n  onClick: () => void\n  selected: boolean\n}\nfunction AnswerCell(props: AnswerCellProps) {\n  return (\n    <div\n      style={StyleSheet.compose(\n        styles.cellContainer,\n        props.selected && styles.selectedCell\n      )}\n      onClick={props.onClick}\n    >\n      <div\n        style={StyleSheet.compose(\n          styles.cellSub,\n          styles.bordered,\n          props.selected && { fontWeight: 'bold' }\n        )}\n      >\n        <p style={styles.p}>{props.index + 1}</p>\n      </div>\n      <div\n        style={StyleSheet.compose(styles.cellSub, {\n          backgroundColor: props.flagged\n            ? theme.questionYellow\n            : props.letter\n            ? theme.questionGreen\n            : 'white'\n        })}\n      >\n        <p style={styles.p}>\n          {props.letter?.toUpperCase() || ' '}\n          {props.flagged && '?'}\n        </p>\n      </div>\n    </div>\n  )\n}\n","import { sectionInfo } from '../../utils/constants'\nimport { QuestionsData, Section } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    paddingTop: '10px',\n    paddingBottom: '20px',\n    alignItems: 'center',\n    flexDirection: 'column'\n  }\n})\n\ninterface SectionRecapProps {\n  goToNextSection: () => void\n  section: Section\n  sectionAnswers: AnswersData[Section]\n  sectionQuestions: QuestionsData[Section]\n  secondsUsed: number\n  minutes: number\n}\nexport default function SectionRecap({\n  minutes,\n  secondsUsed,\n  ...props\n}: SectionRecapProps) {\n  const order = sectionInfo[props.section].order\n  const seconds = minutes * 60\n  return (\n    <div style={styles.container}>\n      <p>\n        {'Tempo utilizzato: '}\n        <span>\n          {displayTime((secondsUsed / 60) % 60)}:{displayTime(secondsUsed / 60)}\n          :{displayTime(secondsUsed % 60)}\n        </span>\n        {' / '}\n        <span>\n          {displayTime(minutes / 60)}:{displayTime(minutes % 60)}:\n          {displayTime(seconds % 60)}\n        </span>\n        {' ('}\n        <span>\n          {displayTime((seconds - secondsUsed) / 60 / 60)}:\n          {displayTime(((seconds - secondsUsed) / 60) % 60)}:\n          {displayTime((seconds - secondsUsed) % 60)} rimanente)\n        </span>\n      </p>\n      <Button\n        label={\n          order == Math.max(...Object.values(sectionInfo).map((i) => i.order))\n            ? 'Vedi esito del test'\n            : 'Prossima sezione'\n        }\n        onClick={props.goToNextSection}\n      />\n    </div>\n  )\n}\n\nfunction displayTime(time: number) {\n  return Math.floor(time).toLocaleString(undefined, {\n    minimumIntegerDigits: 2\n  })\n}\n","import { useContext } from 'react'\nimport { TimerResult } from 'react-timer-hook'\nimport { StyleSheet, theme } from '../../utils/style'\nimport { FiClock } from 'react-icons/fi'\nimport { MobileContext } from '../../utils/contexts'\n\nconst alertThreshold = 60\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: '5px'\n  },\n  clockWrapper: {\n    color: theme.timerGreen,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: '5px'\n  },\n  numbers: {\n    display: 'flex',\n    fontWeight: 'bold',\n    color: 'inherit',\n    border: '2px solid',\n    borderRadius: '4px',\n    height: '1.75em',\n    fontSize: '1.25em',\n    alignItems: 'center',\n    paddingInline: '10px'\n  },\n  expiring: {\n    color: theme.timerRed\n  },\n  icon: {\n    color: 'inherit',\n    height: '2.5em',\n    width: 'auto'\n  },\n  p: {\n    display: 'flex',\n    fontSize: '0.75em',\n    maxWidth: '12em',\n    textAlign: 'left',\n    wordWrap: 'normal'\n  }\n})\n\ninterface TimerProps {\n  timer: TimerResult\n}\nexport default function Timer(props: TimerProps) {\n  const { mobile } = useContext(MobileContext)\n  const { timer } = props\n\n  return (\n    <div\n      style={\n        mobile\n          ? StyleSheet.compose(styles.container, {\n              alignSelf: 'flex-end',\n              marginBottom: '1em'\n            })\n          : styles.container\n      }\n    >\n      <div\n        style={StyleSheet.compose(\n          styles.clockWrapper,\n          (timer.hours * 60 + timer.minutes) * 60 + timer.seconds <\n            alertThreshold && styles.expiring\n        )}\n      >\n        <FiClock style={styles.icon} />\n        <div style={styles.numbers}>\n          {timer.hours.toLocaleString(undefined, {\n            minimumIntegerDigits: 2\n          })}\n          :\n          {timer.minutes.toLocaleString(undefined, {\n            minimumIntegerDigits: 2\n          })}\n          :\n          {timer.seconds.toLocaleString(undefined, { minimumIntegerDigits: 2 })}\n        </div>\n      </div>\n      {mobile ? undefined : (\n        <p style={styles.p}>\n          Tempo rimanente\n          <br /> per la sezione corrente\n        </p>\n      )}\n    </div>\n  )\n}\n","import { useContext } from 'react'\nimport { TimerResult } from 'react-timer-hook'\nimport { getSectionName } from '../../utils/constants'\nimport { MobileContext } from '../../utils/contexts'\nimport { Section, QuestionsData } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\nimport Timer from './Timer'\n\nconst styles = StyleSheet.create({\n  outerDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  innerDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    gap: '15px',\n    fontSize: '11pt'\n  },\n  exitBtn: {\n    background: '#d81e11',\n    border: '2px solid #d81e11',\n    fontSize: '9.5pt',\n    color: 'white',\n    borderRadius: 2,\n    cursor: 'pointer'\n  }\n})\n\nconst mobileStyles = StyleSheet.create({\n  outerDiv: StyleSheet.compose(styles.outerDiv, {\n    flexDirection: 'column'\n  }),\n  innerDiv: StyleSheet.compose(styles.innerDiv, {\n    width: '100%',\n    justifyContent: 'space-between'\n  })\n})\n\ninterface TopControlsProps {\n  active: boolean\n  answers: AnswersData\n  closeSection: () => void\n  exitTest: () => void\n  currentSection: Section\n  timer: TimerResult\n  questions: QuestionsData\n}\n\nexport default function TopControls(props: TopControlsProps) {\n  const { mobile } = useContext(MobileContext)\n  const { currentSection } = props\n\n  return (\n    <div style={mobile ? mobileStyles.outerDiv : styles.outerDiv}>\n      <div style={mobile ? mobileStyles.innerDiv : styles.innerDiv}>\n        <div>\n          <p>\n            Sezione: <b>{getSectionName(currentSection)}</b> <br />\n            Riposte:{' '}\n            {\n              props.answers[currentSection].filter((a) => !!a.letter).length\n            } / {props.questions[currentSection].length}\n            {mobile && <br />}\n            {props.active &&\n              ` (${props.answers[currentSection].reduce(\n                (acc, curr) => acc + (curr.flagged ? 1 : 0),\n                0\n              )} da rivedere)`}\n          </p>\n        </div>\n        {props.active && (\n          <>\n            <Button label=\"Chiudi sezione\" onClick={props.closeSection} />\n            <button style={styles.exitBtn} onClick={props.exitTest}>\n              Abbandona il test\n            </button>\n          </>\n        )}\n      </div>\n      <Timer timer={props.timer} />\n    </div>\n  )\n}\n","import { useContext, useEffect, useMemo, useState } from 'react'\nimport { unstable_useBlocker as useBlocker, Navigate } from 'react-router-dom'\nimport { useTimer } from 'react-timer-hook'\nimport {\n  DSATimeModifier,\n  getNextSection,\n  sectionInfo,\n  View\n} from '../../utils/constants'\nimport { TestContext } from '../../utils/contexts'\nimport { Section, QuestionsData } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { Answer, AnswersData, TimeRecord } from '../App'\nimport AnswerForm from './AnswerForm'\nimport BottomControls from './BottomControls'\nimport QuestionHeader from './QuestionHeader'\nimport QuestionView from './QuestionView'\nimport RecapBar from './RecapBar'\nimport SectionRecap from './SectionRecap'\nimport TopControls from './TopControls'\n\nconst styles = StyleSheet.create({\n  testing: { display: 'flex', flexDirection: 'column' }\n})\n\ninterface QuestionsFormProps {\n  answersState: statePair<AnswersData>\n  questions: QuestionsData\n  sectionState: statePair<Section>\n  timeRecordState: statePair<TimeRecord>\n  viewState: statePair<View>\n}\nexport default function QuestionsForm(props: QuestionsFormProps) {\n  const { isDsa } = useContext(TestContext)\n  const minutesCoeff = isDsa ? DSATimeModifier : 1\n  const [qIndex, originalSetQIndex] = useState(0),\n    tmpFlaggedState = useState(false),\n    tmpAnswerState = useState<Answer['letter']>(),\n    alertDisplayedState = useState(false)\n\n  const [currentSection, setSection] = props.sectionState,\n    [view, setView] = props.viewState,\n    [answers, setAnswers] = props.answersState,\n    [timeRecord, setTimeRecord] = props.timeRecordState\n\n  const sectionQuestions = props.questions[props.sectionState[0]],\n    currentQuestion = sectionQuestions[qIndex],\n    currentAnswer = answers[currentSection][qIndex],\n    shouldShowAlert =\n      !alertDisplayedState[0] &&\n      (tmpAnswerState[0] != currentAnswer?.letter ||\n        tmpFlaggedState[0] != (currentAnswer?.flagged || false))\n\n  useEffect(() => {\n    // called when the qIndex is updated (the user changes question)\n    // sets the scroll of the recap bar container to keep the selected question in view\n    const recapBarElement = document.getElementById('recap-bar-container')\n    if (!recapBarElement) return\n\n    // this width works ok considering margins, widths, and paddings of the elements\n    const width = recapBarElement.clientWidth - 40\n    // 25 is the min width of a question cell, 2px margin to see the cell before\n    const maxScroll = qIndex * 25 - 2\n    const minScroll = maxScroll - width\n\n    // the scrollLeft musth be kept between the two values\n    if (recapBarElement.scrollLeft < minScroll)\n      recapBarElement.scrollLeft = minScroll\n    if (recapBarElement.scrollLeft > maxScroll)\n      recapBarElement.scrollLeft = maxScroll\n  }, [qIndex])\n\n  const showAlert = () => {\n    alert(\n      `Se prima non premi \"Conferma e vai alla successiva\" la risposta non verrà salvata.`\n    )\n    alertDisplayedState[1](true)\n  }\n\n  const closeSection = () => {\n    if (shouldShowAlert) return showAlert()\n    // else it's already reset by setQIndex\n\n    setView('TOL-secRecap')\n    setQIndex(0)\n    tmpAnswerState[1](undefined)\n    tmpFlaggedState[1](false)\n\n    const nextAnswers = answers\n    nextAnswers[currentSection] = nextAnswers[currentSection].map((a) => ({\n      ...a,\n      flagged: false\n    }))\n    setAnswers(nextAnswers)\n\n    const nextTR = timeRecord\n    nextTR[currentSection] =\n      sectionInfo[currentSection].minutes * minutesCoeff * 60 -\n      ((timer.hours * 60 + timer.minutes) * 60 + timer.seconds)\n    setTimeRecord(nextTR)\n\n    timer.restart(new Date(), false)\n  }\n\n  const setQIndex = (\n    index: React.SetStateAction<number>,\n    ignoreAlert = false\n  ) => {\n    if (shouldShowAlert && !ignoreAlert) {\n      showAlert()\n    } else {\n      const next = answers[currentSection][index as number]\n\n      tmpFlaggedState[1](next?.flagged || false)\n      tmpAnswerState[1](next?.letter || undefined)\n      alertDisplayedState[1](false)\n\n      originalSetQIndex(index)\n    }\n  }\n\n  const shiftQIndex = (offset: number, ignoreAlert = false) => {\n    const next =\n      (qIndex + offset + sectionQuestions.length) % sectionQuestions.length || 0\n    return setQIndex(next, ignoreAlert)\n  }\n\n  const timer = useTimer({\n    expiryTimestamp: getTimerExpDate(\n      sectionInfo[currentSection].minutes * minutesCoeff\n    ),\n    onExpire: () => {\n      timer.seconds = 0\n      closeSection()\n    }\n  })\n\n  const currentQuestionIndexState: statePair<number> = [qIndex, setQIndex]\n  if (!props.questions) return <span>Loading...</span>\n\n  const getViewElement = () => {\n    if (view == 'TOL-testing')\n      return (\n        <div style={styles.testing}>\n          <QuestionHeader\n            currentAnswer={currentAnswer}\n            questionIndex={qIndex}\n            shiftQuestionIndex={shiftQIndex}\n            sectionQuestions={sectionQuestions}\n          />\n          <QuestionView question={currentQuestion} />\n          <AnswerForm\n            currentAnswer={currentAnswer}\n            currentQuestion={currentQuestion}\n            tmpAnswerState={tmpAnswerState}\n          />\n          <BottomControls\n            currentQuestion={currentQuestion}\n            tmpAnswerState={tmpAnswerState}\n            tmpFlaggedState={tmpFlaggedState}\n            updateAnswer={(a) => {\n              const next = answers\n              next[currentSection][qIndex] = a\n              setAnswers(next)\n              shiftQIndex(1, true)\n            }}\n          />\n        </div>\n      )\n    else if (view == 'TOL-secRecap')\n      return (\n        <SectionRecap\n          goToNextSection={() => {\n            const nextSection = getNextSection(currentSection)\n            if (nextSection) {\n              setSection(nextSection)\n              timer.restart(\n                getTimerExpDate(sectionInfo[nextSection].minutes * minutesCoeff)\n              )\n              setView('TOL-testing')\n            } else {\n              setView('TOL-end')\n            }\n          }}\n          section={currentSection}\n          secondsUsed={timeRecord[currentSection] || 0}\n          sectionAnswers={answers[currentSection]}\n          sectionQuestions={props.questions[currentSection]}\n          minutes={sectionInfo[currentSection].minutes * minutesCoeff}\n        />\n      )\n    else if (view === 'TOL-end') return <Navigate to=\"/results\" replace />\n    else return <Navigate to=\"/\" replace />\n  }\n\n  const isBlocked = useMemo(\n    () => ['TOL-testing', 'TOL-secRecap'].includes(view),\n    [view]\n  )\n  const blocker = useBlocker(isBlocked)\n\n  const exit_warn =\n    'Sei sicuro di voler abbandonare il test? I progressi non verranno salvati.'\n  const handleExitTest = () => {\n    const confirmExit = confirm(exit_warn)\n    if (confirmExit) {\n      // user confirmed to exit the test\n      // set onbeforeunload to null, otherwise the prompt is shown twice\n      window.onbeforeunload = null\n      location.reload()\n    }\n  }\n\n  useEffect(() => {\n    // set reload protection on first render\n    window.onbeforeunload = () => exit_warn\n\n    if (blocker.state === 'blocked' && !isBlocked) {\n      const confirmExit = confirm(exit_warn)\n      if (confirmExit) {\n        // user confirmed to leave the page\n        // set onbeforeunload to null, otherwise the prompt is shown twice\n        window.onbeforeunload = null\n        props.viewState[1]('INFO-start')\n        blocker.proceed?.()\n      }\n    }\n  }, [])\n\n  return (\n    <div>\n      <TopControls\n        active={view == 'TOL-testing'}\n        answers={answers}\n        closeSection={closeSection}\n        exitTest={handleExitTest}\n        currentSection={currentSection}\n        questions={props.questions}\n        timer={timer}\n      />\n      <RecapBar\n        active={view == 'TOL-testing'}\n        currentQuestionIndexState={currentQuestionIndexState}\n        sectionAnswers={answers[currentSection]}\n        sectionQuestions={sectionQuestions}\n      />\n      {getViewElement()}\n    </div>\n  )\n}\n\nfunction getTimerExpDate(minutes: number) {\n  const res = new Date()\n  res.setSeconds(res.getSeconds() + minutes * 60)\n  return res\n}\n","import { StyleSheet, theme } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  div: {\n    height: '15px',\n    backgroundColor: theme.primary\n  },\n  text: {\n    color: 'white',\n    margin: 'auto .5em',\n    fontSize: '9.5pt'\n  }\n})\n\ninterface SeparatorProps {\n  text?: string\n}\nexport default function Separator(props: SeparatorProps) {\n  return (\n    <div style={styles.div} className=\"do-not-print\">\n      <p style={styles.text}>{props.text || ''}</p>\n    </div>\n  )\n}\n","import { useContext, useEffect, useMemo, useState } from 'react'\nimport { DATABASE_REF } from '../../utils/constants'\nimport { MobileContext } from '../../utils/contexts'\nimport {\n  Database,\n  DatabaseStore,\n  Question as IQuestion,\n  Section,\n  sheetDict\n} from '../../utils/database'\nimport { baseStyle } from '../../utils/style'\nimport CollapsibleText from '../Util/CollapsibleText'\nimport Question from '../Util/Question'\nimport Select from '../Util/Select'\n\ninterface Props {\n  dbs?: DatabaseStore\n}\nexport default function QPreview(props: Props) {\n  const [isCustom, setIsCustom] = useState(true)\n\n  return (\n    <div style={baseStyle}>\n      <Select\n        label=\"Question type\"\n        entries={[\n          { value: 'custom', label: 'Custom' },\n          { value: 'database', label: 'Database' }\n        ]}\n        defaultValue=\"custom\"\n        onChange={(v) => setIsCustom(v === 'custom')}\n      />\n      {isCustom ? <CustomQ /> : <DatabaseQ {...props} />}\n    </div>\n  )\n}\n\nconst sections = Object.entries(sheetDict).map(([key, value]) => ({\n  label: key,\n  value\n}))\n\nfunction DatabaseQ({ dbs }: Props) {\n  if (!dbs) return <div style={baseStyle}>Loading...</div>\n  const [dbRef, setDbRef] = useState<DATABASE_REF>(DATABASE_REF.STABLE)\n  const db = useMemo(() => dbs[dbRef], [dbRef])\n\n  const [section, setSection] = useState<Section>(sections[0].value)\n\n  const ids = useMemo(() => {\n    const list: string[] = []\n    db[section]\n      .filter((q) => q.id)\n      .map((q) => {\n        if (!list.includes(q.id)) list.push(q.id)\n      })\n    return list\n  }, [db, section])\n\n  const [id, setID] = useState(ids[0])\n\n  useEffect(() => {\n    if (!ids.includes(id)) setID(ids[0])\n  }, [ids])\n\n  return (\n    <div>\n      <Select\n        label=\"Database\"\n        entries={[\n          { value: DATABASE_REF.STABLE, label: 'Production' },\n          { value: DATABASE_REF.MAIN, label: 'Development' }\n        ]}\n        defaultValue={dbRef}\n        onChange={(v) => setDbRef(v as DATABASE_REF)}\n      />\n\n      <Select\n        label=\"Section\"\n        entries={sections}\n        value={section}\n        onChange={(v) => {\n          setSection(v as Section)\n        }}\n      />\n\n      <Select\n        label=\"ID\"\n        entries={ids.map((id) => ({ label: id, value: id }))}\n        value={id}\n        onChange={setID}\n      />\n      <QuestionRender id={id} section={section} db={db} dbRef={dbRef} />\n    </div>\n  )\n}\n\ninterface QuestionRenderProps {\n  id: string\n  section: Section\n  db: Database\n  dbRef?: DATABASE_REF\n}\nfunction QuestionRender({ id, section, db, dbRef }: QuestionRenderProps) {\n  const { mobile } = useContext(MobileContext)\n  const gridTemplate = useMemo(\n    () => (mobile ? '1fr min-content / 100%' : '1fr / 50% 50%'),\n    [mobile]\n  )\n\n  const questions = useMemo(\n    () =>\n      db[section].filter((q) => {\n        return q.id == id\n      }),\n    [id, section, db]\n  )\n\n  return questions.length !== 0 ? (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplate\n      }}\n    >\n      <div style={{ order: mobile ? 2 : 1 }}>\n        {questions.map((q, idx) => (\n          <>\n            <Question\n              q={q}\n              isDebug\n              showAttachments\n              dbRef={dbRef}\n              key={`${section}-${q.id}-${q.sub || 0}`}\n            />\n            {idx < questions.length - 1 && <hr />}\n          </>\n        ))}\n      </div>\n      <div style={{ order: mobile ? 1 : 2 }}>\n        {questions[0].track && (\n          <CollapsibleText\n            label=\"mostra/nascondi brano\"\n            longText={questions[0].track}\n          />\n        )}\n      </div>\n    </div>\n  ) : (\n    <p>Question not found</p>\n  )\n}\n\nfunction CustomQ() {\n  const [text, setText] = useState('')\n  const [a, setA] = useState('')\n  const [b, setB] = useState('')\n  const [c, setC] = useState('')\n  const [d, setD] = useState('')\n  const [e, setE] = useState('')\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const t = (f: (..._: any[]) => any) => (e: any) => f(e.target.value)\n\n  return (\n    <div>\n      <label>\n        Testo:\n        <br />\n        <textarea value={text} onChange={t(setText)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        A:\n        <br />\n        <textarea value={a} onChange={t(setA)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        B:\n        <br />\n        <textarea value={b} onChange={t(setB)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        C:\n        <br />\n        <textarea value={c} onChange={t(setC)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        D:\n        <br />\n        <textarea value={d} onChange={t(setD)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        E:\n        <br />\n        <textarea value={e} onChange={t(setE)}></textarea>\n      </label>\n      <br />\n      <br />\n      <Question q={{ text, answers: { a, b, c, d, e } } as IQuestion} isDebug />\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport {\n  Route,\n  createHashRouter,\n  createRoutesFromElements,\n  RouterProvider,\n  Outlet,\n  Navigate,\n  useLocation\n} from 'react-router-dom'\nimport { RibbonContainer, RightCornerRibbon } from 'react-ribbons'\nimport {\n  AnswerLetter,\n  Section,\n  QuestionsData,\n  readDatabase,\n  selectRandomQuestions,\n  DatabaseStore\n} from '../utils/database'\nimport { StyleSheet } from '../utils/style'\nimport DBPreview from './pages/DBPreview'\nimport ErrorView from './ErrorView'\nimport Footer from './Footer'\nimport Header from './Header'\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Results from './pages/Results'\nimport License from './pages/License'\nimport Privacy from './pages/Privacy'\nimport QuestionsForm from './QuestionsForm/QuestionsForm'\nimport Separator from './Util/Separator'\nimport QPreview from './pages/QPreview'\nimport { MobileContext, TestProvider } from '../utils/contexts'\nimport { LocalStorage } from '../utils/storage'\nimport { DATABASE_REF, View } from '../utils/constants'\nimport { statePair } from '../utils/types'\n\nexport interface Answer {\n  id: string\n  sub?: string\n  letter: AnswerLetter | undefined\n  flagged: boolean\n}\n\nexport type AnswersData = Record<Section, Answer[]>\n\nexport type TimeRecord = Partial<Record<Section, number>>\n\nconst styles = StyleSheet.create({\n  app: { paddingInline: '8px' },\n  routeContainer: { paddingInline: '7.5px' }\n})\n\nexport default function App() {\n  const [dbs, setDbs] = useState<DatabaseStore>()\n  const [questions, setQuestions] = useState<QuestionsData>()\n  const [view, setView] = useState<View>('INFO-start')\n  const sectionState = useState<Section>('ing')\n  const answersState = useState<AnswersData>({\n    ing: [],\n    mat: [],\n    com: [],\n    fis: []\n  })\n  const timeRecordState = useState<TimeRecord>({})\n  const [loadingError, showError] = useState<[string, Error] | []>([])\n  const [mobile, setMobile] = useState<boolean>(false)\n\n  async function loadDatabases() {\n    try {\n      const stable = await readDatabase(DATABASE_REF.STABLE)\n      const main = await readDatabase(DATABASE_REF.MAIN)\n      setDbs({\n        [DATABASE_REF.STABLE]: stable,\n        [DATABASE_REF.MAIN]: main\n      })\n    } catch (e) {\n      showError([\n        'There has been an issue while fetching the database data. Please retry later.',\n        e as Error\n      ])\n    }\n  }\n\n  useEffect(() => {\n    LocalStorage.checkLastChange() // privacy check\n    loadDatabases()\n\n    setMobile(window.innerWidth < 768)\n    window.addEventListener('resize', () => {\n      setMobile(window.innerWidth < 768)\n    })\n  }, [])\n\n  const initialiseTest = () => {\n    if (!dbs) return\n    setQuestions(selectRandomQuestions(dbs.stable))\n    sectionState[1]('ing')\n    answersState[1]({\n      ing: [],\n      mat: [],\n      com: [],\n      fis: []\n    })\n    timeRecordState[1]({})\n  }\n\n  useEffect(() => {\n    // every time view changes from 'TOL-*' to 'INFO-start'\n    // a new test is generated\n    if (view === 'INFO-start') {\n      initialiseTest()\n    }\n  }, [dbs, view])\n\n  const router = createHashRouter(\n    createRoutesFromElements(\n      <Route path=\"/\" element={<Layout viewState={[view, setView]} />}>\n        <Route\n          index\n          element={\n            // Don't ever think about moving this to an external component.\n            <>\n              <ErrorView\n                hidden={!loadingError[0]}\n                display={loadingError[0] || ''}\n                internal={loadingError[1]}\n              />\n              {questions && <Home viewState={[view, setView]} />}\n            </>\n          }\n        />\n        <Route\n          path=\"/test\"\n          element={\n            questions && view.startsWith('TOL') ? (\n              <QuestionsForm\n                answersState={answersState}\n                questions={questions as QuestionsData}\n                sectionState={sectionState}\n                timeRecordState={timeRecordState}\n                viewState={[view, setView]}\n              />\n            ) : (\n              <Navigate to=\"/\" replace />\n            )\n          }\n        />\n        <Route\n          path=\"/results\"\n          element={\n            questions && view === 'TOL-end' ? (\n              <Results\n                answers={answersState[0]}\n                questions={questions as QuestionsData}\n                viewState={[view, setView]}\n              />\n            ) : (\n              <Navigate to=\"/\" replace />\n            )\n          }\n        />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/license\" element={<License />} />\n        <Route path=\"/privacy\" element={<Privacy />} />\n        <Route path=\"/dbpreview\" element={<DBPreview dbs={dbs} />} />\n        <Route path=\"/qpreview\" element={<QPreview dbs={dbs} />} />\n      </Route>\n    )\n  )\n  return (\n    <MobileContext.Provider value={{ mobile }}>\n      <TestProvider>\n        <RibbonContainer>\n          {window &&\n            new URL(window.location.href).hostname ==\n              'polinetworkorg.github.io' && (\n              <RightCornerRibbon backgroundColor=\"#cc0000\" color=\"white\">\n                DEV\n              </RightCornerRibbon>\n            )}\n          <RouterProvider router={router} />\n        </RibbonContainer>\n      </TestProvider>\n    </MobileContext.Provider>\n  )\n}\n\ninterface LayoutProps {\n  viewState: statePair<View>\n}\nfunction Layout({ viewState }: LayoutProps) {\n  const [view, setView] = viewState\n\n  const location = useLocation()\n  useEffect(() => {\n    // navigating with the footer menu doesn't change the view value.\n    // here it checks the pathname and change the view if results/test page\n    if (\n      !['/results', '/test'].includes(location.pathname) &&\n      view.startsWith('TOL')\n    ) {\n      setView('INFO-start')\n    }\n  }, [location])\n\n  return (\n    <div style={styles.app}>\n      <Header viewState={viewState} />\n      <Separator />\n      <div style={styles.routeContainer}>\n        <Outlet />\n      </div>\n      <Separator />\n      {!['TOL-secRecap', 'TOL-testing'].includes(view) && (\n        <Footer view={view} />\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { I18nextProvider } from 'react-i18next'\nimport i18n from './i18n'\n\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nextProvider i18n={i18n}>\n      <App />\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}