{"version":3,"sources":["utils/constants.ts","i18n.ts","utils/database.ts","utils/style.ts","components/Util/Button.tsx","components/Util/GeneralPurposeCollapsible.tsx","components/Util/QuestionAttachments.tsx","components/Util/RenderedText.tsx","components/Util/Question.tsx","components/Util/Select.tsx","components/pages/DBPreview.tsx","components/ErrorView.tsx","utils/storage.ts","utils/contexts.tsx","components/Footer.tsx","../public/logo3000.webp","components/Header.tsx","components/InfoView/ExtendedCorrection/DocumentHeader.tsx","static/firefox_1.png","static/firefox_2.png","static/firefox_3.png","components/InfoView/ExtendedCorrection/ExtendedCorrection.tsx","components/InfoView/InfoEnd.tsx","components/Util/Wrapper.tsx","components/InfoView/InfoStart.tsx","components/InfoView/InfoView.tsx","../public/telegram_logo.svg","components/pages/About.tsx","components/pages/License.tsx","components/pages/Privacy.tsx","components/QuestionsForm/AnswerForm.tsx","components/QuestionsForm/BottomControls.tsx","components/QuestionsForm/QuestionHeader.tsx","components/Util/CollapsibleText.tsx","components/QuestionsForm/QuestionView.tsx","components/QuestionsForm/RecapBar.tsx","components/QuestionsForm/SectionRecap.tsx","components/QuestionsForm/Timer.tsx","components/QuestionsForm/TopControls.tsx","components/QuestionsForm/QuestionsForm.tsx","components/Util/Separator.tsx","components/pages/QPreview.tsx","components/App.tsx","index.tsx"],"names":["links","sectionInfo","ing","name","order","sample","minutes","coeff","Fraction","mat","com","sub","fis","correctionWeight","getSectionName","key","DATABASE_REF","members","tg","ah","prefix","STORAGE","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","enLocale","it","itLocale","fallbackLng","detection","lookupLocalStorage","caches","sheetDict","quesiti_ING","quesiti_MAT","quesiti_COM","quesiti_FIS","readDatabase","a","ref","STABLE","axios","get","data","db","meta","version","packageJson","Error","selectRandomQuestions","fromEntries","Object","entries","filter","values","includes","map","validQuestions","q","validated","resIds","_","shuffle","uniq","v","id","slice","getImageURL","fileName","theme","baseStyle","fontFamily","color","StyleSheet","styles","value","reduce","acc","curr","formatNumber","num","addDecimals","parseFloat","round","toString","toLocaleString","minimumFractionDigits","maximumFractionDigits","replace","create","button","display","fontSize","alignItems","p","marginBlock","margin","icon","leftIcon","compose","this","float","marginRight","rightIcon","Button","props","style","onClick","label","outerDiv","collapsible","background","GeneralPurposeCollapsible","useState","startOpen","isOpen","setOpen","outerDivStyle","trigger","open","onOpen","onClose","easing","contentStyle","children","container","flexDirection","padding","gap","attachment","image","maxHeight","maxWidth","objectFit","QuestionAttachments","dbRef","attachments","length","index","src","RenderedText","text","question","option","result","textDecoration","paddingTop","TickSign","CrossSign","Question","isDebug","choice","isTest","showAttachments","valid","undefined","String","correct","answers","letter","isCorrect","visibility","toUpperCase","select","Select","defaultValue","localValue","setLocalValue","onChange","e","newValue","target","disabled","entry","ul","paddingLeft","DBPreview","dbs","stable","setDb","MAIN","questions","ErrorView","hidden","internal","LocalStorage","localStorage","setItem","JSON","stringify","Date","date","sixMonthsAgo","setMonth","getMonth","getItem","isDateOlderThanSixMonths","clear","handleChange","parse","MobileContext","createContext","mobile","TestContext","isDsa","toggleDsa","TestProvider","setIsDsa","useEffect","Provider","prev","justifyContent","paddingInline","link","flex","textAlign","mobileStyles","paddingBottom","Footer","useContext","linkStyle","className","href","rel","to","view","preventDefault","window","location","reload","div","height","centeredText","logoDiv","logo","col","Header","viewState","useTranslation","resolvedLanguage","lang","setLang","pointerEvents","startsWith","alt","changeLanguage","rightText","logoLink","DocumentHeader","doc","printButton","alignSelf","centered","li","listStyleType","ol","img","marginTop","marginBottom","width","nowrap","whiteSpace","ExtendedCorrection","createRef","resultsDate","printSupported","browser","userAgent","navigator","getTitle","document","title","documentTitle","content","current","onAfterPrint","onbeforeunload","FirefoxInstructions","FallbackInstructions","PrintDocument","resultTable","docStyles","firstPage","forwardRef","dateTime","toLocaleDateString","toLocaleTimeString","timeStyle","sort","b","section","find","firefoxImg1","firefoxImg2","firefoxImg3","displayName","tableDiv","overflow","table","borderSpacing","tableCell","border","tableHeader","fontWeight","backgroundColor","h3","restartDiv","restartTitle","restartButton","InfoEnd","correctionGrid","secQuestions","notGiven","wrong","forEach","answer","total","weight","score","mul","correction","add","testPassed","parseInt","tengPassed","info","toFraction","wrapper","h2","Wrapper","buttonDiv","InfoStart","startTest","t","htmlFor","userSelect","type","checked","transitionTime","InfoView","setView","useLocation","navigate","useNavigate","pathname","liDiv","telegramLink","telegramLogo","About","m","i","paddingBlock","licenseImg","borderWidth","marginLeft","License","components","property","network","cc4","githubLicense","Link","Privacy","baseText","radioText","verticalAlign","radioSpan","AnswerForm","letterState","tmpAnswerState","currentQuestion","RadioRow","c","d","event","controlsDiv","BottomControls","tmpFlaggedState","flagged","setFlagged","updateAnswer","leftContainer","rightContainer","minWidth","answerLetter","marginInline","boxShadow","QuestionHeader","questionIndex","currentAnswer","shiftQuestionIndex","innerP","CollapsibleText","longText","trim","split","QuestionView","track","bordered","borderBottom","barContainer","boxSizing","bar","cellContainer","alignContent","cellSub","selectedCell","outline","RecapBar","sectionQuestions","active","sectionAnswers","AnswerCell","currentQuestionIndexState","selected","SectionRecap","secondsUsed","seconds","displayTime","Math","max","goToNextSection","time","floor","minimumIntegerDigits","clockWrapper","numbers","borderRadius","expiring","wordWrap","Timer","timer","hours","innerDiv","exitBtn","cursor","TopControls","currentSection","closeSection","exitTest","testing","QuestionsForm","minutesCoeff","qIndex","originalSetQIndex","alertDisplayedState","sectionState","setSection","answersState","setAnswers","timeRecordState","timeRecord","setTimeRecord","shouldShowAlert","recapBarElement","getElementById","clientWidth","maxScroll","minScroll","scrollLeft","showAlert","alert","setQIndex","nextAnswers","nextTR","restart","ignoreAlert","next","shiftQIndex","offset","useTimer","expiryTimestamp","getTimerExpDate","onExpire","useBlocker","exit_warn","confirm","nextSection","sortedInfo","findIndex","getNextSection","getViewElement","res","setSeconds","getSeconds","Separator","QPreview","isCustom","setIsCustom","CustomQ","DatabaseQ","sections","setDbRef","useMemo","ids","createID","setID","s","QuestionRender","setText","setA","setB","setC","setD","setE","f","app","routeContainer","App","setDbs","setQuestions","loadingError","showError","setMobile","main","checkLastChange","loadDatabases","innerWidth","addEventListener","router","createHashRouter","createRoutesFromElements","path","element","Layout","URL","hostname","testPaths","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d76dd912.chunk.js","sourcesContent":["import { Section } from './database'\nimport Fraction from 'fraction.js'\n\nexport const links = {\n  githubLicense:\n    'https://github.com/PoliNetworkOrg/TheTOLProject/blob/main/LICENSE',\n  githubSource: 'https://github.com/PoliNetworkOrg/TheTOLProject/',\n  polinetwork: 'https://polinetwork.org',\n  telegramPreparazioneTOL: 'https://t.me/joinchat/_zugEikozmcyMzA0',\n  telegramTheTOLProject: 'https://t.me/+amLdTd-EoHw1MWRk',\n  localStorageMDN:\n    'https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage'\n}\n\ninterface sectionInfoElement {\n  /** The readable name of the section */\n  name: string\n  /** The order in which the section should be tested */\n  order: number\n  /** The number of questions that should be selected */\n  sample: number\n  /** The number of sub-questions that should be selected (only applies to 'com') */\n  sub?: number\n  /** The maximum number of minutes that the user can use to complete a section */\n  minutes: number\n  /** The weight that this section's score has on the total score ({@link testTotalScore}) */\n  coeff: number | Fraction\n}\n\nexport const sectionInfo: Record<Section, sectionInfoElement> = {\n  ing: {\n    name: 'Inglese',\n    order: 1,\n    sample: 30,\n    minutes: 15,\n    coeff: new Fraction('1/3')\n  },\n  mat: {\n    name: 'Matematica',\n    order: 2,\n    sample: 25,\n    minutes: 65,\n    coeff: 2.6\n  },\n  com: {\n    name: 'Comprensione verbale',\n    order: 3,\n    sample: 1,\n    sub: 5,\n    minutes: 10,\n    coeff: 3\n  },\n  fis: {\n    name: 'Fisica',\n    order: 4,\n    sample: 5,\n    minutes: 10,\n    coeff: 2\n  }\n}\n\nexport const DSATimeModifier = 1.3\n\nexport const testTotalScore = 100\n/** Minimum score to pass the test */\nexport const testPassThreshold = 60\n/** Minimum number of correct questions to pass the test */\nexport const tengPassThreshold = 24\n/** How to weight answer when calculating the section score */\nexport const correctionWeight = {\n  correct: 1,\n  wrong: -0.25,\n  notGiven: 0\n}\n\nexport function getSectionName(key: Section) {\n  return sectionInfo[key].name\n}\n\nexport function getNextSection(currentSection: Section): Section | undefined {\n  const sortedInfo = Object.entries(sectionInfo).sort(\n    (a, b) => a[1].order - b[1].order\n  ) as [Section, sectionInfoElement][]\n  const i = sortedInfo.findIndex((e) => e[0] == currentSection)\n  return (sortedInfo[i + 1] || [])[0]\n}\n\ninterface Member {\n  name: string\n  tg: string\n  ah?: boolean\n  prefix?: string\n}\n\nexport const members: Member[] = [\n  {\n    name: 'Gabriele Zanini',\n    tg: 'zagbc'\n  },\n  {\n    name: 'Federico Grandi',\n    tg: 'federico_grandi'\n  },\n  {\n    name: 'Ilaria Corcelli',\n    tg: 'iilaria01'\n  },\n  {\n    name: 'Matteo Salicandro',\n    tg: 'Mattysal'\n  },\n  {\n    name: 'Nicolas Facchin',\n    tg: 'SuperRollyNoka'\n  },\n  {\n    name: 'Elia Maggioni',\n    tg: 'EliaMaggioni',\n    ah: true\n  },\n  {\n    name: 'Diego Aldarese',\n    tg: 'diegoaldarese',\n    ah: true\n  },\n  {\n    name: 'Tommaso Morganti',\n    tg: 'toto04_1'\n  },\n  {\n    name: 'Giovanni Menicucci',\n    tg: 'giova1211'\n  },\n  {\n    name: 'Nadia Scappini',\n    tg: 'nscapp',\n    prefix: 'Prof.ssa'\n  },\n  {\n    name: '@spyarect',\n    tg: 'spyarect',\n    ah: true\n  },\n  {\n    name: 'Clelia Di Leo',\n    tg: 'cloelia',\n    prefix: 'Prof.ssa'\n  },\n  {\n    name: 'Raif Muhammad',\n    tg: 'Raif9',\n    ah: true\n  },\n  {\n    name: 'Lorenzo Corallo',\n    tg: 'lorenzocorallo'\n  }\n]\n\nexport const STORAGE = {\n  DSA: 'tol_is_dsa',\n  LANG: 'tol_i18n_lng',\n  LAST_CHANGE: 'tol_last_change'\n} as const\n\nexport enum DATABASE_REF {\n  STABLE = 'stable',\n  MAIN = 'main'\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\nimport enLocale from './locales/en.json'\nimport itLocale from './locales/it.json'\nimport { STORAGE } from './utils/constants'\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: enLocale\n      },\n      it: {\n        translation: itLocale\n      }\n    },\n    fallbackLng: 'it',\n    detection: {\n      order: ['localStorage', 'navigator', 'htmlTag'],\n      lookupLocalStorage: STORAGE.LANG,\n      caches: ['localStorage']\n    }\n  })\n\nexport default i18n\n","import axios from 'axios'\nimport fromEntries from 'fromentries'\nimport _ from 'underscore'\nimport packageJson from '../../package.json'\nimport { DATABASE_REF, sectionInfo } from './constants'\n\nexport const sheetDict = {\n  quesiti_ING: 'ing',\n  quesiti_MAT: 'mat',\n  quesiti_COM: 'com',\n  quesiti_FIS: 'fis'\n} as const\nexport type Section = typeof sheetDict[keyof typeof sheetDict]\n\nexport type AnswerLetter = 'a' | 'b' | 'c' | 'd' | 'e'\n\nexport interface Question {\n  id: string\n  text: string\n  answers: Record<AnswerLetter, string>\n  correct: AnswerLetter\n  attachments: string[]\n  validated: boolean\n\n  // These are only present for COM questions\n  sub?: string\n  track?: string\n}\n\nexport type QuestionsData = Record<Section, Question[]>\n\nexport interface Database extends QuestionsData {\n  meta: {\n    version: string\n  }\n}\n\nexport async function readDatabase(ref: DATABASE_REF = DATABASE_REF.STABLE) {\n  const db = (\n    await axios.get(\n      `https://raw.githubusercontent.com/PoliNetworkOrg/TheTOLProjectData/${ref}/database.json`\n    )\n  )?.data as Database\n\n  if (db?.meta?.version != packageJson.version)\n    throw new Error(\n      `Database version doesn't match application.\\nDatabase: ${db?.meta?.version}\\nApp: ${packageJson.version}`\n    )\n\n  return db\n}\n\nexport function selectRandomQuestions(db: Database): QuestionsData {\n  return fromEntries(\n    // Manipulate db entries\n    (Object.entries(db) as [Section /* or \"meta\" */, Question[]][])\n      // Select only entries associated with a section <=> exclude \"meta\"\n      .filter(([key]) => (Object.values(sheetDict) as string[]).includes(key))\n      .map(([key, questions]) => {\n        // Select only validated questions\n        const validQuestions = questions.filter((q) => q.validated)\n\n        // Get the question ids, remove duplicates, shuffle them, and select the appropriate number of questions.\n        const resIds = _.shuffle(_.uniq(validQuestions.map((v) => v.id))).slice(\n          0,\n          sectionInfo[key].sample\n        )\n\n        // Return only the questions with a selected ID\n        return [\n          key,\n          _.shuffle(validQuestions.filter((q) => resIds.includes(q.id)))\n        ]\n      })\n  ) as QuestionsData\n}\n\nexport function getImageURL(\n  fileName: string,\n  ref: DATABASE_REF = DATABASE_REF.STABLE\n) {\n  return `https://raw.githubusercontent.com/PoliNetworkOrg/TheTOLProjectData/${ref}/img/${fileName}`\n}\n\nexport type DatabaseStore = Record<DATABASE_REF, Database>\n","import Fraction from 'fraction.js'\nimport fromEntries from 'fromentries'\n\nexport const theme = {\n  boxShadow:\n    '1px 0 0 0 #606060, 0 1px 0 0 #606060, 1px 1px 0 0 #606060, /* corner */ 1px 0 0 0 #606060 inset, 0 1px 0 0 #606060 inset',\n  lightBackground: '#F3F3EE',\n  lightBorder: '#D5DFE4',\n  primary: '#069',\n  questionYellow: 'yellow',\n  questionGreen: '#00D700',\n  softBlack: '#333',\n  timerGreen: '#009527',\n  timerRed: 'red'\n}\n\nexport const baseStyle: React.CSSProperties = {\n  fontFamily: 'Verdana, Roboto',\n  color: theme.softBlack\n}\n\ntype CSSProperties = {\n  [key: string]: React.CSSProperties\n}\n\n/** Basic implementation of the StyleSheet class present in React Native */\nexport class StyleSheet {\n  static create<Styles extends CSSProperties>(styles: Styles): Styles {\n    return fromEntries(\n      Object.entries(styles).map(([key, value]) => [\n        key,\n        { ...baseStyle, ...value }\n      ])\n    ) as Styles\n  }\n\n  static compose(\n    ...styles: (React.CSSProperties | undefined | false)[]\n  ): React.CSSProperties {\n    return styles.reduce(\n      (acc, curr) => ({ ...acc, ...(curr || {}) }),\n      {}\n    ) as React.CSSProperties\n  }\n}\n\nexport function formatNumber(num: number | Fraction, addDecimals = false) {\n  return (\n    typeof num == 'number'\n      ? num\n      : parseFloat(num.round(addDecimals ? 2 : 0).toString())\n  )\n    .toLocaleString('it-IT', {\n      minimumFractionDigits: addDecimals ? 2 : 0,\n      maximumFractionDigits: 2\n    })\n    .replace(/\\./g, ',')\n}\n","import { StyleSheet } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  button: {\n    display: 'flex',\n    fontFamily: ' Arial',\n    fontSize: '9.5pt',\n    alignItems: 'center'\n  },\n  p: {\n    display: 'inline-block',\n    marginBlock: 0,\n    margin: 0,\n    fontFamily: 'Arial'\n  },\n  icon: {\n    display: 'flex'\n  },\n  get leftIcon() {\n    return StyleSheet.compose(this.icon, {\n      float: 'left',\n      marginRight: '2px'\n    })\n  },\n  get rightIcon() {\n    return StyleSheet.compose(this.icon, {\n      float: 'right',\n      marginRight: '2px'\n    })\n  }\n})\n\ninterface ButtonProps {\n  label: string\n  onClick?: () => void\n  style?: React.CSSProperties\n  leftIcon?: () => JSX.Element\n  rightIcon?: () => JSX.Element\n}\n\nexport default function Button(props: ButtonProps) {\n  return (\n    <button\n      style={StyleSheet.compose(styles.button, props.style || {})}\n      onClick={props.onClick}\n    >\n      <span style={styles.leftIcon}>{props.leftIcon && props.leftIcon()}</span>\n      <p style={styles.p}>{props.label}</p>\n      <span style={styles.rightIcon}>\n        {props.rightIcon && props.rightIcon()}\n      </span>\n    </button>\n  )\n}\n","import { ReactNode, useState } from 'react'\nimport Collapsible from 'react-collapsible'\nimport { StyleSheet, theme } from '../../utils/style'\nimport Button from './Button'\n\nconst styles = StyleSheet.create({\n  outerDiv: {\n    margin: '10px'\n  },\n  collapsible: {\n    background: theme.lightBackground,\n    margin: '5px'\n  }\n})\n\ninterface GeneralPurposeCollapsibleProps {\n  label: string\n  children: ReactNode\n  startOpen?: boolean\n  contentStyle?: React.CSSProperties\n  outerDivStyle?: React.CSSProperties\n  onOpen?: () => void\n  onClose?: () => void\n}\nexport default function GeneralPurposeCollapsible(\n  props: GeneralPurposeCollapsibleProps\n) {\n  const [isOpen, setOpen] = useState(props.startOpen ?? true)\n\n  return (\n    <div style={StyleSheet.compose(styles.outerDiv, props.outerDivStyle)}>\n      <Collapsible\n        trigger={\n          <Button label={props.label} onClick={() => setOpen(!isOpen)} />\n        }\n        open={isOpen}\n        onOpen={props.onOpen}\n        onClose={props.onClose}\n        easing=\"ease-in-out\"\n      >\n        <div style={StyleSheet.compose(styles.collapsible, props.contentStyle)}>\n          {props.children}\n        </div>\n      </Collapsible>\n    </div>\n  )\n}\n","import { DATABASE_REF } from '../../utils/constants'\nimport { getImageURL, Question } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport GeneralPurposeCollapsible from './GeneralPurposeCollapsible'\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBlock: 0,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  collapsible: {\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  attachment: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    gap: '5px'\n  },\n  image: {\n    maxHeight: '500px',\n    maxWidth: '100%',\n    objectFit: 'contain'\n  }\n})\n\ninterface Props {\n  q: Question\n  dbRef: DATABASE_REF\n}\n\nexport default function QuestionAttachments({ q, dbRef }: Props) {\n  return (\n    <>\n      {q.attachments?.length && (\n        <GeneralPurposeCollapsible\n          label=\"mostra/nascondi immagini\"\n          startOpen={false}\n        >\n          {q.attachments.map((fileName, index) => (\n            <span key={index + 1} style={styles.attachment}>\n              <p style={styles.container}>Immagine {index + 1}:</p>\n              <img src={getImageURL(fileName, dbRef)} style={styles.image} />\n            </span>\n          ))}\n        </GeneralPurposeCollapsible>\n      )}\n    </>\n  )\n}\n","import Latex from 'react-latex'\n\ninterface RenderedTextProps {\n  text: string\n}\nexport default function RenderedText({ text }: RenderedTextProps) {\n  return <Latex>{text}</Latex>\n}\n","import { DATABASE_REF } from '../../utils/constants'\nimport { Question as IQuestion } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport QuestionAttachments from './QuestionAttachments'\nimport RenderedText from './RenderedText'\n\nconst styles = StyleSheet.create({\n  question: {\n    padding: 1\n  },\n  option: {\n    display: 'flex',\n    gap: 4,\n    margin: 4\n  },\n  result: {\n    textDecoration: 'underline',\n    paddingTop: 4,\n    display: 'block'\n  }\n})\n\nconst TickSign = () => <>&#10003;</>\nconst CrossSign = () => <>&#10007;</>\n\ninterface Props {\n  q: IQuestion\n  isDebug?: boolean\n  choice?: string\n  isTest?: boolean\n  showAttachments?: boolean\n  dbRef?: DATABASE_REF\n}\n\nexport default function Question({\n  q,\n  isDebug = false,\n  choice = '',\n  isTest = false,\n  showAttachments = false,\n  dbRef = DATABASE_REF.STABLE\n}: Props) {\n  const id = q.id && (q.sub ? `[${q.id}-${q.sub}] ` : `[${q.id}] `)\n  const valid = q.validated !== undefined && `Valid: ${String(q.validated)}`\n  let result = 'Senza risposta'\n  if (choice.length === 1) {\n    result = choice === q.correct ? 'Corretta' : 'Errata'\n  }\n\n  return (\n    <div style={styles.question}>\n      <p style={{ margin: 4 }}>\n        {isDebug && <span>{id}</span>}\n        <RenderedText text={q.text} />\n        {isTest && <span style={styles.result}>{result}</span>}\n      </p>\n      {showAttachments && <QuestionAttachments q={q} dbRef={dbRef} />}\n\n      {isDebug && <p>{valid}</p>}\n      {Object.entries(q.answers).map(([letter, text]) => {\n        const isCorrect = q.correct === letter\n        const visibility = isCorrect || choice === letter ? 'visible' : 'hidden'\n        return (\n          <p key={letter} style={styles.option}>\n            <span style={{ visibility }}>\n              {isCorrect ? <TickSign /> : <CrossSign />}\n            </span>\n            <span>{letter.toUpperCase()}. </span>\n            <RenderedText text={text} />\n          </p>\n        )\n      })}\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { StyleSheet } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  select: {\n    display: 'flex',\n    fontFamily: ' Arial',\n    fontSize: '9.5pt',\n    alignItems: 'center'\n  }\n})\n\ninterface SelectEntry {\n  label: string\n  value: string\n}\n\ninterface ButtonProps {\n  defaultValue?: string\n  value?: string\n  disabled?: boolean\n  entries: SelectEntry[]\n  label?: string\n  onChange?: (newValue: string) => void\n  style?: React.CSSProperties\n}\n\nexport default function Select(props: ButtonProps) {\n  const [localValue, setLocalValue] = useState(props.defaultValue)\n\n  return (\n    <label>\n      {props.label || ''}\n      <select\n        value={props.value || localValue}\n        onChange={(e) => {\n          const newValue = e.target.value\n          setLocalValue(newValue)\n          props.onChange && props.onChange(newValue)\n        }}\n        style={styles.select}\n        disabled={props.disabled}\n      >\n        {props.entries.map((entry) => (\n          <option value={entry.value} key={entry.value}>\n            {entry.label}\n          </option>\n        ))}\n      </select>\n    </label>\n  )\n}\n","import { useState } from 'react'\nimport { DATABASE_REF, sectionInfo } from '../../utils/constants'\nimport {\n  Section,\n  Question as IQuestion,\n  DatabaseStore\n} from '../../utils/database'\nimport { baseStyle, StyleSheet } from '../../utils/style'\nimport GeneralPurposeCollapsible from '../Util/GeneralPurposeCollapsible'\nimport Question from '../Util/Question'\nimport Select from '../Util/Select'\n\nconst styles = StyleSheet.create({\n  ul: {\n    margin: 10,\n    paddingLeft: 16\n  }\n})\n\ninterface DBPreviewProps {\n  dbs?: DatabaseStore\n}\n\nexport default function DBPreview({ dbs }: DBPreviewProps) {\n  if (!dbs) return <div style={baseStyle}>Loading...</div>\n  const [db, setDb] = useState(dbs.stable)\n\n  return (\n    <div>\n      <Select\n        label=\"Database\"\n        entries={[\n          { value: DATABASE_REF.STABLE, label: 'Production' },\n          { value: DATABASE_REF.MAIN, label: 'Development' }\n        ]}\n        defaultValue={DATABASE_REF.STABLE}\n        onChange={(v) => setDb(dbs[v as DATABASE_REF])}\n      />\n      {(\n        Object.entries(db).filter(([key]) => key != 'meta') as [\n          Section,\n          IQuestion[]\n        ][]\n      ).map(([key, questions]) => (\n        <div key={key} style={baseStyle}>\n          <GeneralPurposeCollapsible\n            label={sectionInfo[key].name}\n            startOpen={false}\n          >\n            <ul style={styles.ul}>\n              {questions\n                .filter((q) => q.text || key == 'com')\n                .map((q) => (\n                  <li key={key + q.id + (q.sub || '')}>\n                    <Question q={q} isDebug={true} showAttachments />\n                  </li>\n                ))}\n            </ul>\n          </GeneralPurposeCollapsible>\n        </div>\n      ))}\n    </div>\n  )\n}\n","interface ErrorViewProps {\n  hidden: boolean\n  display: string\n  internal?: Error\n}\n\nexport default function ErrorView({\n  hidden,\n  display,\n  internal\n}: ErrorViewProps) {\n  return (\n    <div hidden={hidden}>\n      <h3>{display}</h3>\n      <blockquote>{internal + ''}</blockquote>\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { STORAGE } from './constants'\n\nexport class LocalStorage {\n  static handleChange() {\n    // method to call to update last change date in localStorage\n    localStorage.setItem(STORAGE.LAST_CHANGE, JSON.stringify(new Date()))\n  }\n\n  static isDateOlderThanSixMonths(date: Date): boolean {\n    const sixMonthsAgo = new Date()\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6)\n    return date < sixMonthsAgo\n  }\n\n  public static checkLastChange() {\n    // according to privacy policy, if last change is older\n    // than 6 months, then the localStorage has to be cleared\n    const date = this.getItem(STORAGE.LAST_CHANGE)\n    if (!date) return\n    if (this.isDateOlderThanSixMonths(new Date(date))) {\n      localStorage.clear()\n    }\n  }\n\n  public static setItem(key: string, value: any) {\n    // custom setItem with JSON.stringify and null/undefined check\n    if (value === null || value === undefined) return\n    localStorage.setItem(key, JSON.stringify(value))\n    this.handleChange()\n  }\n\n  public static getItem(key: string) {\n    // custom getItem with JSON.parse and null check\n    const value = localStorage.getItem(key)\n    if (!value) return null\n    return JSON.parse(value)\n  }\n}\n","import { createContext, useEffect, useState } from 'react'\nimport { STORAGE } from './constants'\nimport { LocalStorage } from './storage'\n\nexport const MobileContext = createContext({\n  mobile: false\n})\n\ninterface ITestContext {\n  isDsa: boolean\n  toggleDsa: () => void\n}\nexport const TestContext = createContext<ITestContext>({\n  isDsa: false,\n  toggleDsa: () => {\n    // implemented in Provider\n  }\n})\n\ntype TestProviderProps = React.HTMLAttributes<React.ProviderProps<ITestContext>>\nexport const TestProvider = (props: TestProviderProps) => {\n  const [isDsa, setIsDsa] = useState<boolean>(false)\n\n  const toggleDsa = () => {\n    setIsDsa((prev) => {\n      const value = !prev\n      LocalStorage.setItem(STORAGE.DSA, value)\n      return value\n    })\n  }\n\n  useEffect(() => {\n    const localValue = LocalStorage.getItem(STORAGE.DSA)\n    if (localValue === null) return\n    setIsDsa(localValue)\n  }, [])\n\n  return <TestContext.Provider value={{ isDsa, toggleDsa }} {...props} />\n}\n","import { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { links } from '../utils/constants'\nimport { MobileContext } from '../utils/contexts'\nimport { StyleSheet, theme } from '../utils/style'\nimport { view } from './App'\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingInline: '15em',\n    margin: '15px',\n    fontSize: '10pt',\n    color: theme.softBlack\n  },\n  link: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: 'inherit',\n    fontSize: '11pt',\n    alignItems: 'center'\n  }\n})\n\nconst mobileStyles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 16\n  },\n  link: StyleSheet.compose(styles.link, {\n    margin: 2\n  })\n})\n\nexport default function Footer(props: { view: view }) {\n  const { mobile } = useContext(MobileContext)\n  const linkStyle = mobile ? mobileStyles.link : styles.link\n  return (\n    <div\n      className=\"do-not-print\"\n      style={mobile ? mobileStyles.container : styles.container}\n    >\n      <a\n        href={links.githubSource}\n        style={linkStyle}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        Source\n      </a>\n      <Link to=\"about\" style={linkStyle}>\n        About\n      </Link>\n      <Link\n        to=\"/\"\n        style={linkStyle}\n        onClick={(e) => {\n          if (props.view === 'INFO-end') {\n            // reload the page if we are in the recap, easier then resetting the state\n            e.preventDefault()\n            window.location.reload()\n          }\n        }}\n      >\n        Home\n      </Link>\n      <Link to=\"license\" style={linkStyle}>\n        License\n      </Link>\n      <Link to=\"privacy\" style={linkStyle}>\n        Privacy & Cookies\n      </Link>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logo3000.34b8e2e9.webp\";","import { useContext, useState } from 'react'\nimport { StyleSheet } from '../utils/style'\nimport { statePair } from '../utils/types'\nimport { view } from './App'\nimport logo from '../static/logo3000.webp'\nimport { links } from '../utils/constants'\nimport { MobileContext } from '../utils/contexts'\nimport { useTranslation } from 'react-i18next'\nimport { LocalStorage } from '../utils/storage'\n\nconst styles = StyleSheet.create({\n  div: {\n    height: '70px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  text: {\n    fontSize: '18pt'\n  },\n  get centeredText() {\n    return StyleSheet.compose(this.text, {\n      textAlign: 'center',\n      flex: 1\n    })\n  },\n  logoDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '10px',\n    margin: '5px',\n    textDecoration: 'none'\n  },\n  logo: {\n    height: '60px'\n  },\n  col: { flex: 1, display: 'flex' }\n})\n\ninterface HeaderProps {\n  viewState: statePair<view>\n}\n\nexport default function Header({ viewState }: HeaderProps) {\n  const { i18n } = useTranslation()\n  const { mobile } = useContext(MobileContext)\n  const [lang, setLang] = useState(i18n.resolvedLanguage)\n  const handleLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const lang = e.target.value\n    i18n.changeLanguage(lang)\n    LocalStorage.handleChange() // language saved to LocalStorage\n    setLang(lang)\n  }\n\n  return (\n    <div className=\"do-not-print\" style={styles.div}>\n      <div style={styles.col}>\n        <a\n          style={{\n            ...styles.logoDiv,\n            // disable logo link when doing the test\n            pointerEvents: viewState[0].startsWith('TOL') ? 'none' : 'all'\n          }}\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n          href={links.polinetwork}\n        >\n          <img src={logo} alt=\"logo\" style={styles.logo} />\n          {!mobile && <h1 style={styles.text}>PoliNetwork</h1>}\n        </a>\n      </div>\n\n      <div style={{ ...styles.col, flex: mobile ? 3 : 1 }}>\n        <h1 style={styles.centeredText}>The TOL Project</h1>\n      </div>\n\n      <div style={{ ...styles.col, justifyContent: 'flex-end' }}>\n        <select value={lang} onChange={handleLanguageChange}>\n          <option value=\"it\">IT</option>\n          <option value=\"en\">EN</option>\n        </select>\n      </div>\n    </div>\n  )\n}\n","import { StyleSheet } from '../../../utils/style'\nimport logo from '../../../static/logo3000.webp'\nimport { links } from '../../../utils/constants'\n\nconst styles = StyleSheet.create({\n  div: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  text: {\n    flex: 1,\n    fontSize: '18pt',\n    display: 'inline-block'\n  },\n  get rightText() {\n    return StyleSheet.compose(this.text, {\n      textAlign: 'right'\n    })\n  },\n  logoLink: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    gap: '10px',\n    margin: '5px',\n    textDecoration: 'none'\n  },\n  logo: {\n    height: '60px'\n  }\n})\n\nexport default function DocumentHeader() {\n  return (\n    <div style={styles.div}>\n      <a\n        style={styles.logoLink}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        href={links.polinetwork}\n      >\n        <img src={logo} alt=\"logo\" style={styles.logo} />\n        <h1 style={styles.text}>PoliNetwork</h1>\n      </a>\n      <h1 style={styles.rightText}>The TOL Project</h1>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/firefox_1.90eb3665.png\";","export default __webpack_public_path__ + \"static/media/firefox_2.b3e6c5bc.png\";","export default __webpack_public_path__ + \"static/media/firefox_3.d2388c27.png\";","import { createRef, forwardRef, ReactNode } from 'react'\nimport ReactToPrint from 'react-to-print'\nimport {\n  Question as IQuestion,\n  QuestionsData,\n  Section\n} from '../../../utils/database'\nimport { AnswersData } from '../../App'\nimport { links, sectionInfo } from '../../../utils/constants'\nimport { StyleSheet, theme } from '../../../utils/style'\nimport Button from '../../Util/Button'\nimport './ExtendedCorrection.css'\nimport DocumentHeader from './DocumentHeader'\nimport firefoxImg1 from '../../../static/firefox_1.png'\nimport firefoxImg2 from '../../../static/firefox_2.png'\nimport firefoxImg3 from '../../../static/firefox_3.png'\nimport Question from '../../Util/Question'\n\nconst styles = StyleSheet.create({\n  collapsible: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '15px',\n    gap: '10px'\n  },\n  doc: {},\n  printButton: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    alignSelf: 'center',\n    gap: '5px'\n  },\n  link: {\n    color: theme.primary\n  },\n  centered: {\n    textAlign: 'center'\n  },\n  li: {\n    margin: '10px'\n  },\n  ul: {\n    listStyleType: 'none'\n  },\n  ol: {\n    paddingLeft: 20\n  },\n  img: {\n    marginTop: 5,\n    marginBottom: 10,\n    maxWidth: 320,\n    width: '100%',\n    height: 'auto',\n    objectFit: 'cover'\n  },\n  nowrap: { whiteSpace: 'nowrap' }\n})\n\n// using 'other' as fallback because\n// other browsers may no longer support the api\ntype Browser = 'FirefoxAndroid' | 'other'\n\ninterface ExtendedCorrectionProps {\n  answers: AnswersData\n  questions: QuestionsData\n  resultTable: ReactNode\n}\n\nexport default function ExtendedCorrection(props: ExtendedCorrectionProps) {\n  const ref = createRef<HTMLDivElement>()\n  // save date to variable to keep the date\n  // when the test was taken\n  const resultsDate = new Date()\n  const printSupported: boolean = 'print' in window\n\n  let browser: Browser = 'other'\n  const userAgent = navigator.userAgent\n  if (userAgent.includes('Firefox') && userAgent.includes('Android')) {\n    browser = 'FirefoxAndroid'\n  }\n\n  const getTitle = (): string =>\n    `The TOL Project ${resultsDate\n      .toLocaleString()\n      .replace(/\\/|:/g, '-')\n      .replace(/,/g, '')}`\n\n  if (!printSupported) {\n    document.title = getTitle()\n  }\n\n  return (\n    <div style={styles.collapsible}>\n      {printSupported ? (\n        <div style={styles.printButton} className=\"do-not-print\">\n          <ReactToPrint\n            documentTitle={getTitle()}\n            content={() => ref.current}\n            trigger={() => <Button label=\"Salva risultati della simulazione\" />}\n            onAfterPrint={() => {\n              // remove the onbeforeunload listener since results are saved\n              window.onbeforeunload = null\n            }}\n          />\n        </div>\n      ) : (\n        <>\n          {browser === 'FirefoxAndroid' && <FirefoxInstructions />}\n          {browser === 'other' && <FallbackInstructions />}\n        </>\n      )}\n      <PrintDocument\n        ref={ref}\n        resultTable={props.resultTable}\n        questions={props.questions}\n        answers={props.answers}\n      />\n    </div>\n  )\n}\n\nconst docStyles = StyleSheet.create({\n  firstPage: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 4\n  },\n  li: {\n    marginBottom: 10\n  }\n})\n\nconst PrintDocument = forwardRef<HTMLDivElement, ExtendedCorrectionProps>(\n  (props: ExtendedCorrectionProps, ref) => {\n    const dateTime = `${new Date().toLocaleDateString()} alle ${new Date().toLocaleTimeString(\n      [],\n      { timeStyle: 'short' }\n    )}`\n    const { resultTable, questions, answers } = props\n    return (\n      <div className=\"print-only\" ref={ref} style={styles.doc}>\n        <div style={docStyles.firstPage}>\n          <DocumentHeader />\n          <p style={styles.centered}>Simulazione del {dateTime}</p>\n          {resultTable}\n          <p>\n            Hai delle domande sui quesiti e la loro risoluzione? Falle sul{' '}\n            <a\n              href={links.telegramPreparazioneTOL}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              style={styles.link}\n            >\n              Gruppo preparazione TOL\n            </a>{' '}\n            di PoliNetwork!\n          </p>\n          <p>\n            Nelle pagine successive troverai, suddivisi per sezione, i quesiti\n            che ti sono stati proposti con il relativo esito.\n          </p>\n        </div>\n        {(Object.entries(questions) as [Section, IQuestion[]][])\n          .sort((a, b) => sectionInfo[a[0]].order - sectionInfo[b[0]].order)\n          .map(([section, values]) => (\n            <div key={section}>\n              <b>{sectionInfo[section].name}</b>\n              <ol>\n                {values.map((q) => {\n                  const letter = answers[section].find(\n                    (a) => a?.id == q.id && a?.sub == q.sub\n                  )?.letter\n                  return (\n                    <li key={q.id + (q.sub || '')} style={docStyles.li}>\n                      <Question q={q} choice={letter} isTest />\n                    </li>\n                  )\n                })}\n              </ol>\n            </div>\n          ))}\n      </div>\n    )\n  }\n)\nPrintDocument.displayName = 'Document'\n\nfunction FirefoxInstructions() {\n  return (\n    <div className=\"do-not-print\">\n      <h3>Salva i tuoi risultati</h3>\n      <p>Il tuo browser (Firefox Android) non supporta la stampa automatica.</p>\n      <p>Per salvare i risultati segui questi passaggi: </p>\n      <ol style={styles.ol}>\n        <li>Apri il menu di Firefox</li>\n        <img src={firefoxImg1} style={styles.img} />\n\n        <li>Premi il tasto per condividere</li>\n        <img src={firefoxImg2} style={styles.img} />\n\n        <li>Nel menu che si apre, premi su \"Salva come PDF\"</li>\n        <img src={firefoxImg3} style={styles.img} />\n      </ol>\n    </div>\n  )\n}\n\nfunction FallbackInstructions() {\n  return (\n    <div className=\"do-not-print\">\n      <h3>Salva i tuoi risultati</h3>\n      <p>\n        Per il tuo browser non è supportata la stampa automatica del PDF con i\n        risultati.\n      </p>\n      <p>\n        Puoi provare ad utilizzare la funzione \"Sala come PDF\" del tuo browser\n        che potrebbe essere nel menu di condivisione oppure nel menu principale\n        del browser.\n      </p>\n      <p>\n        Ti invitiamo a segnalare il tuo browser{' '}\n        <a href=\"https://github.com/PoliNetworkOrg/TheTOLProject/issues/35\">\n          qui\n        </a>{' '}\n        in modo da poter risolvere il problema{' '}\n      </p>\n    </div>\n  )\n}\n","import Fraction from 'fraction.js'\nimport fromEntries from 'fromentries'\nimport {\n  correctionWeight,\n  getSectionName,\n  sectionInfo,\n  tengPassThreshold,\n  testPassThreshold,\n  testTotalScore\n} from '../../utils/constants'\nimport { Question, QuestionsData, Section } from '../../utils/database'\nimport { formatNumber, StyleSheet, theme } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\nimport ExtendedCorrection from './ExtendedCorrection/ExtendedCorrection'\n\nconst styles = StyleSheet.create({\n  div: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    fontSize: '11pt'\n  },\n  tableDiv: {\n    alignSelf: 'center',\n    width: '100%',\n    overflow: 'auto',\n    display: 'flex'\n  },\n  table: { borderSpacing: 0, margin: 'auto' },\n  tableCell: {\n    padding: '5px',\n    paddingInline: '10px',\n    textAlign: 'center',\n    border: `thin solid ${theme.lightBorder}`,\n    borderSpacing: '0px',\n    fontSize: '9.5pt'\n  },\n  get tableHeader() {\n    return StyleSheet.compose(this.tableCell, {\n      fontWeight: 'bold',\n      backgroundColor: theme.lightBackground,\n      textAlign: 'left'\n    })\n  },\n  centeredText: {\n    textAlign: 'center'\n  },\n  p: {\n    padding: '10px',\n    textAlign: 'justify'\n  },\n  resultTable: { display: 'flex', flexDirection: 'column' },\n  h3: {\n    marginBottom: 0,\n    paddingInline: '10px'\n  },\n  restartDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  restartTitle: {\n    textAlign: 'center',\n    maxWidth: 500\n  },\n  restartButton: {\n    margin: '12px',\n    marginBottom: '32px'\n  }\n})\n\ninterface InfoEndProps {\n  answers: AnswersData\n  questions: QuestionsData\n}\nexport default function InfoEnd(props: InfoEndProps) {\n  const { answers, questions } = props\n\n  const correctionGrid = fromEntries(\n    (Object.entries(questions) as [Section, Question[]][]).map(\n      ([section, secQuestions]) => {\n        let correct = 0,\n          notGiven = 0,\n          wrong = 0\n\n        secQuestions.forEach((q) => {\n          const answer = answers[section].find(\n            (a) => a && a.id == q.id && a.sub == q.sub\n          )\n\n          if (!answer || !answer.letter) notGiven++\n          else if (answer.letter == q.correct) correct++\n          else wrong++\n        })\n\n        const total = secQuestions.length,\n          sample = sectionInfo[section].sample,\n          sub = sectionInfo[section].sub || 1,\n          weight = sectionInfo[section].coeff\n\n        return [\n          section,\n          {\n            total,\n            correct,\n            notGiven,\n            wrong,\n            weight,\n            score: new Fraction(\n              correctionWeight.correct * correct +\n                correctionWeight.wrong * wrong +\n                correctionWeight.notGiven * notGiven\n            )\n              .div(total)\n              .mul(sample * sub)\n          }\n        ]\n      }\n    )\n  )\n\n  const score = (\n    Object.entries(correctionGrid) as [Section, typeof correctionGrid[string]][]\n  )\n    .map(([, correction]) => correction.score.mul(correction.weight))\n    .reduce((acc, curr) => acc.add(curr), new Fraction(0))\n\n  const roundedScore = parseInt(score.round(0).toString(0))\n  const testPassed = roundedScore >= testPassThreshold,\n    tengPassed = correctionGrid.ing?.correct >= tengPassThreshold\n\n  const resultTable = () => (\n    <div style={styles.resultTable}>\n      <p style={styles.centeredText}>\n        <br />\n        TOL{' '}\n        {testPassed\n          ? `superato${!tengPassed ? ' (OFA TENG)' : ''}`\n          : `non superato: OFA TEST${!tengPassed ? ' + OFA TENG' : ''}`}\n        <br />\n        Punteggio: {formatNumber(score)} / {formatNumber(testTotalScore)} (\n        {formatNumber(score, true)})\n      </p>\n      <br />\n\n      <div style={styles.tableDiv}>\n        <table style={styles.table}>\n          <tr>\n            <td></td>\n            <td style={styles.tableHeader}>Punteggio sezione</td>\n            <td style={styles.tableHeader}>N° quesiti</td>\n            <td style={styles.tableHeader}>Esatti</td>\n            <td style={styles.tableHeader}>Errati</td>\n            <td style={styles.tableHeader}>Senza risposta</td>\n          </tr>\n          {(\n            Object.entries(correctionGrid) as [\n              Section,\n              typeof correctionGrid[Section]\n            ][]\n          )\n            .sort((a, b) => sectionInfo[a[0]].order - sectionInfo[b[0]].order)\n            .map(([section, correction]) => (\n              <tr key={section}>\n                <td style={styles.tableHeader}>{getSectionName(section)}</td>\n                <td style={styles.tableCell}>\n                  {formatNumber(correction.score, true)}\n                </td>\n                <td style={styles.tableCell}>{correction.total}</td>\n                <td style={styles.tableCell}>{correction.correct}</td>\n                <td style={styles.tableCell}>{correction.wrong}</td>\n                <td style={styles.tableCell}>{correction.notGiven}</td>\n              </tr>\n            ))}\n        </table>\n      </div>\n      <br />\n    </div>\n  )\n\n  return (\n    <div style={styles.div}>\n      <div className=\"do-not-print\">{resultTable()}</div>\n\n      <ExtendedCorrection\n        answers={props.answers}\n        questions={props.questions}\n        resultTable={resultTable()}\n      />\n\n      <div className=\"do-not-print\">\n        <h3 style={styles.h3}>Come viene calcolato il punteggio</h3>\n        <p style={styles.p}>\n          Il <b>punteggio massimo</b> conseguibile{' '}\n          <b>è di {formatNumber(testTotalScore, true)}</b> e viene espresso fino\n          alla seconda cifra decimale.\n          <br />\n          L'attribuzione di <b>OFA TEST</b> (Obblighi Formativi Aggiunti)\n          avviene quando il punteggio test, arrotondato all'intero più vicino,{' '}\n          <b>è minore di {formatNumber(testPassThreshold)}</b>.<br />\n          L'attribuzione di <b>OFA TENG</b> avviene quando, considerando la sola\n          sezione di {sectionInfo.ing.name}, il numero di risposte corrette{' '}\n          <b>è inferiore a {formatNumber(tengPassThreshold)}</b>.\n          <br />\n          <br />\n          Il <b>punteggio</b> della prova viene calcolato attribuendo:\n          <ul>\n            <li>\n              {formatNumber(correctionWeight.correct)} punto ad ogni risposta\n              esatta\n            </li>\n            <li>\n              {formatNumber(correctionWeight.wrong)} punti ad ogni risposta\n              errata\n            </li>\n            <li>\n              {formatNumber(correctionWeight.notGiven)} punti per ogni risposta\n              non data\n            </li>\n          </ul>\n          e assegnando\n          <ul>\n            {Object.entries(sectionInfo).map(([, info], index) => (\n              <li key={index}>\n                peso{' '}\n                {typeof info.coeff == 'number'\n                  ? formatNumber(info.coeff)\n                  : info.coeff.toFraction()}{' '}\n                ad ogni quesito di {info.name}\n              </li>\n            ))}\n          </ul>\n          Il <b>punteggio</b> complessivo viene arrotondato all'intero più\n          vicino (es: il punteggio 59,49 viene arrotondato a 59, il punteggio\n          59,50 a 60)\n        </p>\n        <div style={styles.restartDiv}>\n          <h3 style={styles.restartTitle}>\n            Ricordati di salvare i tuoi risultati prima di iniziare un nuovo\n            test, o andranno persi!\n          </h3>\n          <Button\n            label=\"Inizia un nuovo test\"\n            style={styles.restartButton}\n            onClick={() => {\n              window.location.reload()\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { StyleSheet } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: '10px auto',\n    marginBlock: '16px',\n    maxWidth: 900,\n    textAlign: 'center'\n  },\n  h2: {\n    fontSize: '16pt'\n  }\n})\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  title?: string\n}\n\nexport default function Wrapper({ children, style, title, ...props }: Props) {\n  return (\n    <div style={{ ...styles.wrapper, ...style }} {...props}>\n      {title && <h2 style={styles.h2}>{title}</h2>}\n      {children}\n    </div>\n  )\n}\n","import { useContext } from 'react'\nimport Collapsible from 'react-collapsible'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { TestContext } from '../../utils/contexts'\nimport { StyleSheet } from '../../utils/style'\nimport Button from '../Util/Button'\nimport Wrapper from '../Util/Wrapper'\n\nconst styles = StyleSheet.create({\n  centered: {\n    display: 'block'\n  },\n  buttonDiv: {\n    margin: '16px',\n    display: 'flex',\n    fontSize: 14,\n    gap: 6\n  }\n})\n\ninterface InfoStartProps {\n  startTest: () => void\n}\nexport default function InfoStart({ startTest }: InfoStartProps) {\n  const { isDsa, toggleDsa } = useContext(TestContext)\n  const { t, i18n } = useTranslation()\n\n  return (\n    <Wrapper>\n      <p>\n        <span style={styles.centered}>\n          <b>DISCLAIMER</b>\n        </span>\n        <br />\n        {t('home.disclaimer')}\n      </p>\n      <i>{t('home.languageInfo')}</i>\n      <div style={styles.buttonDiv}>\n        <Button\n          style={{ fontSize: 14 }}\n          label={t('home.startBtn')}\n          onClick={startTest}\n        />\n        <label htmlFor=\"dsa_toggle\" style={{ userSelect: 'none' }}>\n          <input\n            id=\"dsa_toggle\"\n            type=\"checkbox\"\n            checked={isDsa}\n            onChange={toggleDsa}\n          />\n          {t('home.dsaBtn')}\n        </label>\n      </div>\n      <Collapsible trigger={<></>} open={isDsa} transitionTime={150}>\n        <p>\n          <Trans i18n={i18n}>home.dsaInfo</Trans>\n        </p>\n      </Collapsible>\n    </Wrapper>\n  )\n}\n","import { Navigate, useLocation, useNavigate } from 'react-router'\nimport { QuestionsData } from '../../utils/database'\nimport { statePair } from '../../utils/types'\nimport { AnswersData, view } from '../App'\nimport InfoEnd from './InfoEnd'\nimport InfoStart from './InfoStart'\n\ninterface InfoViewProps {\n  answers: AnswersData\n  questions: QuestionsData\n  viewState: statePair<view>\n}\nexport default function InfoView(props: InfoViewProps) {\n  const [view, setView] = props.viewState,\n    location = useLocation(),\n    navigate = useNavigate()\n\n  if (\n    (location.pathname == '/test' && !view.startsWith('TOL')) ||\n    (location.pathname == '/results' && view != 'INFO-end')\n  ) {\n    setView('INFO-start')\n    return <Navigate to=\"/\" replace />\n  }\n\n  return view == 'INFO-start' ? (\n    <InfoStart\n      startTest={() => {\n        setView('TOL-testing')\n        navigate('/test')\n      }}\n    />\n  ) : view == 'INFO-end' ? (\n    <InfoEnd answers={props.answers} questions={props.questions} />\n  ) : (\n    <div />\n  )\n}\n","export default __webpack_public_path__ + \"static/media/telegram_logo.1ca7c840.svg\";","import { links, members } from '../../utils/constants'\nimport { StyleSheet, theme } from '../../utils/style'\nimport telegramLogo from '../../static/telegram_logo.svg'\nimport Wrapper from '../Util/Wrapper'\nimport { Trans, useTranslation } from 'react-i18next'\n\nconst styles = StyleSheet.create({\n  p: {\n    margin: '20px',\n    textAlign: 'justify',\n    width: '100%'\n  },\n  centered: {\n    textAlign: 'center'\n  },\n  link: {\n    display: 'inline-flex',\n    color: theme.primary,\n    gap: '5px',\n    alignItems: 'center'\n  },\n  liDiv: {\n    display: 'flex',\n    gap: '5px',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  telegramLink: {\n    display: 'flex'\n  },\n  telegramLogo: {\n    height: '17.5px'\n  }\n})\n\nexport default function About() {\n  const { t, i18n } = useTranslation()\n  return (\n    <Wrapper title=\"About\">\n      <p style={styles.p}>\n        <Trans i18n={i18n}>about.main</Trans>\n      </p>\n      <div style={styles.p}>\n        <b>{t('about.projectTeam')}</b>\n        <br />\n        <ul>\n          {members\n            .filter((m) => !m.ah)\n            .sort((a, b) =>\n              a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n            )\n            .map((m, i) => (\n              <li key={i}>\n                <div style={styles.liDiv}>\n                  {(m.prefix || '') + ' ' + m.name}{' '}\n                  <a\n                    href={`https://t.me/${m.tg}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    style={styles.telegramLink}\n                  >\n                    <img src={telegramLogo} style={styles.telegramLogo}></img>\n                  </a>\n                </div>\n              </li>\n            ))}\n        </ul>\n        Ad hoc:\n        <ul>\n          {members\n            .filter((m) => !!m.ah)\n            .sort((a, b) =>\n              a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1\n            )\n            .map((m, i) => (\n              <li key={i}>\n                <div style={styles.liDiv}>\n                  {m.name}{' '}\n                  <a\n                    href={`https://t.me/${m.tg}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    style={styles.telegramLink}\n                  >\n                    <img src={telegramLogo} style={styles.telegramLogo}></img>\n                  </a>\n                </div>\n              </li>\n            ))}\n        </ul>\n        <br />\n        <b>{t('about.supportGroups.head')}</b>\n        <ul>\n          <li>\n            <div>\n              {t('about.supportGroups.1')}\n              <a\n                href={links.telegramTheTOLProject}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                style={styles.link}\n              >\n                The TOL Project{' '}\n                <span style={styles.telegramLink}>\n                  <img src={telegramLogo} style={styles.telegramLogo}></img>\n                </span>\n              </a>\n            </div>\n          </li>\n          <li>\n            <div>\n              {t('about.supportGroups.2')}\n              <a\n                href={links.telegramPreparazioneTOL}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                style={styles.link}\n              >\n                Gruppo preparazione TOL{' '}\n                <span style={styles.telegramLink}>\n                  <img src={telegramLogo} style={styles.telegramLogo}></img>\n                </span>\n              </a>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </Wrapper>\n  )\n}\n","import { Trans, useTranslation } from 'react-i18next'\nimport { links } from '../../utils/constants'\nimport { StyleSheet } from '../../utils/style'\nimport Wrapper from '../Util/Wrapper'\n\nconst styles = StyleSheet.create({\n  div: {\n    paddingBlock: '15px'\n  },\n  centered: {\n    textAlign: 'center',\n    margin: 0\n  },\n  licenseImg: {\n    borderWidth: 0,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    display: 'block'\n  }\n})\n\nexport function License() {\n  const { i18n } = useTranslation()\n  const components = {\n    title: (\n      <span\n        {...{ 'xmlns:dct': 'https://purl.org/dc/terms/' }}\n        property=\"dct:title\"\n      />\n    ),\n    network: (\n      <a\n        href=\"https://polinetwork.org/it/projects/\"\n        property=\"cc:attributionName\"\n        rel=\"cc:attributionURL noreferrer noopener\"\n        target=\"_blank\"\n      />\n    ),\n    cc4: (\n      <a\n        rel=\"license noreferrer noopener\"\n        href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n        target=\"_blank\"\n      />\n    ),\n    githubLicense: (\n      <a\n        {...{ 'xmlns:cc': 'https://creativecommons.org/ns#' }}\n        href={links.githubLicense}\n        rel=\"cc:morePermissions noreferrer noopener\"\n        target=\"_blank\"\n      />\n    )\n  }\n  return (\n    <Wrapper title=\"License\">\n      <p>\n        <Trans i18n={i18n} components={components}>\n          license.main\n        </Trans>\n      </p>\n      <a\n        rel=\"license noreferrer noopener\"\n        href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n        target=\"_blank\"\n        style={{ margin: 10 }}\n      >\n        <img\n          alt=\"Creative Commons License\"\n          style={styles.licenseImg}\n          src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\"\n        />\n      </a>\n    </Wrapper>\n  )\n}\n","import { AnchorHTMLAttributes } from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { links } from '../../utils/constants'\nimport Wrapper from '../Util/Wrapper'\n\nfunction Link({\n  title,\n  children,\n  href,\n  ...props\n}: AnchorHTMLAttributes<HTMLAnchorElement>) {\n  return (\n    <a href={href} target=\"_blank\" rel=\"noreferrer noopener\" {...props}>\n      {title}\n      {children}\n    </a>\n  )\n}\n\nexport default function Privacy() {\n  const { i18n } = useTranslation()\n  const components = {\n    localStorage: <Link title=\"local storage\" href={links.localStorageMDN} />\n  }\n  return (\n    <Wrapper title=\"Privacy & Cookies\">\n      <p>\n        <Trans\n          i18n={i18n}\n          components={{\n            link: components.localStorage\n          }}\n        >\n          privacy.localStorage\n        </Trans>\n      </p>\n    </Wrapper>\n  )\n}\n","import { Question } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { Answer } from '../App'\nimport RenderedText from '../Util/RenderedText'\n\nconst styles = StyleSheet.create({\n  baseText: {\n    fontSize: '11pt'\n  },\n  label: {\n    display: 'flex',\n    marginBottom: '2px'\n  },\n  radioText: {\n    display: 'flex',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    paddingInline: '10px',\n    alignItems: 'flex-start'\n  },\n  radioSpan: {\n    width: '2em',\n    float: 'left',\n    display: 'inline-block'\n  }\n})\n\ninterface AnswerFormProps {\n  currentAnswer: Answer | undefined\n  currentQuestion: Question\n  tmpAnswerState: statePair<Answer['letter']>\n}\n\nexport default function AnswerForm(props: AnswerFormProps) {\n  const letterState = props.tmpAnswerState\n\n  if (!props.currentQuestion)\n    return (\n      <span style={styles.baseText}>\n        <br />\n        No answers to display ¯\\_(ツ)_/¯\n      </span>\n    )\n\n  return (\n    <div>\n      <RadioRow\n        letter=\"a\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.a}\n      />\n      <RadioRow\n        letter=\"b\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.b}\n      />\n      <RadioRow\n        letter=\"c\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.c}\n      />\n      <RadioRow\n        letter=\"d\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.d}\n      />\n      <RadioRow\n        letter=\"e\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.e}\n      />\n      <RadioRow letter={undefined} letterState={letterState} text=\"Non so\" />\n    </div>\n  )\n}\n\ninterface RadioRowProps {\n  letter: Answer['letter']\n  letterState: statePair<Answer['letter']>\n  text: string\n}\nfunction RadioRow(props: RadioRowProps) {\n  return (\n    <tr style={styles.baseText}>\n      <label style={styles.label}>\n        <td style={styles.radioText}>\n          <span style={styles.radioSpan}>\n            {props.letter?.toUpperCase() || '?'}{' '}\n          </span>\n          <input\n            type=\"radio\"\n            value={props.letter}\n            checked={props.letter == props.letterState[0]}\n            onChange={(event) => {\n              // @ts-expect-error The value is correct\n              props.letterState[1](event.target.value || undefined)\n            }}\n          />\n        </td>\n        <td>\n          <RenderedText text={props.text} />\n        </td>\n      </label>\n    </tr>\n  )\n}\n","import { StyleSheet, theme } from '../../utils/style'\nimport { FaCheck } from 'react-icons/fa'\nimport Button from '../Util/Button'\nimport { statePair } from '../../utils/types'\nimport { Answer } from '../App'\nimport { Question } from '../../utils/database'\n\nconst styles = StyleSheet.create({\n  controlsDiv: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'flex-end',\n    fontSize: '9.5pt',\n    verticalAlign: 'middle',\n    gap: '10px',\n    paddingBlock: '10px'\n  },\n  label: { display: 'flex', alignItems: 'center' },\n  icon: { color: theme.timerGreen }\n})\n\ninterface BottomControlsProps {\n  currentQuestion: Question\n  tmpAnswerState: statePair<Answer['letter']>\n  tmpFlaggedState: statePair<boolean>\n  updateAnswer: (updatedAnswer: Answer) => void\n}\nexport default function BottomControls(props: BottomControlsProps) {\n  const [flagged, setFlagged] = props.tmpFlaggedState\n\n  if (!props.currentQuestion) return <div style={styles.controlsDiv} />\n\n  return (\n    <div style={styles.controlsDiv}>\n      <label style={styles.label}>\n        <input\n          type=\"checkbox\"\n          checked={flagged}\n          onChange={() => {\n            setFlagged(!flagged)\n          }}\n        />\n        <span>Da rivedere</span>\n      </label>\n      <Button\n        label=\"Conferma e vai alla successiva\"\n        leftIcon={() => <FaCheck style={styles.icon} />}\n        onClick={() => {\n          props.updateAnswer({\n            id: props.currentQuestion.id,\n            sub: props.currentQuestion.sub,\n            letter: props.tmpAnswerState[0],\n            flagged\n          })\n        }}\n      />\n    </div>\n  )\n}\n","import { useContext } from 'react'\nimport { Question } from '../../utils/database'\nimport { StyleSheet, theme } from '../../utils/style'\nimport { Answer } from '../App'\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io'\nimport Button from '../Util/Button'\nimport { MobileContext } from '../../utils/contexts'\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  leftContainer: {\n    display: 'flex'\n  },\n  rightContainer: {\n    display: 'flex',\n    padding: '1em',\n    gap: '5px'\n  },\n  p: {\n    textAlign: 'left',\n    fontSize: '11pt',\n    minWidth: '4em',\n    padding: '7.5px'\n  },\n  get question() {\n    return StyleSheet.compose(this.p, {\n      fontWeight: 'bold',\n      width: '7.1em',\n      paddingLeft: 0\n    })\n  },\n  get answerLetter() {\n    return StyleSheet.compose(this.p, {\n      textAlign: 'center',\n      marginInline: '5px',\n      boxShadow: theme.boxShadow\n    })\n  },\n  icon: {\n    height: '17.5px',\n    width: '17.5px',\n    color: theme.primary\n  },\n  button: {\n    paddingBlock: 0\n  }\n})\n\nconst mobileStyles = StyleSheet.create({\n  container: StyleSheet.compose(styles.container, {\n    flexDirection: 'column-reverse'\n  }),\n  rightContainer: StyleSheet.compose(styles.rightContainer, {\n    justifyContent: 'space-between'\n  })\n})\n\ninterface QuestionHeaderProps {\n  currentAnswer: Answer\n  questionIndex: number\n  sectionQuestions: Question[]\n  shiftQuestionIndex: (offset: number) => void\n}\nexport default function QuestionHeader(props: QuestionHeaderProps) {\n  const { mobile } = useContext(MobileContext)\n  return (\n    <div style={mobile ? mobileStyles.container : styles.container}>\n      <div style={styles.leftContainer}>\n        <p style={styles.question}>Domanda {props.questionIndex + 1}</p>\n        <p\n          style={StyleSheet.compose(styles.answerLetter, {\n            backgroundColor: props.currentAnswer?.flagged\n              ? theme.questionYellow\n              : props.currentAnswer?.letter\n              ? theme.questionGreen\n              : 'inherit'\n          })}\n        >\n          {(props.currentAnswer?.letter?.toUpperCase() || '') +\n            (props.currentAnswer?.flagged ? '?' : '') || ' '}\n        </p>\n        <p style={styles.p}>\n          Risposta {props.currentAnswer?.letter ? '' : 'non '}data\n        </p>\n      </div>\n      <div style={mobile ? mobileStyles.rightContainer : styles.rightContainer}>\n        <Button\n          label=\"precedente\"\n          onClick={() => props.shiftQuestionIndex(-1)}\n          style={styles.button}\n          leftIcon={() => <IoMdArrowRoundBack style={styles.icon} />}\n        />\n        <Button\n          label=\"successiva\"\n          onClick={() => props.shiftQuestionIndex(1)}\n          style={styles.button}\n          rightIcon={() => <IoMdArrowRoundForward style={styles.icon} />}\n        />\n      </div>\n    </div>\n  )\n}\n","import { StyleSheet } from '../../utils/style'\nimport GeneralPurposeCollapsible from './GeneralPurposeCollapsible'\n\nconst styles = StyleSheet.create({\n  p: {\n    margin: '2px',\n    padding: '10px',\n    textAlign: 'justify'\n  },\n  innerP: { padding: '1px', margin: 0 }\n})\n\ninterface CollapsibleTextProps {\n  label: string\n  longText: string\n  startOpen?: boolean\n}\nexport default function CollapsibleText(props: CollapsibleTextProps) {\n  return (\n    <GeneralPurposeCollapsible label={props.label} startOpen={props.startOpen}>\n      <div style={styles.p}>\n        {props.longText\n          .trim()\n          .split('\\n')\n          .map((t, i) => (\n            <p style={styles.innerP} key={i}>\n              {t}\n            </p>\n          ))}\n      </div>\n    </GeneralPurposeCollapsible>\n  )\n}\n","import { DATABASE_REF } from '../../utils/constants'\nimport { Question } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport CollapsibleText from '../Util/CollapsibleText'\nimport QuestionAttachments from '../Util/QuestionAttachments'\nimport RenderedText from '../Util/RenderedText'\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBlock: 0,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  collapsible: {\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  attachment: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    gap: '5px'\n  },\n  image: {\n    maxHeight: '500px',\n    maxWidth: '100%',\n    objectFit: 'contain'\n  }\n})\n\ninterface QuestionViewProps {\n  question: Question\n}\n\nexport default function QuestionView({ question }: QuestionViewProps) {\n  if (!question)\n    return (\n      <span style={styles.container}>No question to display ¯\\_(ツ)_/¯</span>\n    )\n\n  return (\n    <div style={{ marginBottom: question.attachments?.length ? 0 : '15px' }}>\n      {question.track && (\n        <CollapsibleText\n          label=\"mostra/nascondi brano\"\n          longText={question.track}\n        />\n      )}\n      <div style={styles.container}>\n        <RenderedText text={question.text}></RenderedText>\n        <QuestionAttachments q={question} dbRef={DATABASE_REF.STABLE} />\n      </div>\n    </div>\n  )\n}\n","import { AnswerLetter, Section, QuestionsData } from '../../utils/database'\nimport { StyleSheet, theme } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { AnswersData } from '../App'\n\nconst styles = StyleSheet.create({\n  bordered: {\n    borderBottom: 'thin solid #606060'\n  },\n  barContainer: {\n    width: '100%',\n    boxSizing: 'border-box',\n    overflow: 'auto hidden',\n    padding: '5px 2.5px 5px 0'\n  },\n  bar: {\n    display: 'flex',\n    fontSize: '9.5pt',\n    textDecoration: 'none',\n    color: theme.primary\n  },\n  cellContainer: {\n    display: 'flex',\n    flex: '1 0 25px',\n    flexDirection: 'column',\n    alignContent: 'baseline',\n    textAlign: 'center',\n    maxWidth: '4em',\n    backgroundColor: theme.lightBackground\n  },\n  cellSub: {\n    padding: '0.3em',\n    height: '1.2em',\n    boxShadow: theme.boxShadow\n  },\n  selectedCell: {\n    outline: `5px solid ${theme.primary}`,\n    marginInline: '4px',\n    color: 'black'\n  },\n  p: { margin: 'auto' }\n})\n\ninterface RecapBarProps {\n  active: boolean\n  currentQuestionIndexState: statePair<number>\n  sectionAnswers: AnswersData[Section]\n  sectionQuestions: QuestionsData[Section]\n}\nexport default function RecapBar(props: RecapBarProps) {\n  return (\n    <div style={styles.barContainer} id=\"recap-bar-container\">\n      <a\n        style={StyleSheet.compose(styles.bar, {\n          minWidth: props.sectionQuestions.length * 25 + 10\n        })}\n        {...(props.active ? { href: '#' } : {})}\n      >\n        {props.sectionQuestions.map((q, i) => {\n          const answer = props.sectionAnswers.find(\n            (a) => a && a.id == q.id && (q.sub ? q.sub == a.sub : true)\n          )\n          return (\n            <AnswerCell\n              key={i}\n              index={i}\n              letter={answer?.letter}\n              flagged={answer?.flagged || false}\n              onClick={() => {\n                if (props.active) props.currentQuestionIndexState[1](i)\n              }}\n              selected={props.active && props.currentQuestionIndexState[0] == i}\n            />\n          )\n        })}\n      </a>\n    </div>\n  )\n}\n\ninterface AnswerCellProps {\n  index: number\n  letter: AnswerLetter | undefined\n  flagged: boolean\n  onClick: () => void\n  selected: boolean\n}\nfunction AnswerCell(props: AnswerCellProps) {\n  return (\n    <div\n      style={StyleSheet.compose(\n        styles.cellContainer,\n        props.selected && styles.selectedCell\n      )}\n      onClick={props.onClick}\n    >\n      <div\n        style={StyleSheet.compose(\n          styles.cellSub,\n          styles.bordered,\n          props.selected && { fontWeight: 'bold' }\n        )}\n      >\n        <p style={styles.p}>{props.index + 1}</p>\n      </div>\n      <div\n        style={StyleSheet.compose(styles.cellSub, {\n          backgroundColor: props.flagged\n            ? theme.questionYellow\n            : props.letter\n            ? theme.questionGreen\n            : 'white'\n        })}\n      >\n        <p style={styles.p}>\n          {props.letter?.toUpperCase() || ' '}\n          {props.flagged && '?'}\n        </p>\n      </div>\n    </div>\n  )\n}\n","import { sectionInfo } from '../../utils/constants'\nimport { QuestionsData, Section } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    paddingTop: '10px',\n    paddingBottom: '20px',\n    alignItems: 'center',\n    flexDirection: 'column'\n  }\n})\n\ninterface SectionRecapProps {\n  goToNextSection: () => void\n  section: Section\n  sectionAnswers: AnswersData[Section]\n  sectionQuestions: QuestionsData[Section]\n  secondsUsed: number\n  minutes: number\n}\nexport default function SectionRecap({\n  minutes,\n  secondsUsed,\n  ...props\n}: SectionRecapProps) {\n  const order = sectionInfo[props.section].order\n  const seconds = minutes * 60\n  return (\n    <div style={styles.container}>\n      <p>\n        {'Tempo utilizzato: '}\n        <span>\n          {displayTime((secondsUsed / 60) % 60)}:{displayTime(secondsUsed / 60)}\n          :{displayTime(secondsUsed % 60)}\n        </span>\n        {' / '}\n        <span>\n          {displayTime(minutes / 60)}:{displayTime(minutes % 60)}:\n          {displayTime(seconds % 60)}\n        </span>\n        {' ('}\n        <span>\n          {displayTime((seconds - secondsUsed) / 60 / 60)}:\n          {displayTime(((seconds - secondsUsed) / 60) % 60)}:\n          {displayTime((seconds - secondsUsed) % 60)} rimanente)\n        </span>\n      </p>\n      <Button\n        label={\n          order == Math.max(...Object.values(sectionInfo).map((i) => i.order))\n            ? 'Vedi esito del test'\n            : 'Prossima sezione'\n        }\n        onClick={props.goToNextSection}\n      />\n    </div>\n  )\n}\n\nfunction displayTime(time: number) {\n  return Math.floor(time).toLocaleString(undefined, {\n    minimumIntegerDigits: 2\n  })\n}\n","import { useContext } from 'react'\nimport { TimerResult } from 'react-timer-hook'\nimport { StyleSheet, theme } from '../../utils/style'\nimport { FiClock } from 'react-icons/fi'\nimport { MobileContext } from '../../utils/contexts'\n\nconst alertThreshold = 60\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: '5px'\n  },\n  clockWrapper: {\n    color: theme.timerGreen,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: '5px'\n  },\n  numbers: {\n    display: 'flex',\n    fontWeight: 'bold',\n    color: 'inherit',\n    border: '2px solid',\n    borderRadius: '4px',\n    height: '1.75em',\n    fontSize: '1.25em',\n    alignItems: 'center',\n    paddingInline: '10px'\n  },\n  expiring: {\n    color: theme.timerRed\n  },\n  icon: {\n    color: 'inherit',\n    height: '2.5em',\n    width: 'auto'\n  },\n  p: {\n    display: 'flex',\n    fontSize: '0.75em',\n    maxWidth: '12em',\n    textAlign: 'left',\n    wordWrap: 'normal'\n  }\n})\n\ninterface TimerProps {\n  timer: TimerResult\n}\nexport default function Timer(props: TimerProps) {\n  const { mobile } = useContext(MobileContext)\n  const { timer } = props\n\n  return (\n    <div\n      style={\n        mobile\n          ? StyleSheet.compose(styles.container, {\n              alignSelf: 'flex-end',\n              marginBottom: '1em'\n            })\n          : styles.container\n      }\n    >\n      <div\n        style={StyleSheet.compose(\n          styles.clockWrapper,\n          (timer.hours * 60 + timer.minutes) * 60 + timer.seconds <\n            alertThreshold && styles.expiring\n        )}\n      >\n        <FiClock style={styles.icon} />\n        <div style={styles.numbers}>\n          {timer.hours.toLocaleString(undefined, {\n            minimumIntegerDigits: 2\n          })}\n          :\n          {timer.minutes.toLocaleString(undefined, {\n            minimumIntegerDigits: 2\n          })}\n          :\n          {timer.seconds.toLocaleString(undefined, { minimumIntegerDigits: 2 })}\n        </div>\n      </div>\n      {mobile ? undefined : (\n        <p style={styles.p}>\n          Tempo rimanente\n          <br /> per la sezione corrente\n        </p>\n      )}\n    </div>\n  )\n}\n","import { useContext } from 'react'\nimport { TimerResult } from 'react-timer-hook'\nimport { getSectionName } from '../../utils/constants'\nimport { MobileContext } from '../../utils/contexts'\nimport { Section, QuestionsData } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\nimport Timer from './Timer'\n\nconst styles = StyleSheet.create({\n  outerDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  innerDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    gap: '15px',\n    fontSize: '11pt'\n  },\n  exitBtn: {\n    background: '#d81e11',\n    border: '2px solid #d81e11',\n    fontSize: '9.5pt',\n    color: 'white',\n    borderRadius: 2,\n    cursor: 'pointer'\n  }\n})\n\nconst mobileStyles = StyleSheet.create({\n  outerDiv: StyleSheet.compose(styles.outerDiv, {\n    flexDirection: 'column'\n  }),\n  innerDiv: StyleSheet.compose(styles.innerDiv, {\n    width: '100%',\n    justifyContent: 'space-between'\n  })\n})\n\ninterface TopControlsProps {\n  active: boolean\n  answers: AnswersData\n  closeSection: () => void\n  exitTest: () => void\n  currentSection: Section\n  timer: TimerResult\n  questions: QuestionsData\n}\n\nexport default function TopControls(props: TopControlsProps) {\n  const { mobile } = useContext(MobileContext)\n  const { currentSection } = props\n\n  return (\n    <div style={mobile ? mobileStyles.outerDiv : styles.outerDiv}>\n      <div style={mobile ? mobileStyles.innerDiv : styles.innerDiv}>\n        <div>\n          <p>\n            Sezione: <b>{getSectionName(currentSection)}</b> <br />\n            Riposte:{' '}\n            {\n              props.answers[currentSection].filter((a) => !!a.letter).length\n            } / {props.questions[currentSection].length}\n            {mobile && <br />}\n            {props.active &&\n              ` (${props.answers[currentSection].reduce(\n                (acc, curr) => acc + (curr.flagged ? 1 : 0),\n                0\n              )} da rivedere)`}\n          </p>\n        </div>\n        {props.active && (\n          <>\n            <Button label=\"Chiudi sezione\" onClick={props.closeSection} />\n            <button style={styles.exitBtn} onClick={props.exitTest}>\n              Abbandona il test\n            </button>\n          </>\n        )}\n      </div>\n      <Timer timer={props.timer} />\n    </div>\n  )\n}\n","import { useContext, useEffect, useState } from 'react'\nimport {\n  useNavigate,\n  unstable_useBlocker as useBlocker,\n  Navigate\n} from 'react-router-dom'\nimport { useTimer } from 'react-timer-hook'\nimport {\n  DSATimeModifier,\n  getNextSection,\n  sectionInfo\n} from '../../utils/constants'\nimport { TestContext } from '../../utils/contexts'\nimport { Section, QuestionsData } from '../../utils/database'\nimport { StyleSheet } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { Answer, AnswersData, TimeRecord, view } from '../App'\nimport AnswerForm from './AnswerForm'\nimport BottomControls from './BottomControls'\nimport QuestionHeader from './QuestionHeader'\nimport QuestionView from './QuestionView'\nimport RecapBar from './RecapBar'\nimport SectionRecap from './SectionRecap'\nimport TopControls from './TopControls'\n\nconst styles = StyleSheet.create({\n  testing: { display: 'flex', flexDirection: 'column' }\n})\n\ninterface QuestionsFormProps {\n  answersState: statePair<AnswersData>\n  questions: QuestionsData\n  sectionState: statePair<Section>\n  timeRecordState: statePair<TimeRecord>\n  viewState: statePair<view>\n}\nexport default function QuestionsForm(props: QuestionsFormProps) {\n  const { isDsa } = useContext(TestContext)\n  const minutesCoeff = isDsa ? DSATimeModifier : 1\n  const [qIndex, originalSetQIndex] = useState(0),\n    tmpFlaggedState = useState(false),\n    tmpAnswerState = useState<Answer['letter']>(),\n    alertDisplayedState = useState(false)\n\n  const [currentSection, setSection] = props.sectionState,\n    [view, setView] = props.viewState,\n    [answers, setAnswers] = props.answersState,\n    [timeRecord, setTimeRecord] = props.timeRecordState\n\n  const sectionQuestions = props.questions[props.sectionState[0]],\n    currentQuestion = sectionQuestions[qIndex],\n    currentAnswer = answers[currentSection][qIndex],\n    shouldShowAlert =\n      !alertDisplayedState[0] &&\n      (tmpAnswerState[0] != currentAnswer?.letter ||\n        tmpFlaggedState[0] != (currentAnswer?.flagged || false))\n\n  useEffect(() => {\n    // called when the qIndex is updated (the user changes question)\n    // sets the scroll of the recap bar container to keep the selected question in view\n    const recapBarElement = document.getElementById('recap-bar-container')\n    if (!recapBarElement) return\n\n    // this width works ok considering margins, widths, and paddings of the elements\n    const width = recapBarElement.clientWidth - 40\n    // 25 is the min width of a question cell, 2px margin to see the cell before\n    const maxScroll = qIndex * 25 - 2\n    const minScroll = maxScroll - width\n\n    // the scrollLeft musth be kept between the two values\n    if (recapBarElement.scrollLeft < minScroll)\n      recapBarElement.scrollLeft = minScroll\n    if (recapBarElement.scrollLeft > maxScroll)\n      recapBarElement.scrollLeft = maxScroll\n  }, [qIndex])\n\n  const showAlert = () => {\n    alert(\n      `Se prima non premi \"Conferma e vai alla successiva\" la risposta non verrà salvata.`\n    )\n    alertDisplayedState[1](true)\n  }\n\n  const closeSection = () => {\n    if (shouldShowAlert) return showAlert()\n    // else it's already reset by setQIndex\n\n    setView('TOL-secRecap')\n    setQIndex(0)\n    tmpAnswerState[1](undefined)\n    tmpFlaggedState[1](false)\n\n    const nextAnswers = answers\n    nextAnswers[currentSection] = nextAnswers[currentSection].map((a) => ({\n      ...a,\n      flagged: false\n    }))\n    setAnswers(nextAnswers)\n\n    const nextTR = timeRecord\n    nextTR[currentSection] =\n      sectionInfo[currentSection].minutes * minutesCoeff * 60 -\n      ((timer.hours * 60 + timer.minutes) * 60 + timer.seconds)\n    setTimeRecord(nextTR)\n\n    timer.restart(new Date(), false)\n  }\n\n  const setQIndex = (\n    index: React.SetStateAction<number>,\n    ignoreAlert = false\n  ) => {\n    if (shouldShowAlert && !ignoreAlert) {\n      showAlert()\n    } else {\n      const next = answers[currentSection][index as number]\n\n      tmpFlaggedState[1](next?.flagged || false)\n      tmpAnswerState[1](next?.letter || undefined)\n      alertDisplayedState[1](false)\n\n      originalSetQIndex(index)\n    }\n  }\n\n  const shiftQIndex = (offset: number, ignoreAlert = false) => {\n    const next =\n      (qIndex + offset + sectionQuestions.length) % sectionQuestions.length || 0\n    return setQIndex(next, ignoreAlert)\n  }\n\n  const timer = useTimer({\n    expiryTimestamp: getTimerExpDate(\n      sectionInfo[currentSection].minutes * minutesCoeff\n    ),\n    onExpire: () => {\n      timer.seconds = 0\n      closeSection()\n    }\n  })\n\n  const currentQuestionIndexState: statePair<number> = [qIndex, setQIndex]\n  if (!props.questions) return <span>Loading...</span>\n\n  const getViewElement = () => {\n    const navigate = useNavigate()\n\n    if (view == 'TOL-testing')\n      return (\n        <div style={styles.testing}>\n          <QuestionHeader\n            currentAnswer={currentAnswer}\n            questionIndex={qIndex}\n            shiftQuestionIndex={shiftQIndex}\n            sectionQuestions={sectionQuestions}\n          />\n          <QuestionView question={currentQuestion} />\n          <AnswerForm\n            currentAnswer={currentAnswer}\n            currentQuestion={currentQuestion}\n            tmpAnswerState={tmpAnswerState}\n          />\n          <BottomControls\n            currentQuestion={currentQuestion}\n            tmpAnswerState={tmpAnswerState}\n            tmpFlaggedState={tmpFlaggedState}\n            updateAnswer={(a) => {\n              const next = answers\n              next[currentSection][qIndex] = a\n              setAnswers(next)\n              shiftQIndex(1, true)\n            }}\n          />\n        </div>\n      )\n    else if (view == 'TOL-secRecap')\n      return (\n        <SectionRecap\n          goToNextSection={() => {\n            const nextSection = getNextSection(currentSection)\n            if (nextSection) {\n              setSection(nextSection)\n              timer.restart(\n                getTimerExpDate(sectionInfo[nextSection].minutes * minutesCoeff)\n              )\n              setView('TOL-testing')\n            } else {\n              setView('INFO-end')\n              navigate('/results', { replace: true })\n            }\n          }}\n          section={currentSection}\n          secondsUsed={timeRecord[currentSection] || 0}\n          sectionAnswers={answers[currentSection]}\n          sectionQuestions={props.questions[currentSection]}\n          minutes={sectionInfo[currentSection].minutes * minutesCoeff}\n        />\n      )\n    else return <Navigate to=\"/\" replace />\n  }\n\n  useBlocker(view.startsWith('TOL'))\n  const exit_warn =\n    'Sei sicuro di voler abbandonare il test? I progressi non verranno salvati.'\n  const handleExitTest = () => {\n    const confirmExit = confirm(exit_warn)\n    if (confirmExit) {\n      // user confirmed to exit the test\n      // set onbeforeunload to null, otherwise the prompt is shown twice\n      window.onbeforeunload = null\n      location.reload()\n    } else {\n      // if aborted, set back the reload protection\n      window.onbeforeunload = () => exit_warn\n    }\n  }\n\n  return (\n    <div>\n      <TopControls\n        active={view == 'TOL-testing'}\n        answers={answers}\n        closeSection={closeSection}\n        exitTest={handleExitTest}\n        currentSection={currentSection}\n        questions={props.questions}\n        timer={timer}\n      />\n      <RecapBar\n        active={view == 'TOL-testing'}\n        currentQuestionIndexState={currentQuestionIndexState}\n        sectionAnswers={answers[currentSection]}\n        sectionQuestions={sectionQuestions}\n      />\n      {getViewElement()}\n    </div>\n  )\n}\n\nfunction getTimerExpDate(minutes: number) {\n  const res = new Date()\n  res.setSeconds(res.getSeconds() + minutes * 60)\n  return res\n}\n","import { StyleSheet, theme } from '../../utils/style'\n\nconst styles = StyleSheet.create({\n  div: {\n    height: '15px',\n    backgroundColor: theme.primary\n  },\n  text: {\n    color: 'white',\n    margin: 'auto .5em',\n    fontSize: '9.5pt'\n  }\n})\n\ninterface SeparatorProps {\n  text?: string\n}\nexport default function Separator(props: SeparatorProps) {\n  return (\n    <div style={styles.div} className=\"do-not-print\">\n      <p style={styles.text}>{props.text || ''}</p>\n    </div>\n  )\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { DATABASE_REF } from '../../utils/constants'\nimport {\n  DatabaseStore,\n  Question as IQuestion,\n  Section,\n  sheetDict\n} from '../../utils/database'\nimport { baseStyle } from '../../utils/style'\nimport Question from '../Util/Question'\nimport Select from '../Util/Select'\n\ninterface Props {\n  dbs?: DatabaseStore\n}\nexport default function QPreview(props: Props) {\n  const [isCustom, setIsCustom] = useState(true)\n\n  return (\n    <div style={baseStyle}>\n      <Select\n        label=\"Question type\"\n        entries={[\n          { value: 'custom', label: 'Custom' },\n          { value: 'database', label: 'Database' }\n        ]}\n        defaultValue=\"custom\"\n        onChange={(v) => setIsCustom(v === 'custom')}\n      />\n      {isCustom ? <CustomQ /> : <DatabaseQ {...props} />}\n    </div>\n  )\n}\n\nconst sections = Object.entries(sheetDict).map(([key, value]) => ({\n  label: key,\n  value\n}))\nconst createID = (q: IQuestion) => q.id + (q.sub ? ' - ' + q.sub : '')\n\nfunction DatabaseQ({ dbs }: Props) {\n  if (!dbs) return <div style={baseStyle}>Loading...</div>\n  const [dbRef, setDbRef] = useState<DATABASE_REF>(DATABASE_REF.STABLE)\n  const db = useMemo(() => dbs[dbRef], [dbRef])\n\n  const [section, setSection] = useState<Section>(sections[0].value)\n\n  const ids = useMemo(\n    () => db[section].filter((q) => q.id).map((q) => createID(q)),\n    [db, section]\n  )\n  const [id, setID] = useState(ids[0])\n\n  const question = useMemo(\n    () =>\n      db[section].find((q) => {\n        const [i, s] = id.split(' - ')\n        return q.id == i && (s ? q.sub == s : true)\n      }),\n    [id, section, db]\n  )\n\n  useEffect(() => {\n    if (!ids.includes(id)) setID(ids[0])\n  }, [ids])\n\n  return (\n    <div>\n      <Select\n        label=\"Database\"\n        entries={[\n          { value: DATABASE_REF.STABLE, label: 'Production' },\n          { value: DATABASE_REF.MAIN, label: 'Development' }\n        ]}\n        defaultValue={dbRef}\n        onChange={(v) => setDbRef(v as DATABASE_REF)}\n      />\n\n      <Select\n        label=\"Section\"\n        entries={sections}\n        value={section}\n        onChange={(v) => {\n          setSection(v as Section)\n        }}\n      />\n\n      <Select\n        label=\"ID\"\n        entries={ids.map((id) => ({ label: id, value: id }))}\n        value={id}\n        onChange={setID}\n      />\n\n      {question ? (\n        <QuestionRender q={question} dbRef={dbRef} />\n      ) : (\n        <p>Question not found</p>\n      )}\n    </div>\n  )\n}\n\nfunction CustomQ() {\n  const [text, setText] = useState('')\n  const [a, setA] = useState('')\n  const [b, setB] = useState('')\n  const [c, setC] = useState('')\n  const [d, setD] = useState('')\n  const [e, setE] = useState('')\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const t = (f: (..._: any[]) => any) => (e: any) => f(e.target.value)\n\n  return (\n    <div>\n      <label>\n        Testo:\n        <br />\n        <textarea value={text} onChange={t(setText)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        A:\n        <br />\n        <textarea value={a} onChange={t(setA)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        B:\n        <br />\n        <textarea value={b} onChange={t(setB)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        C:\n        <br />\n        <textarea value={c} onChange={t(setC)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        D:\n        <br />\n        <textarea value={d} onChange={t(setD)}></textarea>\n      </label>\n      <br />\n\n      <label>\n        E:\n        <br />\n        <textarea value={e} onChange={t(setE)}></textarea>\n      </label>\n      <br />\n      <br />\n      <QuestionRender q={{ text, answers: { a, b, c, d, e } } as IQuestion} />\n    </div>\n  )\n}\n\ninterface QuestionRenderProps {\n  q: IQuestion\n  dbRef?: DATABASE_REF\n}\nfunction QuestionRender({ q, dbRef }: QuestionRenderProps) {\n  return <Question q={q} isDebug showAttachments dbRef={dbRef} />\n}\n","import { useEffect, useState } from 'react'\nimport {\n  Route,\n  useLocation,\n  createHashRouter,\n  createRoutesFromElements,\n  RouterProvider,\n  Outlet,\n  Navigate\n} from 'react-router-dom'\nimport { RibbonContainer, RightCornerRibbon } from 'react-ribbons'\nimport {\n  AnswerLetter,\n  Section,\n  QuestionsData,\n  readDatabase,\n  selectRandomQuestions,\n  DatabaseStore\n} from '../utils/database'\nimport { StyleSheet } from '../utils/style'\nimport DBPreview from './pages/DBPreview'\nimport ErrorView from './ErrorView'\nimport Footer from './Footer'\nimport Header from './Header'\nimport InfoView from './InfoView/InfoView'\nimport About from './pages/About'\nimport { License } from './pages/License'\nimport Privacy from './pages/Privacy'\nimport QuestionsForm from './QuestionsForm/QuestionsForm'\nimport Separator from './Util/Separator'\nimport QPreview from './pages/QPreview'\n\nimport { MobileContext, TestProvider } from '../utils/contexts'\nimport { LocalStorage } from '../utils/storage'\nimport { DATABASE_REF } from '../utils/constants'\nimport { statePair } from '../utils/types'\n\nexport type view = 'INFO-start' | 'TOL-testing' | 'TOL-secRecap' | 'INFO-end'\n\nexport interface Answer {\n  id: string\n  sub?: string\n  letter: AnswerLetter | undefined\n  flagged: boolean\n}\n\nexport type AnswersData = Record<Section, Answer[]>\n\nexport type TimeRecord = Partial<Record<Section, number>>\n\nconst styles = StyleSheet.create({\n  app: { paddingInline: '8px' },\n  routeContainer: { paddingInline: '7.5px' }\n})\n\nexport default function App() {\n  const [dbs, setDbs] = useState<DatabaseStore>()\n  const [questions, setQuestions] = useState<QuestionsData>()\n  const [view, setView] = useState<view>('INFO-start')\n  const sectionState = useState<Section>('ing')\n  const answersState = useState<AnswersData>({\n    ing: [],\n    mat: [],\n    com: [],\n    fis: []\n  })\n  const timeRecordState = useState<TimeRecord>({})\n  const [loadingError, showError] = useState<[string, Error] | []>([])\n  const [mobile, setMobile] = useState<boolean>(false)\n\n  async function loadDatabases() {\n    try {\n      const stable = await readDatabase(DATABASE_REF.STABLE)\n      const main = await readDatabase(DATABASE_REF.MAIN)\n      setDbs({\n        [DATABASE_REF.STABLE]: stable,\n        [DATABASE_REF.MAIN]: main\n      })\n      setQuestions(selectRandomQuestions(stable))\n    } catch (e) {\n      showError([\n        'There has been an issue while fetching the database data. Please retry later.',\n        e as Error\n      ])\n    }\n  }\n\n  useEffect(() => {\n    LocalStorage.checkLastChange() // privacy check\n    loadDatabases()\n\n    setMobile(window.innerWidth < 768)\n    window.addEventListener('resize', () => {\n      setMobile(window.innerWidth < 768)\n    })\n  }, [])\n\n  const router = createHashRouter(\n    createRoutesFromElements(\n      <Route path=\"/\" element={<Layout viewState={[view, setView]} />}>\n        <Route\n          index\n          element={\n            // Don't ever think about moving this to an external component.\n            <div>\n              <ErrorView\n                hidden={!loadingError[0]}\n                display={loadingError[0] || ''}\n                internal={loadingError[1]}\n              />\n              {view.startsWith('TOL') && questions ? (\n                <QuestionsForm\n                  answersState={answersState}\n                  questions={questions as QuestionsData}\n                  sectionState={sectionState}\n                  timeRecordState={timeRecordState}\n                  viewState={[view, setView]}\n                />\n              ) : view.startsWith('INFO') && questions ? (\n                <InfoView\n                  answers={answersState[0]}\n                  questions={questions}\n                  viewState={[view, setView]}\n                />\n              ) : (\n                <></>\n              )}\n            </div>\n          }\n        />\n        <Route\n          path=\"/test\"\n          element={\n            questions && view.startsWith('TOL') ? (\n              <QuestionsForm\n                answersState={answersState}\n                questions={questions as QuestionsData}\n                sectionState={sectionState}\n                timeRecordState={timeRecordState}\n                viewState={[view, setView]}\n              />\n            ) : (\n              <Navigate to=\"/\" replace />\n            )\n          }\n        />\n        <Route path=\"/results\" element={<div />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/license\" element={<License />} />\n        <Route path=\"/privacy\" element={<Privacy />} />\n        <Route path=\"/dbpreview\" element={<DBPreview dbs={dbs} />} />\n        <Route path=\"/qpreview\" element={<QPreview dbs={dbs} />} />\n      </Route>\n    )\n  )\n  return (\n    <MobileContext.Provider value={{ mobile }}>\n      <TestProvider>\n        <RibbonContainer>\n          {window &&\n            new URL(window.location.href).hostname ==\n              'polinetworkorg.github.io' && (\n              <RightCornerRibbon backgroundColor=\"#cc0000\" color=\"white\">\n                DEV\n              </RightCornerRibbon>\n            )}\n          <RouterProvider router={router} />\n        </RibbonContainer>\n      </TestProvider>\n    </MobileContext.Provider>\n  )\n}\n\ninterface LayoutProps {\n  viewState: statePair<view>\n}\nfunction Layout({ viewState }: LayoutProps) {\n  const [view] = viewState\n  const location = useLocation()\n  const testPaths = ['/', '/test', '/results']\n\n  useEffect(() => {\n    const testingURL = testPaths.includes(location.pathname)\n    if (!testingURL || view === 'INFO-start') {\n      // in other pages or on the start of the test, the listener shouldn't be set\n      window.onbeforeunload = null\n    } else if (view.startsWith('TOL')) {\n      // set the listener only if view is during a test, at the recap it is set in ExtendedCorrection.tsx\n      window.onbeforeunload = () => {\n        return 'Sicuro di voler uscire? Il test è ancora in corso'\n      }\n    }\n  }, [location])\n\n  return (\n    <div style={styles.app}>\n      <Header viewState={viewState} />\n      <Separator />\n      <div style={styles.routeContainer}>\n        <Outlet />\n      </div>\n      <Separator />\n      {!view.startsWith('TOL') && view != 'INFO-end' && <Footer view={view} />}\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { I18nextProvider } from 'react-i18next'\nimport i18n from './i18n'\n\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nextProvider i18n={i18n}>\n      <App />\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}